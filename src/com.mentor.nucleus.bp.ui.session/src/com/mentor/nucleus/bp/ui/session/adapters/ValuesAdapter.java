package com.mentor.nucleus.bp.ui.session.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/session/adapters/ValuesAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: ../com.mentor.nucleus.bp.ui.tree/arc/create_generic_adapters.inc
// Version:      $Revision$
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//========================================================================
// Licensed under the Apache License, Version 2.0 (the "License"); you may not 
// use this file except in compliance with the License.  You may obtain a copy 
// of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the 
// License for the specific language governing permissions and limitations under
// the License.
//======================================================================== 
//
// This class is responsible for decoupling the client model entity
// class AttributeValue_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.*;
import com.mentor.nucleus.bp.ui.session.SessionExplorerContentProvider;
/**
 * This file adapts the meta-model entity; 'AttributeValue_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Project 
 * Technology MC-Java code generator product.
 * </p>
 */
public class ValuesAdapter implements ITreeContentProvider {
	static ValuesAdapter valuesadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static ValuesAdapter getInstance() {
		if (valuesadapter == null) {
			valuesadapter = new ValuesAdapter();
		}
		return valuesadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		Instance_c result11 = Instance_c
				.getOneI_INSOnR2909((AttributeValue_c) arg);
		if (result11 != null) {
			return result11;
		}
		return null;
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
    int resultSize = 0;
    _c [] runtimevalues_3304_0 = 
(AttributeValue_c)arg)
;


    resultSize += runtimevalues_3304_0.length;
    _c [] runtimevalues_3304_1 = 
(AttributeValue_c)arg)
;


    resultSize += runtimevalues_3304_1.length;
    Object [] result = new Object [resultSize];
    int count = 0;
    for (int i = 0 ; i < runtimevalues_3304_0.length ; i++) {
      result[count] = runtimevalues_3304_0[i];
      count++;
    }
    for (int i = 0 ; i < runtimevalues_3304_1.length ; i++) {
      result[count] = runtimevalues_3304_1[i];
      count++;
    }
    return result;
  }
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
    _c [] runtimevalues_3304_0 = 
(AttributeValue_c)arg)
;


    if (runtimevalues_3304_0.length > 0) return true;
    _c [] runtimevalues_3304_1 = 
(AttributeValue_c)arg)
;


    if (runtimevalues_3304_1.length > 0) return true;
    return false;
  }
}
