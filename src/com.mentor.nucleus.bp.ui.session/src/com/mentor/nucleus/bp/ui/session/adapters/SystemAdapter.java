package com.mentor.nucleus.bp.ui.session.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/session/adapters/SystemAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: ../com.mentor.nucleus.bp.ui.tree/arc/create_generic_adapters.inc
// Version:      $Revision$
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//========================================================================
// Licensed under the Apache License, Version 2.0 (the "License"); you may not 
// use this file except in compliance with the License.  You may obtain a copy 
// of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the 
// License for the specific language governing permissions and limitations under
// the License.
//======================================================================== 
//
// This class is responsible for decoupling the client model entity
// class SystemModel_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IFolder;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.ui.session.SessionExplorerPlugin;
import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.*;
import com.mentor.nucleus.bp.ui.session.SessionExplorerContentProvider;
/**
 * This file adapts the meta-model entity; 'SystemModel_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Project 
 * Technology MC-Java code generator product.
 * </p>
 */
public class SystemAdapter implements ITreeContentProvider {
	static SystemAdapter systemadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static SystemAdapter getInstance() {
		if (systemadapter == null) {
			systemadapter = new SystemAdapter();
		}
		return systemadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		return Ooaofooa.getDefaultInstance();
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
		int resultSize = 0;
		Domain_c[] domains_28_0 = Domain_c
				.getManyS_DOMsOnR2948(ComponentInstance_c
						.getManyI_EXEsOnR2948(Domain_c
								.getManyS_DOMsOnR28((SystemModel_c) arg)));

		SessionExplorerContentProvider.sort(domains_28_0);
		resultSize += domains_28_0.length;
		Component_c[] components_4606_1 = Component_c.getManyC_CsOnR2955(
				ComponentInstance_c.getManyI_EXEsOnR2955(Component_c
						.getManyC_CsOnR4608(ComponentPackage_c
								.getManyCP_CPsOnR4606((SystemModel_c) arg))),
				new ClassQueryInterface_c() {
					public boolean evaluate(Object candidate) {
						return ((Component_c) candidate).Isparentexecuting() == false;
					}
				});

		SessionExplorerContentProvider.sort(components_4606_1);
		resultSize += components_4606_1.length;
		ComponentReference_c[] componentreferences_4606_2 = ComponentReference_c
				.getManyCL_ICsOnR2963(
						ComponentInstance_c.getManyI_EXEsOnR2963(ComponentReference_c.getManyCL_ICsOnR4201(Component_c.getManyC_CsOnR4608(ComponentPackage_c
								.getManyCP_CPsOnR4606((SystemModel_c) arg)))),
						new ClassQueryInterface_c() {
							public boolean evaluate(Object candidate) {
								return ((ComponentReference_c) candidate)
										.Isparentexecuting() == false;
							}
						});

		SessionExplorerContentProvider.sort(componentreferences_4606_2);
		resultSize += componentreferences_4606_2.length;
		Package_c[] packages_1401_3 = Package_c.getManyEP_PKGsOnR1401(
				(SystemModel_c) arg, new ClassQueryInterface_c() {
					public boolean evaluate(Object candidate) {
						return ((Package_c) candidate)
								.Isexecutingorischildexecuting() == true;
					}
				});

		SessionExplorerContentProvider.sort(packages_1401_3);
		resultSize += packages_1401_3.length;
		Object[] result = new Object[resultSize];
		int count = 0;
		for (int i = 0; i < domains_28_0.length; i++) {
			result[count] = domains_28_0[i];
			count++;
		}
		for (int i = 0; i < components_4606_1.length; i++) {
			result[count] = components_4606_1[i];
			count++;
		}
		for (int i = 0; i < componentreferences_4606_2.length; i++) {
			result[count] = componentreferences_4606_2[i];
			count++;
		}
		for (int i = 0; i < packages_1401_3.length; i++) {
			result[count] = packages_1401_3[i];
			count++;
		}
		return result;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
		Domain_c[] domains_28_0 = Domain_c
				.getManyS_DOMsOnR2948(ComponentInstance_c
						.getManyI_EXEsOnR2948(Domain_c
								.getManyS_DOMsOnR28((SystemModel_c) arg)));

		if (domains_28_0.length > 0)
			return true;
		Component_c[] components_4606_1 = Component_c.getManyC_CsOnR2955(
				ComponentInstance_c.getManyI_EXEsOnR2955(Component_c
						.getManyC_CsOnR4608(ComponentPackage_c
								.getManyCP_CPsOnR4606((SystemModel_c) arg))),
				new ClassQueryInterface_c() {
					public boolean evaluate(Object candidate) {
						return ((Component_c) candidate).Isparentexecuting() == false;
					}
				});

		if (components_4606_1.length > 0)
			return true;
		ComponentReference_c[] componentreferences_4606_2 = ComponentReference_c
				.getManyCL_ICsOnR2963(
						ComponentInstance_c.getManyI_EXEsOnR2963(ComponentReference_c.getManyCL_ICsOnR4201(Component_c.getManyC_CsOnR4608(ComponentPackage_c
								.getManyCP_CPsOnR4606((SystemModel_c) arg)))),
						new ClassQueryInterface_c() {
							public boolean evaluate(Object candidate) {
								return ((ComponentReference_c) candidate)
										.Isparentexecuting() == false;
							}
						});

		if (componentreferences_4606_2.length > 0)
			return true;
		Package_c[] packages_1401_3 = Package_c.getManyEP_PKGsOnR1401(
				(SystemModel_c) arg, new ClassQueryInterface_c() {
					public boolean evaluate(Object candidate) {
						return ((Package_c) candidate)
								.Isexecutingorischildexecuting() == true;
					}
				});

		if (packages_1401_3.length > 0)
			return true;
		return false;
	}
}
