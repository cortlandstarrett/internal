========================================================================

File:      $RCSfile: dts0100610916.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Renaming a formalized component renames only the domain, not the component

1. Abstract
-----------
When a formalized domain is renamed the canvas displays the new name but the
component name remains unchanged.  This can be seen by looking at the 
component name in the properties view after the rename operation.  This issue 
shall modify this behavior so the formal component and its domain are both 
renamed.

2. History
----------
None

3. Document References
----------------------
[1] ClearQuest DEI dts0100610916
[2] ClearQuest DEI dts0100591845
    Component reference shows component name not domain name
[3] <cvs>D:\Hend_Essam\DocumentationWS\Documentation\internal\technical\notes\
                                                dts0100610916\dts0100610916.dnt

4. Background
-------------
None

5. Design
---------
5.1 see [3]

6. Implementation Comments
--------------------------
6.1   Test changes
CoreTest-SystemLevelCoreSuite gives 3 unexpected failures in the class 
ComponentFormalizationTests in functions 
testFormalizedComponentNames(),testNoBadDomainFileAfterEditingFormalizedDomain()
and testLinkWithEditorForNewlyFormalizedComponent(),All three functions have 
this line : 
Component_c component = Component_c.ComponentInstance(modelRoot,
				new ClassQueryInterface_c() {

					public boolean evaluate(Object candidate) {
						return ((Component_c) candidate).getName().equals(
								"IF Scope Test Component");
					}

				});
as noticed the Component name is compared with "IF Scope Test Component" 
due to the changes done within this issue the name is set to be the same as the 
domain one so the change done in the comparison string to be 
testDomain.getName() and the line becomes :
Component_c component = Component_c.ComponentInstance(modelRoot,
				new ClassQueryInterface_c() {

					public boolean evaluate(Object candidate) {
						return ((Component_c) candidate).getName().equals(
								testDomain.getName());
					}

				});
 
7. Unit Test
------------
7.1 see [3]

8. Code Changes
---------------
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component/Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/Context Menu Entry Functions/Context Menu Entry Functions.xtuml
com.mentor.nucleus.bp.core.test/src/com.mentor.nucleus.bp.core.test/
    ComponentFormalizationTests.java



End
---

$Log: dts0100610916.int,v $
Revision 1.2  2010/01/05 04:32:05  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.1  2009/11/23 15:44:04  hessam
job:dts0100610916

Implementation note
