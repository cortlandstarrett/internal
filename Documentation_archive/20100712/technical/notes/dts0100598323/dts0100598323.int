========================================================================

File:      $RCSfile: dts0100598323.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Build stalls saving unsaved buffer

1. Abstract
-----------
When building a model with unsaved changes or dirty editors it displays a 
dialog for the user to choose to save these changes before the build or not. 
If the user chooses yes this causes a halt, a deadlock occurs on the progress 
monitor between the building thread and the saving thread. 

2. History
----------


3. Document References
----------------------
[1] ClearQuest DEI dts0100598323


4. Background
-------------
When building a project the building of a component may stall when there are 
unsaved dirty buffers. When this happens, build progress will not change, and
BridgePoint will go unresponsive and the process will have to be killed.

To reproduce error:
_-Open any model in xtUML modeling
_-Make a change in any OAL to cause a dirty editor (do NOT save the change)
_-From Edge perspective, select the project, and select Run > build 
_-When it prompts asking if dirty buffers should be saved before
  building choose yes
R-Build hangs

5. Design
---------
5.1 The dirty buffers saving decision shall not be displayed to the user
5.2 Change the value in the preferences store of 
    PREF_SAVE_DIRTY_EDITORS_BEFORE_LAUNCH to "never" instead of "prompt" 
    so it wont prompt for user to ask if it would save dirty buffers before 
    build hence it wont halt
5.3 Change that value by passing the following parameters,
    IInternalDebugUIConstants.PREF_SAVE_DIRTY_EDITORS_BEFORE_LAUNCH
    and "never" to the static function setValue() of the preferenceStore 
    

6. Implementation Comments
--------------------------
6.1 Analysis
6.1.1 When the model builder is run a check for dirty buffers is made. This 
      check is made when the function DebugUIPlugin.preLaunchSave() is called. 
6.1.2 From within the preLaunchSave() function it gets the value a string of
      saveDirty to determine weather to prompt for a dialog to ask the user to 
      save the dirty buffers or not          
6.1.3 It gets the corresponding value form the preference store to  
      IInternalDebugUIConstants.PREF_SAVE_DIRTY_EDITORS_BEFORE_LAUNCH
6.1.4 The default value returned from the preference store for this is "prompt"
      which causes the dialog to prompt the user for decision 
6.1.5 If the user chose yes then it causes the halt,a deadlock occurs on the 
      progress monitor between the building thread and the saving thread.

6.2 A xtUML project has several builders defined for it.They are defined in the 
    project's ".project" file.The builders run in the order they are listed.
     
6.3 The current order for them is 
6.3.1 org.eclipse.ui.externaltools.ExternalToolBuilder 
6.3.2 com.mentor.nucleus.bp.mc.mc3020.export_builder
      (which is an Incremental builder)
6.3.3 org.eclipse.ui.externaltools.ExternalToolBuilder
      (is an external builder which is the MC3020 builder)
6.3.4 com.mentor.nucleus.builder.CodeLabBuilder
      (which is the EDGE builder)

6.4 The first two builders run fine no problems, it's the third builder, the 
    external builder that when it's called it triggers the call for the function 
    DebugUIPlugin.preLaunchSave() This function looks up the value of the 
    preference store weather to prompt for the user the save decision or not.
    
6.5 The halt occurs as a result of a deadlock that occurs between the build
    Thread and the save thread for the progress monitor
    
6.6 Calling the save function form other context while building causes the same
    deadlock  

6.7 There were some possible solutions for this situation 
6.7.1 Check for the dirty editors in the pre-build 
      (in function build() or setInitializationData() in the ExportBuilder)
       _-If there are not dirty buffers continue with the build
       _-If there are dirty buffers the prompt the user to save the buffers 
       _- If the user chooses to save the buffers perform the save
       _- If the user chooses NOT to save the buffers continue.
       The problem with that solution is that saving process causes the 
       deadlock with the building thread and the save operation on the progress 
       monitor.
       This Approach was Not taken.
       

6.7.2 The other solution is preventing the prompt from being displayed
       by modifying the value in the preference store so that it won't prompt
       for user decision. 
       This solution worked well and prevented the dead lock between the save 
       and the building thread.
       This Approach was taken.
       
6.7.2.1 That modification was done in the newly added function 
        setInitializationData() in the ExportBuilder.
        This function is a part of IExecutableExtension interface.  
        The eclipse infrastructure calls this function prior to calling the
        build() function.

6.7.2.2 The modification added is the following:

public void setInitializationData(IConfigurationElement config, 
       String propertyName, Object data) throws CoreException {
    	
    	//should be sure to invoke this method on their superclass.
    	super.setInitializationData(config, propertyName, data);
    	
        DebugUIPlugin.getDefault().getPreferenceStore().setValue(
        IInternalDebugUIConstants.PREF_SAVE_DIRTY_EDITORS_BEFORE_LAUNCH, 
        "never");	
         }
        
6.7.3 If the user wants to get the dirty buffers saved before build he should 
      check the option "save automatically before build" this option is found 
      in Window > Preferences > General > Workspace
    
    
7. Unit Test
------------
7.1 This is a manual test to Test when dirty buffers are present 
_-Open any model in xtUML modeling
_-Make a change in any OAL to cause a dirty editor (do NOT save the change)
_-From Edge perspective, select the project, and select Run > build 
R-It deosn't prompt asking if dirty buffers should be saved before building
R-Build is successful


8. Code Changes
---------------
The implementation is in branch R3_0_3-HKA-dts0100598323 
!!! Note that a new branch was created for promotion.  It is 
Review-598323-621060-636427-640143.  See 598323-621060-636427-640143.int for
more information.

com.mentor.nucleus.bp.mc.mc3020/src/com.mentor.nucleus.bp.mc.mc3020/
    ExportBuilder.java
com.mentor.nucleus.bp.mc.mc3020/plugin.xml


End
---

$Log: dts0100598323.int,v $
Revision 1.8  2010/01/07 16:04:18  rmulvey
job:dts0100598323 dts0100621060 dts0100636427 dts0100640143
Because of the recent copyright change this issue branch was stale.  I am promoting many issue together and want a clean start branch, so I created Review-598323-621060-636427-640143.  I created 598323-621060-636427-640143.int to describe the situation and updated each separate implementation note with a link to the new review branch.

Revision 1.7  2010/01/05 08:19:39  hkhaled
job:dts0100598323
Committing implementation note for the issue dts0100598323

Revision 1.6  2010/01/05 04:31:09  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.5  2010/01/04 14:35:38  hkhaled
job:dts0100598323
Committing implementation note for the issue dts0100598323

Revision 1.4  2010/01/04 14:10:57  hkhaled
job:dts0100598323
Committing implementation note for the issue dts0100598323

Revision 1.3  2010/01/04 13:29:58  hkhaled
job:dts0100598323
Committing implementation note for the issue dts0100598323

Revision 1.2  2010/01/04 13:28:50  hkhaled
job:dts0100598323
Committing implementation note for the issue dts0100598323

Revision 1.1  2010/01/04 13:16:56  hkhaled
job:dts0100598323
Committing implementation note for the issue dts0100598323
