========================================================================

File:      $RCSfile: dts0100696781.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Verifier hangs at launching.

1. Abstract
-----------
The verifier is experiencing deadlocks in some situations.  This issue is 
raised to investigate and fix the deadlocks.
 
2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100696781
    Verifier hangs at launching
[2] Looper model 
    svn://phoenix.azt.mentorg.com/arch1/products/tiger/doc_repository/trunk/Models/Test/Looper
[3] parseInUI reference
[4] ClearQuest DEI dts0100697977
    ClassCastException hit when hovering over connection while shape tool
    selected
    
4. Background
-------------
During testing, it was found that the Looper model[2] would not start in
Verifier. This was traced to a deadlock issue where an instance extent, for
State Machine Event instances, and the UI SyncExec entry semaphore were both
required for the parser and for loading triggered by the parser to complete. 

5. Design
---------
5.1 Run the parser in the UI Thread
This problem is occurring now, because the work for[3] moved the loader into
the UI thread to prevent other deadlock problems identified elsewhere. One
solution considered for this problem was to have the parser run in the UI
thread. In this way, deadlock cannot occur because the UI thread already has the
SyncExec entry semaphore. However this is not a viable option, because the
parser design calls for it to run in a separate thread to keep the UI responsive
during activity editing.

5.2 Don't block on instance extent read
Examination of the deadlocked stacks show that the loader was performing State
Machine Event data upgrade. During this upgrade, the instances visited have
reflexive associations modified, but no modification to the instance population
itself is attempted. It is therefore safe to allow this upgrade to proceed
without blocking. Since the code which is accessing the state machine events is
blocked waiting for the load to complete, it is also safe to allow the upgrade
to happen without additional blocking.

Because this option has no detrimental effect on the user experience, this is
the preferred solution.

The data upgrade code in ImportHelper.updateElementOrder() is modified to avoid
using <element_name>Instances(), because this includes a synchronized block
which is directly causing the deadlock. Instead, we obtain an array of elements
by obtaining the instance list for the element and calling toArray() on it.

Unfortunately, this approach still blocks, because InstanceList is a specialized
Vector which is a synchronized class, so no methods may be called on it while
another thread has a lock on the instance. The solution to this problem is to
change to using the more modern ArrayList which is not synchronized. This allows
the data upgrade to complete without deadlocking.

The change to use ArrayList requires some careful thought, because thread safety 
policy is relaxed by moving away from a synchronized class. To minimize the
differences, every method of ArrayList (except toArray) is overloaded by
InstanceList and redeclared as synchronized.

6. Implementation Comments
--------------------------
6.1 During investigation of the deadlock issue, it was noted that there were
many cases where a viewer was being scheduled for a refresh on an element that
already had a refresh pending. UIUtil.refreshViewer() was modified to
incorporate a List that records for each viewer the elements scheduled for 
refresh. If the element is found in the list, or if a refresh is already
scheduled for the whole tree, the request is ignored. The element is removed
from the list just before the refresh is asynchronously started, so that
requests coming in once the refresh itself has started are not missed.

6.2 Prevent ClassCastException in graphics [4]

A ClassCastException is hit when a shape tool is selected and the user hovers
over a connection.  GEF asks the currently focused symbol for a command to
create the shape, and as the class is written it only supports a diagram not a
connection.

The fix for this is to ignore connections when asking for a shape create
command.

7. Unit Test
------------
7.1 Deadlock test
_- Run SMA QA issue dts0100638168
_R issue passes

7.2 All unit tests pass

8. Code Changes
---------------
Branch name: Review-dts0100696781-01

com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.common/
    InstanceList.java
com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.util/UIUtil.java

com.mentor.nucleus.bp.core.test/src/com.mentor.nucleus.bp.core.test.cpts/
    CPSDTElementResolver.java
com.mentor.nucleus.bp.core.test/expected_results/Activity_3/Activity_3-111
com.mentor.nucleus.bp.core.test/expected_results/Activity_3/Activity_3-111.jpg
com.mentor.nucleus.bp.core.test/expected_results/AssignClass_2/1048578-5
com.mentor.nucleus.bp.core.test/expected_results/AssignClass_2/1048578-5.jpg
com.mentor.nucleus.bp.core.test/expected_results/CommunicationTest_6/
    CommunicationTest_6-105
com.mentor.nucleus.bp.core.test/expected_results/CommunicationTest_6/
    CommunicationTest_6-105.jpg
com.mentor.nucleus.bp.core.test/expected_results/CommunicationTest_8/
    CommunicationTest_8-111
com.mentor.nucleus.bp.core.test/expected_results/CommunicationTest_8/
    CommunicationTest_8-111.jpg
com.mentor.nucleus.bp.core.test/expected_results/SequenceTest_44/
    SequenceTest_44-103
com.mentor.nucleus.bp.core.test/expected_results/SequenceTest_44/
    SequenceTest_44-103.jpg
com.mentor.nucleus.bp.core.test/expected_results/SequenceTest_46/
    SequenceTest_46-111
com.mentor.nucleus.bp.core.test/expected_results/SequenceTest_46/
    SequenceTest_46-111.jpg
com.mentor.nucleus.bp.core.test/expected_results/SequenceTest_6/
    SequenceTest_6-103.jpg
com.mentor.nucleus.bp.core.test/expected_results/SequenceTest_9/
    SequenceTest_9-103.jpg
com.mentor.nucleus.bp.core.test/expected_results/
    TigerNatureTestSetup_CreatePackage/TigerNatureTestSetup_CreatePackage-108
com.mentor.nucleus.bp.core.test/expected_results/
    TigerNatureTestSetup_CreatePackage/
    TigerNatureTestSetup_CreatePackage-108.jpg
com.mentor.nucleus.bp.core.test/expected_results/UseCaseTest_6/UseCaseTest_6-111
com.mentor.nucleus.bp.core.test/expected_results/UseCaseTest_6/
    UseCaseTest_6-111.jpg

com.mentor.nucleus.bp.io.core/src/com.mentor.nucleus.bp.io.core/
    ImportHelper.java

com.mentor.nucleus.bp.ui.canvas/src/com.mentor.nucleus.bp.ui.canvas/Cl_c.java

com.mentor.nucleus.bp.ui.graphics/src/
    com.mentor.nucleus.bp.ui.graphics.policies/GraphicsXYLayoutPolicy.java

com.mentor.nucleus.bp.ui.text.test/src/
    com.mentor.nucleus.bp.ui.text.test.i372Tests/
    NavigationAfterModelElementDeletionTest.java




End
---

$Log: dts0100696781.int,v $
Revision 1.7  2010/06/22 20:07:49  rmulvey
job:dts0100696781
Addressed the review minutes.

Revision 1.6  2010/06/22 19:17:05  rmulvey
job:dts0100696781
Updated the note to include the code changes list.

Revision 1.5  2010/06/22 19:06:17  rmulvey
job:dts0100696781
Added a reference to the Looper model

Revision 1.4  2010/06/22 16:50:30  tlondon
Job: dts0100696781

Add note about class cast exception fix

Revision 1.3  2010/06/22 11:09:41  campbell
Job: dts0100696781
Add test.

Revision 1.2  2010/06/22 10:56:32  campbell
Job: dts0100696781
Updated with details of deadlock fix and performance enhancement.

Revision 1.1  2010/06/22 00:22:44  rmulvey
job:dts0100696781
Introduced a note.   Right now it only contains information about a model update change added to support issue dts0100696781.
