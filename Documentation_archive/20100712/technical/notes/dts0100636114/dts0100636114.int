========================================================================

File:      $RCSfile: dts0100636114.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
xtUML-AUTOSAR: Inconsistency between the arxml generation and the C generation

1. Abstract
-----------
This note is to cover the implementation of updating the MC to generate a
consistent Rte_Call API name with the one generated from ARXML.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100636114 - xtUML to AUTOSAR Inconsistency between
    the ARXML generation and the C generation
[2] ClearQuest DEI dts0100580443- BP AUTOSAR
[3] xtUML to AUTOSAR transformations document
    http://beta.wv.mentorg.com/tenmile_svn/tenmile/trunk/documentation/notes/   
    dts0100581974/xtUML_AUTOSAR_transformations.doc
[4] Tick_test VSI project - \\wv\dfs\bridgepoint\field_data\dts0100636114
[5] Tick_test2 VSI project - \\wv\dfs\bridgepoint\field_data\dts0100636114
[6] Genericx86 VSI project - \\wv\dfs\bridgepoint\field_data\dts0100636114

4. Background
-------------
4.1 The RTE specs specify the Rte_Call API pattern as:
    Std_ReturnType
    Rte_Call_<p>_<o> ( [INRte_Instance<instance>],
                       [IN|IN/OUT|OUT]<data_1>...
                       [IN|IN/OUT|OUT]<data_n>)
    Where <p> is the port name and <o> the operation within the client-server
    interface categorizing the port.

4.2 Rte_Call API includes zero or more IN, IN/OUT and OUT parameters.
      - IN parameters are passed by value for primitive data types and by 
	reference for all other types.
      - OUT parameters are always by reference.
      - IN/OUT parameters are passed by value when they are primitive data 
	types and the call is asynchronous, and by reference for all 
	other cases.
		 
4.3 The xtUML to ARXML builder is responsible for generating ARXML software
    component templates from the xtUML models [3].

5. Design
---------
5.1 The xtUML to ARXML builder generates the following:
 Rte_Call_pt_<xtUML_port_name>_<xtUML_operation_name>_op_<xtUML_operation_name>
    where
      - The AUTOSAR port name is "pt_<xtUML_port_name>_<xtUML_operation_name>"
      - The AUTOSAR operation name is "op_<xtUML_operation_name>"
      
	While the AUTOSAR model compiler generates the Rte API call as
    Rte_Call_pt_<xtUML_port_name>_op_<xtUML_operation_name> where
      - The AUTOSAR port name is "pt_<xtUML_port_name>"
      - The AUTOSAR operation name is "op_<xtUML_operation_name>" 
      
    So, Change the Rte_Call name generated from the AUTOSAR model compiler to
    match the one generated from xtUML to ARXML builder.

6. Implementation Comments
--------------------------	  
6.1 The operation's parameter at the server runnable was passed by reference
    in the generated C code while the Rte expects it to be by value.
	
    So, change it to be passed by value for primitive data types unless the
    user chose to pass it by reference.

7. Unit Test
------------
7.1 Using the Tick_test project (passing parameter by value)
	  _- Import the Genericx86 project [6] into workspace.
	  _- Right click on the project and select "Build Project"
      _R Project build succeeded
      
      _- Import the Tick_test project [4] into workspace
      _- Right click on the project and select "Build Project"
      _R Project build succeeded
      _R The Rte_Call APIs' generated names from the model compiler will follow
 Rte_Call_pt_<xtUML_port_name>_<xtUML_operation_name>_op_<xtUML_operation_name>

7.2 Using the Tick_test2 project (passing parameter by reference)
	  _- Import the Genericx86 project [6] into workspace.
	  _- Right click on the project and select "Build Project"
      _R Project build succeeded
      
      _- Import the Tick_test2 project [5] into workspace
      _- Right click on the project and select "Build Project"
      _R Project build succeeded

8. Code Changes
---------------
Branch: <cvs>/Branches/R3_0_3-DME-636114

model_compilers/mc3020/arc/q.component.port.arc
model_compilers/mc3020/arc/t.component.port.autosar.c

End
---

$Log: dts0100636114.int,v $
Revision 1.3  2010/01/05 04:31:41  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.2  2009/12/03 18:46:23  domedhat
job:dts0100636114
update implementation note.

Revision 1.1  2009/12/02 18:41:02  domedhat
job:dts0100636114
implementation note
