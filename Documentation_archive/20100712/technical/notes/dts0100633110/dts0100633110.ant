========================================================================

File:      $RCSfile: dts0100633110.ant,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Analysis Note
Define a team-wide test procedure for the BridgePoint spring2010 release

1. Abstract
-----------
Prior to the spring2010 BridgePoint release a team-wide test is being run.  
This note describes this test.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100633110
[2] ClearQuest DEI dts0100656045
    Fix JUnit tests - Parent issue
[3] Documentation/internal/process/Procedures/qa_procedures.txt
    Procedures defined for using the ClearQuest SMA QA product.
[4] http://devnet.wv.mentorg.com/env/change_mgmt/MGC_CQ_Specifics/state_models/state_desc.html
    ClearQuest State Model as Used at Mentor Graphics
[5] ClearQuest DEI dts0100675805 
    Create a hook in the BridgePoint junit tests to update the SMA QA test system 
    
4. Background
-------------
A product currently exists in ClearQuest that is named SMA QA.  The SMA QA 
product was created as a proof of concept for the BridgePoint test procedure 
that is described in this analysis.  This ClearQuest product was named SMA QA 
because the test system is flexible enough to be easily reused by any product.
Although the product name will be changed as described in [§5.2.1].  The system
shall be referred to as the "CQ SMA QA" system throughout this document.


5. Analysis
-----------
5.1 Requirements
5.1.1 Define a procedure that creates a test system that is open and simple 
      enough that anyone with MentorGraphics ClearQuest credentials can define 
      a new test [3 § 2], run a test [3 § 3], and/or run reports to see the 
      status of tests available and tests run [3 § 5].  
5.1.2 The procedure shall be incorporated into the BridgePoint process
5.1.3 The procedure shall provide a mechanism for bad tests to be removed.
      A bad test is a test which is placed in the postponed state [§5.3] and 
      the Test Manager determines it does not provide sufficient value to 
      run the test in the future [3 § 4.1.2].
5.1.4 The procedure shall allow the test base to grow and improve over time as
      new problems are discovered and fixed.

5.2 BridgePoint Team QA Roles
5.2.1 Test Writer
      [3 § 2]
5.2.2 Tester
      [3 § 3]
5.2.3 Test Manager
      [3 § 4]      
5.2.4 Software Engineer
      [3 § 5]      

5.3 CQ SMA QA System
5.3.1 For each product used by SMA QA there will be a new product defined  
      named "SMA QA - <product Name>" where <product name> is the product 
      being tested.  For example, there will be a "SMA QA - BridgePoint" 
      product.
5.3.2 The categories for each defined SMA QA product shall be the same as
      the categories for the product being tested.
5.3.3 The version field shall refer to the version(s) the issue will be tested
      under.  This list will grow over time as new versions are ready to
      test.
5.3.4 The description field shall define a test or refer to a test definition 
      [3 § 2.3]. 
5.3.5 Where applicable, the Resolution > Related To field shall refer to the 
      CQ issue that this SMA QA issue is testing.
5.3.6 Comments in the notes section shall be used to determine when the test 
      was was run, pass/fail, and reason for failure if the test failed.
5.3.6.1 After running a test, the Tester [§5.1.2, 3 § 3] is required to enter
      a comment with information that allows the system to be queried.
5.3.7 Using the notes field as described above allows us to capture all 
      information of each time a test is run.  
      
5.4 Issue Lifecycle
    The life cycle of a CQ issue is defined here: [4].  The SMA QA product will 
    adhere to this lifecycle as it must.  However, because this is being used 
    as a test-tracking/QA-report system the states need additional description.
    This section describes amendments to the normal CQ DEI lifecycle [4].
5.4.1  A test must be in the assigned state in order to be run.  It is the job 
       of the test manager [3 §4.2] to move issues from the submitted to the 
       assigned state.
5.4.2 If the Tester finds an error in the test, she will change the state of 
      the issue to "Information Requested".  Doing this automatically assigns
      the issue to the issue submitter to fix.      
5.4.3 The only time a test shall be closed is when it is determined to be a 
      test that is not of value, or it is a duplicate.  A tester may mark an
      issue resolved [3 §3.2], but only the test manager can close a SMA QA 
      issue [3 §4.1.2].
5.4.4 When a test is automated, PSF6 shall be set to "Automated".  However, the 
      state of the issue shall remain unchanged (it shall remain assigned).  This
      allows the issue to be updated from the automated test each time we 
      choose to enable this feature of the BridgePoint junit tests [§6.3]
5.4.5 Issues that should not be run shall be put into the "Postponed" state
      [3 §4.1 §5]      

5.5 Test Cycle Flow
  _- New test issues flow into the system at any time
  _- Test Manager starts a new test cycle [3 §4.1]
  _- Testers start running the tests
  _- Failed Tests are examined by Software Engineers [3 §5]
  _- Test gets put back into the "Ready to Run" state [3 §6.3.1],
     Information Requested state, or Postponed state based on what is
     found. 
  _- Test Manager monitors the test cycle until there are no 
     failing tests and no tests in the "Ready to run" state.
  _- Test cycle complete      
  
		
6. Work Required
----------------
6.1 Modify the SMA QA system
6.1.1 Remove all the existing "SMA QA" product specific fields
6.1.2 Rename Product "SMA QA" to  "SMA QA - BridgePoint"
6.1.3 Add "Not Sure" to the BridgePoint components list
6.1.4 Add all BridgePoint categories to the new  "SMA QA - BridgePoint" product 
6.1.5 Name PSF6 of the "SMA QA - BridgePoint" product "Test Type"  
      and populate its list box with the following options: 
      Manual - Never Automate
      Manual - Automate in future
      Automated
6.1.6.1  Setup the "SMA QA - BridgePoint" product so that this PSF6 field is 
     required during new issue creation.
6.2 Update the BridgePoint development templates and notes to account for the
    integration of the  "ClearQuest SMA QA - BridgePoint" system.
6.2.1 In the final-review checklist add a check to assure that manual tests are
    specified in the SMA QA - BridgePoint product and a reference to that test
    issue(s) is present in the unit test section.   
6.2.2 In the promotion checklist add the same check specified above [§6.2.1] 

6.3 Add a hook in the BridgePoint Unit tests to update the SMA QA system with 
    the test status this hook must  follow the same procedure a Tester would 
    perform after running a test  [3 §3.2].  This hook should be disabled by 
    default, because it should only be utilized prior to releases (to prevent 
    unnecessary updates to CQ).  This hook allows the CQ SMA QA  products to 
    report on regression tests that have been automated.  Note that for 
    reporting purposes it is important that this this hook assure the version 
    tested is include once (and ONLY once) in the version field.
    
6.3.1 A separate issue is raised for this issue [5].

6.4 Seed the SMA QA system with a group of tests. 
    In order for the spring2010 test cycle to start, an initial set of tests 
    must be created to "seed" the SMA QA system.  These issues shall be 
    called-out in the design note. 
  

7. Acceptance Test
------------------
There is no test for this issue.

End
---

$Log: dts0100633110.ant,v $
Revision 1.6  2010/03/23 19:58:15  rmulvey
job:dts0100633110
Addressed review observations

Revision 1.5  2010/03/16 20:54:20  rmulvey
job:dts0100633110
Updated after receiving some pre-review observations.

Revision 1.4  2010/03/16 20:03:18  rmulvey
job:dts0100633110
I added  reference to the Software Engineer role.

Revision 1.3  2010/03/16 20:00:44  rmulvey
job:dts0100633110
Added more detail including specifying how the CQ queries will be written.

Revision 1.2  2010/03/16 06:36:36  rmulvey
job:dts0100633110
Fixed a typo

Revision 1.1  2010/03/16 06:30:14  rmulvey
job:dts0100633110
Introduced analysis note

