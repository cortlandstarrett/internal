========================================================================

File:      $RCSfile: dts0100534114.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
[Supported date operators generate "incompatible operands" error messages in 
 some class operations]


1. Abstract
-----------
- The core type of  "date" , "inst_ref<Timer>" and "timestamp" system level 
  data type must be the same as in the domain data type package.  Currently 
  they are not.  This causes an "Incompatible operands" error when in cases 
  where the user manipulates or compares the same named type that comes from the
  two different places.

2. History
----------


3. Document References
----------------------
[1] ClearQuest DEI dts0100534114
[2] dts0100534114.dnt
[3] BZ #3984 http://phoenix.azt.mentorg.com/bugzilla/show_bug.cgi?id=3984
    "dts0100534114: Supported date operators generate "incompatible operands" 
      error messages in some class operations"

4. Background
-------------
4.1 There is default data type package in the system level & in domain level, 
    they must be the same.  this error "Incompatible operands for a relational 
    expression" only occurs inside components, not in regular domains.
  
4.2 As in "date" data type, Inside a domain, the user data type "date" is of 
    core data type inst<Mapping>.  According to the manual, "greater than" & 
    "less than" are supported operators for this core data type.
    If you formalize a component to this domain, the data type package inside 
    the domain is emptied.  BP will now find "date" in the project level data 
    type package. But here it is defined as an inst_ref<Mapping>.  Which is 
    probably the reason comparisons between dates fail.
    The BP documentation lists operands between values of type 'date', but when 
    used to compare date types in some class operations generates an error 
    message.Message says: "Incompatible operands for a relational expression"

5. Design
---------
5.1 The core type of "date" , "inst_ref<timer>" and "timestamp" at
    the system level data type are changed
        
        ----------------------------------------------------------------------
                           |   Old Core Type      |   New Core Type
        ----------------------------------------------------------------------           
         date              |   inst_ref<Mapping>  |   inst<Mapping> 
        ----------------------------------------------------------------------
         inst_ref<Timer>   |   inst<Mapping>      |   inst_ref<Mapping>
        ----------------------------------------------------------------------
         timestamp         |   inst_ref<Mapping>  |   inst<Mapping> 
        ----------------------------------------------------------------------    

5.2 New project
  5.2.1 The createDatatypes() function in ImportHelper.java is updated to make 
        the default system level datatypes for "date","inst_ref<Timer>" & 
        "timestamp" use the new core types outlined in 5.1.

5.3 Projects in the workspace & Import "Existing projects into workspace"
  5.3.1 The date type package of workspace projects that have the old wrong 
        core data type will changed to take the right ones 
  5.3.2 Any project that is imported to the workspace will be checked if it has
        wrong data types or not.  If it does, they will be changed to the right 
        ones.
  5.3.3 Function "migrateSLDTs()" is added in ImportHelper.  java for the 
        previous two points "5.3.1" & "5.3.2" , this new function is called when
        the project is loaded in the memory.
        
5.4 Import "Bridgepoint Model"                         
   5.4.1 There is no change for this, as the default system level 
         datatypes are not allowed to be exported with the model.  So, at 
         importing the used datatype package is the one of the imported target 
         project.       
        

6. Implementation Comments
--------------------------

7. Unit Test
------------
7.1 see [2]

7.2 
   _- Create new "xtUML project"
   _R The core type of "date" , "inst_ref<Timer>" and "timestamp" of the system
      level data type must be
           date            --->   inst<Mapping>
           inst_ref<timer> --->   inst_ref<Mapping>
           timestamp       --->   inst<Mapping>
           
7.3
   _- Import "Existing projects into workspace" for project that has wrong core
      datatype 
   _R Look at the core type of "date" , "inst_ref<Timer>" and "timestamp" at the
      system level data type package,it must be  
           date            --->   inst<Mapping>
           inst_ref<timer> --->   inst_ref<Mapping>
           timestamp       --->   inst<Mapping> 
           
7.4 Junit test is created
  7.4.1 "SLDTTests" test is added to "IOMdlTestSuite2", to test the creation of 
        the new project that system level data type takes the correct core type.            
                   

8. Code Changes
---------------
>com.mentor.nucleus.bp.io.core/src/com.mentor.nucleus.bp.io.core/
    ImportHelper.java

com.mentor.nucleus.bp.io.mdl.test/src/(default package)/IOMdlTestSuite2.java
com.mentor.nucleus.bp.io.mdl.test/src/com.mentor.nucleus.bp.io.mdl.test/
    SLDTTests.java


End
---

$Log: dts0100534114.int,v $
Revision 1.6  2010/03/22 15:15:02  kbrown
job:dts0100534114
Updated INT to fix code changes section.

Revision 1.5  2010/02/22 18:58:24  mahalim
job:dts0100534114
implementation note after review minutes

Revision 1.4  2010/02/22 16:52:23  mahalim
job:dts0100534114
updating the .int after review

Revision 1.3  2010/02/22 16:02:19  mahalim
job:dts0100534114
updating

Revision 1.2  2010/02/22 15:33:16  mahalim
job:dts0100534114
rewording the abstract

Revision 1.1  2010/02/21 13:27:30  mahalim
job:dts0100534114
Implementation note
