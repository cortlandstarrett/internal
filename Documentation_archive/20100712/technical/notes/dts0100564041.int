========================================================================

File:      $RCSfile: dts0100564041.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Address Class and Association scoping issues.

1. Abstract
-----------
Relationships and class key letters currently need to be unique within the
system being modeled. This note documents the changes required to only require
uniqueness within a component.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100564041

4. Background
-------------
Component functionality has been introduced relatively recently and name scoping
requirements were not considered in the initial design. This issue addresses
this by removing the requirement that class key letters and association numbers
be unique across the entire system.

5. Analysis
-----------
There is one validation function for each of the two areas whose behavior must
be modified. The affected functions are:

5.1 Object_keyletters_validate()
This is called when the parser recognizes an object key letter string in the
input action language. The same operation is invoked, no matter what context
the key letters are encountered. For example, key letters appear in a navigation
chain context (CA[R21]->CB[R30]->CD[R40]) and also appear in a select from
instances statement context.

5.2 Relationship_validate()
This operation is called when an association reference is encountered by the
parser. The same comment as was made for class key letters applies; no matter
the context in which the association reference (R??) appears, the same operation
is called by the parser to validate it.

6. Design
---------
6.1 Change scope of object key letter validation
The activity OAL for Object_keyletters_validate() is first of all reworked to
obtain a block instance immediately on entry. After performing the original
select from instances where key letters match, we then navigate from the block
to the containing body and call associateWithComponent(). We then traverse R694
to find out if a component is present. If one is present, the selection is
performed again, but this time navigating down to the class set from the
component. This additional selection effectively reduces the scope of the
check as required.

6.2 Change scope of association number validation
The analogous change is made for associations. The two activities are now so
symmetrical, no additional explanation is required for this operation.

7. Implementation Comments
--------------------------
7.1 Erroneous error message
Both operations showed an error that referred to running audit. Since this
feature is not currently available these references are removed.

7.2 New error message for class key letters.
Due purely to inconsistencies between the previous implementations of these
operations, duplicate class key letters were not detected. The OAL in both
operations are harmonized to provide exactly the same behavior.

7.3 Code layout clean up
To facilitate comparison between the two operations, the OAL is rearranged and
reformatted.

7.4 Test changes
As detailed below in section 9, a new component and classes were added to
Models/ComponentSyntaxTest to test the new scoping behavior. Some additional
selection code was required in some existing tests to ensure they obtained the
correct test model classes.

8. Unit Test
------------
New unit tests are created in oal.test to demonstrate that:

8.1 Out of scope duplicates are permitted.
8.2 In scope duplicates are still detected.
8.3 References to classes or associations in another component are not
    permitted.
8.4 In scope singletons parse correctly.

9. Code Changes
---------------
com.mentor.nucleus.bp.als.oal.test/src/(default package)/OALTestSuite.java
com.mentor.nucleus.bp.als.oal.test/src/com.mentor.nucleus.bp.als.oal.test/
    ComponentScopeTest.java
com.mentor.nucleus.bp.als.oal.test/src/com.mentor.nucleus.bp.als.oal.test/
    ComponentSyntaxTest.java
com.mentor.nucleus.bp.als.oal.test/src/com.mentor.nucleus.bp.als.oal.test/
    ImplicitComponentAddressTest.java

Models/models/Models/ComponentSyntaxTest/ComponentSyntaxTest.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/
    Component Scoping Test.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/
    Component Scoping Test/Component Scoping Test.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/
    Component Scoping Test/Bad Duplicate Class I/Bad Duplicate Class I.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/
    Component Scoping Test/Bad Duplicate Class II/Bad Duplicate Class II.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/
    Component Scoping Test/Good Duplicate Class II/Good Duplicate Class II.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/Datatypes/
    Datatypes.xtuml
Models/models/Models/ComponentSyntaxTest/Component Scoping Test/
    External Entities/External Entities.xtuml
Models/models/Models/ComponentSyntaxTest/Good Syntax/Good Syntax/
    Good Syntax.xtuml
Models/models/Models/ComponentSyntaxTest/Good Syntax/Good Syntax/
    Good Duplicate Class/Good Duplicate Class.xtuml
Models/models/Models/ComponentSyntaxTest/Good Syntax/Good Syntax/
    Good Singleton Class/Good Singleton Class.xtuml

com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/OAL Validation Functions/OAL Validation Functions.xtuml



End
---
$Log: dts0100564041.int,v $
Revision 1.5  2010/01/05 04:29:32  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.4  2009/09/10 12:51:23  campbell
Job:dts0100564041
Finalized for promotion.

Revision 1.3  2009/09/09 14:33:53  campbell
Job:dts0100564041
Added code change entries. oal.test TBD.

Revision 1.2  2009/09/09 12:21:56  campbell
Job:dts0100564041
Typo corrected. Effect of change clarified.

Revision 1.1  2009/09/09 12:19:55  campbell
Job:dts0100564041
Introduced.
