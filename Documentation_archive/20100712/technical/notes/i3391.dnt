========================================================================

File:      $RCSfile: i3391.dnt,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2008-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Marking Class Operations for Catapult-C Integration

1. Abstract
-----------
As part of a demo, we have are exploring the integration of BridgePoint with
Catapult-C.  We have succeeded in integrating Cat-C through an external
entity (EE), and now we would like to integrate at the class operation level.

2. History
----------

3. Document References
----------------------
[1] Bugzilla item 3391
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=3391

4. Background
-------------
See [1] for a set of plans used for the demo.

5. Analysis
-----------
5.1.    We shall enable marking of a model such that the following are true:
5.1.1.  The user can build a model using xtUML and model the behavior of 
        both the software elements and hardware elements of a complete system.
5.1.2.  The user can run Verifier to vet out this behavior.
5.2.3.  The user can generate code with a C model compiler to further test
        the behavior at a higher speed.
5.2.4.  The user can mark the model to disclude generation of software for
        class operations implemented in the hardware.  The resulting software
        will easily integrate with Catapult-C hardware modules that are
        interfaced with mempory-mapped data and control I/O.

6. Design
---------
6.1.    Add data to the extended meta-model.
6.2.    Add a marking function to the model compiler archetypes.
6.3.    Modify the behavior of the archetype functions based upon the value
        of the mark.

7. Design Comments
------------------

8. Work Required
----------------
8.1.    Add attributes to TE_CLASS and/or TE_TFR to capture the needed
        marking information.  (Do this by hand by editing xtumlmc_schema.sql
        during the research phase.)
8.2.    Add archetype functions to clr_object.arc.  Model them after
        TagClassOperationTranslationOff.
8.3.    Access this attribute from transformers.arc to change behavior.

9. Unit Test
------------

End
---

$Log: i3391.dnt,v $
Revision 1.3  2010/01/05 04:29:32  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.2  2009/01/01 23:13:07  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.1.4.1  2008/12/31 16:10:11  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.1  2008/01/30 17:18:46  cstarret
job:3391
initial rough ideas

