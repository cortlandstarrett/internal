========================================================================

File:      $RCSfile: dts0100530239.int,v $
Version:   $Revision: 804 $
Modified:  $Date: 2010-07-12 08:36:39 -0700 (Mon, 12 Jul 2010) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Constants - Phase 1


1. Abstract
-----------
This note describes the implementation for constants phase 1.

2. History
----------
None.

3. Document References
----------------------
[1] ClearQuest DEI dts0100530239
[2] <CVS>/Documentation/external/requirements/Constants.SRS.txt
[3] dts0100530239.dnt
[4] ClearQuest dts0100571956
    {Add constant (phase 1) support to model compilers}

4. Background
-------------
This note describes the work done to implement phase one of constants.  The work
is not yet complete, but we plan to do a promotion of the code in order to
provide a wider exposure.  We also have several non-trivial issues that are
going in to HEAD at the same and we want to work through this integration sooner
rather than later.

We have decided that once the existing JUnit tests pass, we'll perform this
first promotion step and follow it later with another promotion to round out the
rest of phase 1 development.

5. Design
---------
5.1  SRS [2] Fulfillment.
  5.1.1  This list details what parts of the SRS will be satisfied or are
         intentionally not addressed by this first phase of work.
    5.1.1.1  Const-1 to Const-6 will be met in full
    5.1.1.2  Const-7 to Const-9 will not be addressed by this work
    5.1.1.3  Const-10a to Const-10d will be met in full
    5.1.1.4  Const-10e will not be addressed by this work.
    5.1.1.5  Const-12a will be met in full
    5.1.1.6  Const-12b to Const-14b will not be addressed by this work.
    5.1.1.7  Const-15 will be met in full
    5.1.1.8  Const-16 will not be addressed by this work.
    5.1.1.9  Const-17 will be met in full
    5.1.1.10 Const-18a will not be addressed by this work.
    5.1.1.12 Const-18c to Const-19c will not be addressed by this work.
    5.1.1.13 Const-20a will be met in full (Parser equivalence with literal
             consts)
    5.1.1.14 Const-20b to Const-23 will not be addressed by this work.
  5.1.2  This list details what parts of the SRS will NOT be satisfied by this
         initial promotion to HEAD, but should be completed before phase one
         of constants is released.
    5.1.2.1  Const-11 will be partially met.  UDTs based on allowed core types
             will be supported. (No UDT support yet)
    5.1.2.2  Const-18b will be met in full (Unicode char support in strings not
             tested)

5.2  Implementation of Design [3]
  5.2.1  The Constants subsystem was implemented as designed in [3, §6.1]
    5.2.1.1  Additional relationships not specified in the DNT:

                                                       CNST_CIP
                                                           .
                                                           .
                    S_DOM(0..1)---------(*)CNST_CSP(*)------------(1)S_DPK

    5.2.1.2  The relationship S_DOM---CNST_CSP is added to mirror the
             relationship S_DOM---R14---S_DT.  S_DT has a direct rel to S_DOM as
             well as a path with S_DT--S_DPK---S_DOM.

             In the cut/copy/paste code in DataTypePackage, it sets up the
             direct rel between S_DOM and S_DT.  I added new code to handle ccp
             of constants and simply mirrored what is done for datatypes.

             Right now, I'm only *using* the direct rel S_DOM--CNST_CSP
             internally in the Constants SS, so it could be removed later if
             doesn't end up being needed outside the Constants SS and only get
             to the S_DOM through S_DPK.
  5.2.2  The context menu additions were implemented as designed in [3, §6.2].
         This includes Delete and Rename on CNST_CSP and CNST_LSC,
         New > Constant on CNST_CSP, and Set Type and Set Value on CNST_LSC.
  5.2.3  Additional metamodel work:
    5.2.3.1  Symbolic Constant Value (V_SCV) was added to the Value SS as spe-
             cified in [3, §6.4.1].
    5.2.3.2  CNST_LSC provides data retrieval functions as specified in
             [3, §6.4.2].
    5.2.3.3  Persistence of the new constant data via the stream and file_io
             mechanisms was implemented as specified in [3, §6.4.3].
    5.2.3.4  The changes required to add the new elements to the Explorer tree
             were made as specified in [3, §6.4.4].
  5.2.4  Parser updates
    5.2.4.1  Added new utility function constant_validate as specified in
             [3, §6.5.1].
    5.2.4.2  Updated Assignment_expr_end as specified in [3, §6.5.3].
    5.2.4.3  So far, I have not had to update callers of data_types_compatible
             as specified in [3, §6.5.4].  The existing parser infrastructure
             is handling V_SCVs without the expected changes.
    5.2.4.4  The expected change to Local_variable_validate [3, §6.5.2] was not
             made.  Instead, Member_access_end was modified to handle constants.
    5.2.4.5  [3, §6.5.5] specifies that we should give a meaningful error in
             the case that the parser finds two constants with the same name.
             This functionality is not yet working.
  5.2.5  Integer constants may have values specified in binary (0bNNNN) or hex
         (0xNNNN) form as specified in [3, §6.6].
  5.2.6  Obviously, the user can draw constant specifications and add literal
         symbolic constants as specified in [3, §6.7].

6. Implementation Comments
--------------------------
6.1  Verifier support is not yet implemented as required in [3, §6.3].
6.2  The initial infrastructure for Cut/Copy/Paste support is implemented as
     specified in [3, §6.8], but does not work correctly.  More testing and
     debugging must be performed.  Specifically, pasting a CNST_CSP to the
     system level datatypes is known to cause an NPE.
6.3  Model compiler support is handled as a separate issue [4], and is not
     started.

7. Unit Test
------------
7.1  Changes have been made as required to allow all existing JUnit tests to
     pass.  This provides assurance that we haven't broken existing functional-
     ity.  However, the existing tests have not been extended, nor have new
     tests been added to specifically test Constant functionality.

8. Phase 1 part 2
-----------------
8.1  This section lists the items to be performed between promotion of this work
     to HEAD and release of constants.

8.2  Development
  8.2.1  Finish Cut/Copy/Paste implementation
  8.2.2  Cleanup
    8.2.2.1  Is S_DOM---R1507---CNST_CSP needed?  Or can we just go through
             S_DPK?
    8.2.2.2  Is S_CDT---R1501---CNST_LSC needed?  Or will
             CNST_SYC---R1500---S_DT suffice?
  8.2.3  UDT Support.  We intended to get this in to phase 1, but is not yet
         done.  Can we live without it?
  8.2.4  Verifier support
  8.2.5  Add CMEs Move Up/Down on CNST_LSC.  I planned to have them pass the
         rearranging work to move up/down functions in CNST_SYC so future
         subtypes of CNST_SYC all go to the same place for this functionality.
         How does this affect the actionFilter handling?
  8.2.6  CNST_LSC.SetValue
    8.2.6.1  Is the default handling for quotes and ticks in string constants
             sufficient?
    8.2.6.2  Special UDT support needed here?
  8.2.7  Doesn't correctly notify of name conflict if duplicately named
         constants exist.
8.3  Testing
  8.3.1  Unicode char support for strings in CNST_LSC?  Does the Set Value
         dialog handle these OK?  Are they stored and retrieved from the SQL OK?
  8.3.2  File_io and stream PEI testing.  Export/Import a model with constants.
  8.3.3  Test model with some common use cases.
  8.3.4  Test matrices.  There are 3 different test matrices to test
         different aspects of the system.
  8.3.5  Add JUnit tests to exercise CNST_LSC Set Value dialog
  8.3.6  Add JUnit tests to exercise restricted CNST_LSC Set Type dialog

9. Code Changes
---------------
Changes are in branch R2_1_3-SKB-dts0100530239

com.mentor.nucleus.bp.compare.test/arc/CreatePEITestFiles.arc

com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.ui/
    ConstantValueInputValidator.java
com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.ui/
    SetValueOnConstantAction.java
com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.ui/.cvsignore
com.mentor.nucleus.bp.core/arc/create_core_plugin.inc
com.mentor.nucleus.bp.core/arc/create_rename_action.inc
com.mentor.nucleus.bp.core/icons/metadata/.cvsignore
com.mentor.nucleus.bp.core/icons/metadata/ConstantSpecification.gif
com.mentor.nucleus.bp.core/icons/.cvsignore
com.mentor.nucleus.bp.core/icons/newcsp.gif
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Constants/Constant in Package/Constant in Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Constants/Constant Specification/Constant Specification.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Constants/Leaf Symbolic Constant/Leaf Symbolic Constant.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Constants/Literal Symbolic Constant/Literal Symbolic Constant.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Constants/Symbolic Constant/Symbolic Constant.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Constants/Constants.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Core Data Type/Core Data Type.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Data Type/Data Type.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Data Type Package/Data Type Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Domain/Domain.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    System Model/System Model.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Element Packaging/Package/Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/Context Menu Entry Functions/Context Menu Entry Functions.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/OAL Validation Functions/OAL Validation Functions.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/OAL Validation Utility Functions/
    OAL Validation Utility Functions.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    System Level Datatypes/System Constant in Package/
    System Constant in Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    System Level Datatypes/System Level Datatypes.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Value/
    Symbolic Constant Value/Symbolic Constant Value.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Value/
    Value/Value.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Value/
    Value.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    ooaofooa.xtuml
com.mentor.nucleus.bp.core/sql/context_menu.pei.sql
com.mentor.nucleus.bp.core/sql/ooaofooa_hierarchy.pei.sql
com.mentor.nucleus.bp.core/generate.xml

com.mentor.nucleus.bp.core.test/arc/create_action_test.arc
com.mentor.nucleus.bp.core.test/arc/create_dispose_test.arc
com.mentor.nucleus.bp.core.test/models/com.mentor.nucleus.bp.core.test/
    testRename1/Datatypes/Datatypes.xtuml

com.mentor.nucleus.bp.io.mdl/sql/file_io.pei.sql
com.mentor.nucleus.bp.io.mdl/sql/stream.pei.sql

com.mentor.nucleus.bp.ui.canvas/src/com.mentor.nucleus.bp.ui.canvas/Cl_c.java
com.mentor.nucleus.bp.ui.canvas/models/com.mentor.nucleus.bp.ui.canvas/
    ooaofgraphics/Datatypes/Datatypes.xtuml
com.mentor.nucleus.bp.ui.canvas/plugin.xml

com.mentor.nucleus.bp.ui.explorer/sql/UITree.pei.sql

com.mentor.nucleus.bp.ui.properties/src/com.mentor.nucleus.bp.ui.properties/
    ConstantValuePropertyDescriptor.java
com.mentor.nucleus.bp.ui.properties/arc/BuildPropertySource.arc
com.mentor.nucleus.bp.ui.properties/generate.xml

com.mentor.nucleus.bp.ui.properties.test/arc/create_view_test.arc
com.mentor.nucleus.bp.ui.properties.test/models/
    com.mentor.nucleus.bp.ui.properties.test/testProp/Datatypes/Datatypes.xtuml
com.mentor.nucleus.bp.ui.properties.test/models/
    com.mentor.nucleus.bp.ui.properties.test/testProp/testProp.xtuml





End
---

$Log: dts0100530239.int,v $
Revision 1.6  2010/01/05 04:29:32  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.5  2009/05/04 21:28:55  kbrown
job:dts0100530239
Updated INT with changes from review mins.

Revision 1.4  2009/05/04 18:29:11  kbrown
job:dts0100530239
Final INT updates before review.

Revision 1.3  2009/05/04 18:05:16  kbrown
job:dts0100530239
INT updates.

Revision 1.2  2009/05/04 16:28:38  kbrown
job:dts0100530239
Updated code changes list.

Revision 1.1  2009/05/01 15:42:56  kbrown
job:dts0100530239
Started INT.  Just code changes right now.
