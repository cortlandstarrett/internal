========================================================================

File:      $RCSfile: dts0100781328.dnt,v $
Version:   $Revision: 1296 $
Modified:  $Date: 2011-10-20 15:06:12 -0700 (Thu, 20 Oct 2011) $

(c) Copyright 2007-2011 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Paste component issues

1. Abstract
-----------
This note describes the changes to properly unformalize interface references
when pasting cross project under generic packages.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100781328
    Paste Component not always working correctly in generic package context
[2] ClearQuest DEI dts0100782804
    Removal of non-standalone PE subtypes

4. Background
-------------

5. Analysis
-----------
The CQ issue [1] captures two separate issues:

1. Reconciler not creating interface references
2. The paste infrastructure is incorrectly resolving a cross project interface

The first issue is not caused by the reconciler not running, it is actually
caused by the fact that the shape creation occurs after the reconciliation
for the connectors.  This means that the shape is not found when trying to
reconcile connectors.  The reconciler needs to run in two steps to support this.
The first step shall process all GD_ARS (Auto Reconciliation Specification)
elements that reconcile shapes, and the second step shall process all GD_ARS
elements that reconcile connectors.

Under the second issue the paste infrastructure is not actually resolving the
interfaces from another project, it is simply not unformalizing the interface
references appropriately.

[2] was raised to address an issue where some elements were being persisted more
than once, and in different locations.  These problems show only in a generic
package context.  The reason being is that in specialized packages these
elements are persisted in a different manner, which is not through the
specialized package.  Once added as a subtype of PE_PE (Packageable Element),
these elements had to maintain both export paths.  These elements shall be
removed as subtypes of PE_PE and shall be persisted in the same manner as they
are in specialized packages.

6. Design
---------
6.1 Run reconciler in two steps

In the Auto Reconciliation Specification class, the Reconcile operation is
modified to process all GD_ARS elements which are associated with a GD_MS (the
shape reconciliation specifications) first.  All other GD_ARS instances are
processed after the above iterations.

6.2 Properly unformalize interface references in cross project paste

It was determined that the root of the problem was caused by a system not being
found across the PE associations.  The OAL uses the correct navigation to the
system, but there is no PE_PE instance associated with the pasted interface
reference.  One of the elements that will be removed as a subtype of PE_PE is
C_IR (Interface Reference), therefore the resolution code is modified to locate
the system and the desired C_I (Interface) instance using the association path
through the attached to component.  This association will always be setup,
therefore the unformalization will now occur properly.

6.3 Remove subtypes of PE_PE

The following elements are removed as a subtype of PE_PE as they do not fullfill
the requirements of a PE_PE.  Loosely, an element must be standalone in the
package to be a subtype of PE_PE.  Loosely is used as elements like an
Association are not necessarily standalone (as they require at least a class),
but they have always been treated as artifacts of the diagram element.

C_IR
SQ_TM (Timing Mark)
SQ_TS (Time Span)

Each of these are dependent on the element they attach to, and should be
completely owned by that element.

The hierarchy metadata, and persistence pei data are modified to account for
these removals.  The various create and dispose operations are also updated to
account for the removals.

All PE_PE related OAL traversals are updated to use the previous traversals,
navigating through the elements owner to get to any package data necessary.

Upgrade code is added to remove any PE_PE instances associated with these
elements under a previous version of the tool.

6.4 Add linking classes for UC_UCA (Use Case Association), MSG_M (Message)

The UC_UCA and MSG_M elements fit the standalone criteria mentioned above.
However, pre-generics these elements were being persisted through the target
element rather than the diagram owning element.  This is causing duplicated
persistence.

To address this new classes are added that link the elements to the diagram
element for containment.  MSG_M already had such support under communication
diagrams, but not for sequence diagrams.

The MSG_M support under communication diagrams had to maintain the association
between the communication and the message as it was only being used to persist
when the message did not have a target set.  The OAL is changed so that the
link between the communication and the message is always kept.

The persistence data is modified to only persist through these new classes and
associations.

Upgrade code is added to create the new classes for older models.

6.5 Dispose supertype PE_PE

The following elements were not calling PE_PE.dispose() during their dispose
call and now have the call made:

Activity Edge
Activity Node
Activity Partition

7. Design Comments
------------------

8. Work Required
----------------
See design.

9. Unit Test
------------
Note: The following are manual tests.

9.1 Test interface resolution cross project and reconciliation

_- Convert GPS Watch to generic packages.
_- Select Tracking in ME and Copy
_- Create a new project
_- Add a new generic package
_- Paste the Tracking component into the new package
_R The interface references are shown
_R The interface references are not formalized

9.2 Test messages and use case associations

_- Create a new Sequence diagram
_- Create a new message
_R The message is created and displayed appropriately
_- Restart the tool
_R The message is still displayed correctly
_- Create a new Communication diagram
_- Create a new message
_- Set a target for the message
_- Restart the tool
_R The message exists and is displayed correctly
_- Create a new Use Case
_- Create a new Use Case Association
_- Restart the tool
_R The association is displayed appropriately

9.3 Existing tests

- All other code will be exercised by existing unit tests.
_- Run existing tests
_R All tests pass

End
---

$Log: dts0100781328.dnt,v $
Revision 1.2  2011/08/15 22:06:47  tlondon
Job: dts0100781328

Address review minutes

Revision 1.1  2011/08/09 16:53:27  tlondon
Job: dts0100781328

Introduce design note

