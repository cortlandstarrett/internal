========================================================================

File:      $RCSfile: i3150.int,v $
Version:   $Revision: 1.2 $
Modified:  $Date: 2009/01/01 23:12:51 $

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Add unique identifier to Satisfaction class

1. Abstract
-----------
This note describes the changes required to add a unique identifier to the
Satisfaction class.

2. History
----------

3. Document References
----------------------
[1] Bugzilla item 3150
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=3150
[2] Bugzilla item 3115
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=3115

4. Background
-------------
[1] describes an issue where upon restart the interface name for a satisfied
requirement is shown.  This should not be as the requirement's name should be
suppressed.

5. Design
---------
5.1 Introduce unique identifier to Satisfaction class
The cause for the issue described in the background is that a Satisfaction
instance was never guaranteed to be unique.  This allowed for failure to load
subsequent Satisfaction instances that shared the same Provision and Requirement
ids.

A new attribute, name:Id type:unique_id, is added to the Satisfaction class.
The existing Provision_Id and Requirement_Id referential attributes are removed
from the identifier as the new attribute is now the only identifier.  Each
association formalized against the Provision_Id and Requirement_Id are updated
to account for the new identifier.  The addition of this attribute was done 
with [2].

5.2 Provide data upgrade for 1.4.2 models

Existing code already provides data upgrade for 1.4.2 components.  This code is
modified to first create new ids for each Satisfaction to be imported.  The code
is also modified to handle creating the necessary persistence associations.
Previously a separate method provided this support but was not being called at
the correct times.

5.3 Provide data upgrade for 1.5.0/1.5.1 models

In order to correctly upgrade existing data for these versions each Satisfaction
must have a new id created.  In addition to creating the new id, each element
previously associated with the Satisfaction must be re-associated through the
new id.

A new method, associateSatisfactionsThroughIdentifier, is added to the
ImportHelper class.  This method provides the above data upgrade.

6. Implementation Comments
--------------------------

7. Unit Test
------------
In 1.4.2:

_- Create an Interface Package (ip1)
_- Create an Interface in the above package (i1)
_- Create a Component Package (CP Sats)
_- Create a Component Package (CP Sats Import)
_- Create a Component (c1)
_- Create a Component (c2)
_- Create a satisfaction in CP Sats with a provision and requirement
	 (formalized to i1)
_- Create a satisfaction in CP Sats Import with the imported pro and req
_- Load the workspace with 1.5.1
_R All satisfactions are imported correctly, i.e, no requirement name is shown.

In 1.5.0/1.5.1

_- Create an Interface Package (ip1)
_- Create an Interface in the above package (i1)
_- Create a Component Package (CP Sats)
_- Create a Component Package (CP Sats Import)
_- Create a Component (c1)
_- Create a Component (c2)
_- Create a satisfaction in CP Sats with a provision and requirement
	 (formalized to i1)
_- Create a satisfaction in CP Sats Import with the imported pro and req
_- Create a Component (nc1) in c1
_- Create a Component (nc2) in c1
_- Create a satisfaction in c1 with a provision and requirement
	 (formalized to i1)
_- Create two components (nic1, nic2)
_- Import the two components in to c1
_- Create a satisfaction with the imported references
_- Export the entire system to a single file
_- Load the workspace with 1.5.1
_R All satisfactions are imported correctly, i.e, no requirement name is shown.
_- Create a new project
_- Import the single file export to the new project
_R All satisfactions are imported correctly, i.e, no requirement name is shown.

8. Code Changes
---------------
com.mentor.nucleus.bp.io.core/arc/gen_import_java.inc
com.mentor.nucleus.bp.io.core/arc/import_functions.inc
com.mentor.nucleus.bp.io.core/src/com/mentor/nucleus/bp/io/core/
    ImportHelper.java

com.mentor.nucleus.bp.io.mdl/arc/gen_import_java.arc
com.mentor.nucleus.bp.io.mdl/arc/gen_stream_export.arc
com.mentor.nucleus.bp.io.mdl/arc/gen_stream_import.arc
com.mentor.nucleus.bp.io.mdl/arc/gen_xtuml_export_java.arc
com.mentor.nucleus.bp.io.mdl/generate.xml

End
---

$Log: i3150.int,v $
Revision 1.2  2009/01/01 23:12:51  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.1.4.1  2008/12/31 16:09:53  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.1  2008/01/09 20:55:33  rmulvey
Job:3358
Archives notes from issues completed in the following versions: "R1_5_1, R1_5_2, R1_5_3".

Revision 1.3  2007/10/02 19:19:57  rmulvey
Job:3150
Added a note that the addition of the unique_id for Satisifaction was done in issue 3115 [2].

Revision 1.2  2007/10/02 17:25:04  tlondon
Job: 3150

Introduce.

Revision 1.1  2007/10/02 02:33:26  rmulvey
Job:3150
Introduced
