========================================================================

File:      $RCSfile: i3144.int,v $
Version:   $Revision: 1.2 $
Modified:  $Date: 2009/01/01 23:12:51 $

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Fix NPE in parser after a Component is unformalized.

1. Abstract
-----------
A customer reported an NPE in the log after unformalizing a Component that
contained signal references. This note addresses the issue and makes the parser
robust in this area.

2. History
----------

3. Document References
----------------------
[1] Bugzilla item 3144
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=3144

4. Background
-------------
See Abstract

5. Design
---------
In revision 1.13 of the 'OAL Validation Utility Functions' package, the
'is_valid_message' function selects a message at lines 10 thru 17. However,
there is no subsequent check that a  message was found.

When the Domain is unformalized, the links to the Component and its interface
references are  removed, so no message is found. The code generated from the
relate attempted at line 27 causes the NPE.

The solution is to simply enclose the block from line 18 onwards in an 'if-else'
test like so:

if empty message
  ERR::reportParseError( 
       msg: "Cannot find specified message ->%s<-", token: param.a3_rule_token); 
else
  <existing block>
end if;
return GD::NULL_UNIQUE_ID();

6. Implementation Comments
--------------------------
A TODO comment was noticed in this function. This was replaced with a required
internal log error.

7. Unit Test
------------
_- Create a new project and add a domain with a class, class state model, state
   and reflexive transition.
_- Create an interface package and add an interface and signal.
_- Create a component package with a component.
_- Add a provided interface to the component and formalize it to the interface
   declared above.
_- Formalize the component to the domain.
_- Assign the signal to the transition.
_- Edit the state action and add: send <<I/F name>>::<<Signal Name>>();
_- Unformalize the component and touch the state action.
_R No NPE is reported in the log and the signal name is highlighted with a
   problem report 'Cannot find specified message -><<Signal Name>><-'.
   
Note: An alternate error: 'Signalling syntax is valid only in the context of a
component' can occur if the above reproduction procedure is not followed
exactly. If this is message is seen, please repeat the test using the above
procedure.

8. Code Changes
---------------

com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/
                ooaofooa/Functions/OAL Validation Utility Functions/
                                          OAL Validation Utility Functions.xtuml

End
---

$Log: i3144.int,v $
Revision 1.2  2009/01/01 23:12:51  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.1.4.1  2008/12/31 16:09:53  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.1  2008/01/09 20:55:34  rmulvey
Job:3358
Archives notes from issues completed in the following versions: "R1_5_1, R1_5_2, R1_5_3".

Revision 1.2  2007/09/21 16:56:52  campbell
Job: 3144
Fix typo.

Revision 1.1  2007/09/20 21:32:39  campbell
Job: 3144
Introduced.
