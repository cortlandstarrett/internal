========================================================================

File:      $RCSfile: i3277.int,v $
Version:   $Revision: 1.2 $
Modified:  $Date: 2009/01/01 23:12:51 $

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Return value causes bad things to happen in operation call


1. Abstract
-----------
A bug in Model Verifier was discovered by Ericsson.  If a class operation is
specified as having no return value, the call works fine.  Once a return value
is specified, the call into the operation results in all the parameters to the
operation having the same name inside verifier.  When stepping through code,
this causes internal errors in the functionality of verifier.  It does not
matter if the operation is specified as class-based or instance-based, the
behavior is the same.

2. History
----------
None.

3. Document References
----------------------
[1] Bugzilla item 3277
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=3277

4. Background
-------------
See section 1.

5. Design
---------
5.1		The problem lies in Operation Value::setupParameterValues() line 94.
		The code should use the iterator "arg" in the select to get "arg.Name"
		instead of "actual_parameter.Name".

6. Implementation Comments
--------------------------
6.1		While debugging this issue, I noticed that string parameters in the
		"Variables" window were not quoted.  To fix, I added code to get the
		associated datatype of a local value when the local value is a function,
		operation, or bridge parameter. Previously, only transient variable
		datatypes were located.  The end result is that string parameters to a
		function, operation, or bridge, are shown quoted in the verifier
		"Variables" window.  Before, they were not quoted, giving inconsistent
		presentation between string transients and string parameters.

7. Unit Test
------------
7.1		Test that verifier works when multiple parameters passed to operation

        _- save the "simple model" attached to bug 3277 to disk as i3277.xtuml
        _- open BP with a new workspace called "test1"
        _- create a new xtUML project "test1"
        _- right-click and use the "Import" functionality to import file
           "i3277.xtuml"
        _- Set a breakpoint at the first line of domain function "callop"
        _- Launch in verifier, execute "callop", use "Step Into" to step through
           the entire program
        _R Note that every time you step into a class operation, the "Variables"
           view shows each of the parameters names and values correctly.  This
           fix is specifically targeted at the "ppr" class operation, where the
           variables values used to be correct but the names were not.

7.2		Test for quoted strings, and unquoted ints in Variables window for
		function, bridge, and operation parameters

        _- save the "Model to test variables" attached to bug 3277 to disk as
           i3277_vartest.xtuml
        _- open BP with a new workspace called "test2"
        _- create a new xtUML project "test2"
        _- right-click and use the "Import" functionality to import file
           "i3277_vartest.xtuml"
        _- Set a breakpoint at the first line of domain function "test"
        _- Launch in verifier, execute "test", use "Step Into" to step through
           the entire program
        _R Verify that when a function or operation is stepped into, the
           "Variables" view shows string parameters with quotes and numerical
           parameters without quotes.  Note also as you step that transient
           strings are shown with quotes and numerical values are shown without.

7.3		Run verifier and core JUnit tests

8. Code Changes
---------------
com.mentor.nucleus.bp.core (R1_5_2-SKB-i3277)
	- models/com/mentor/nucleus/bp/core/ooaofooa/Value/Operation Value/Operation Value.xtuml

com.mentor.nucleus.bp.debug.ui (R1_5_2-SKB-i3277)
	- src/com/mentor/nucleus/bp/debug/ui/model/BPValue.java

End
---

$Log: i3277.int,v $
Revision 1.2  2009/01/01 23:12:51  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.1.4.1  2008/12/31 16:09:53  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.1  2008/01/09 20:55:34  rmulvey
Job:3358
Archives notes from issues completed in the following versions: "R1_5_1, R1_5_2, R1_5_3".

Revision 1.2  2007/11/28 16:04:40  kbrown
Job:3277
Added enumerated steps to test for desired behavior.

Revision 1.1  2007/11/28 15:13:22  kbrown
Job:3277
Checking in implementation note.
