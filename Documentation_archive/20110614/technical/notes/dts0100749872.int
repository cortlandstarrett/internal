========================================================================

File:      $RCSfile: dts0100749872.int,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Deleting a transition that has an assigned signal does not delete the signal.

1. Abstract
-----------
When a transition that contains an assigned signal is deleted the signal is not
being removed.  This issue is raised to delete the signal in this situation as 
long as it is not assigned to any other transition.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100749873

4. Background
-------------
When we assign a signal to a transition we automatically create an event for 
this signal.  This shows-up in ME.  The user may use the "Remove Signal" CME 
to delete the signal.  However, deleting the transition does not currently 
cause this signal to be deleted.  
 
Note that when we delete a transition with an assigned event we do not delete 
the event.  However, signals are different because we actually create the 
event at the time the signal is assigned.  

This issue is raised to automatically delete the signal when the transition 
is deleted as long as that signal is not assigned to any other transition.

5. Design
---------
The problem here is that Transition.dispose() currently calls 
self.removeEvent() any time it finds a an instance of New State Transition
(SM_NSTXN) on R507.  The problem is it does this without checking to see if 
this is an event or if it is a signal.  The fix for this is to simply add OAL
at that point to check to see if the SM_NSTXN is associated with a signal and
call self.removeSignal() instead of self.removeEvent() if it is a signal.


6. Implementation Comments
--------------------------
6.1 The change to Transition.dispose() looks like this:
 if (not_empty nstxn)
-  // migrate to a No Event Transition (SM_NETXN)
-  // which will be deleted below
-  self.removeEvent();
+  select one sig related by nstxn->SM_SEME[R504]->SM_SEVT[R503]->SM_SGEVT[R526];
+  if (not_empty sig)
+    self.removeSignal();
+  else
+    // migrate to a No Event Transition (SM_NETXN)
+    // which will be deleted below
+    self.removeEvent();
+  end if;
 end if;

6.2 Implemented the unit tests for this issue in bp.core.test/
    RemoveSignalTests.java.
 
7. Unit Test
------------
7.1 Verify that the signal is removed on deletion of the transition.
_- Create a new xtUML model "test"
_- Create an Interface Package "IPkg1"
_- Create an Interface in IPkg1 named "Itrf1"
_- Create a signal in Itrf1 named "sig1"
_- Leave the default direction (To Provider)
_- Create a component Package (CompPkg1)
_- Create a component named "receiver" in CompPkg1
_- Create a domain named received
_- Formalize the component named receiver to the 
   domain
_- Create another component in CompPkg1 and name it
   "sender"
_- Create a domain named sender
_- Formalize the component named sender to the 
   domain
_- Open the Sender component in the canvas
_- Create a subsystem named "send"
_- Create a class in send named sender
_- Create a CSM in send
_- Create 2 states in the CSM and connect them with a
   transition that starts at state 1 and goes to state 2
_- Right click the transition
_- Select Assign Signal
_- Select Port1 (intrf1) > Sig1
_R Sig1 is assigned to the transition
_R An event named sig1 appears in ME
_- Select the transition and "delete"
_R The transition is deleted
_R The signal (sig1) is no longer present in ME

8. Code Changes
---------------
Branch name: R3_1_5-RWM-dts0100749872
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    State Machine/Transition/Transition.xtuml

com.mentor.nucleus.bp.core.test/src/(default package)/SystemLevelTestSuite.java
com.mentor.nucleus.bp.core.test/src/com.mentor.nucleus.bp.core.test/
    RemoveSignalTests.java
com.mentor.nucleus.bp.core.test/generate.xml


End
---

$Log: dts0100749872.int,v $
Revision 1.3  2011/02/11 23:55:53  rmulvey
job:dts0100749872
Added a comment about the unit tests that were added and added the test files to the list of changed files.

Revision 1.2  2011/02/08 21:56:25  rmulvey
job:dts0100749872
Updated based on review observations.

Revision 1.1  2011/02/08 21:18:47  rmulvey
job:dts0100749872
Introduced the implementation note.
