========================================================================

File:      $RCSfile: dts0100756294.dnt,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Provided operation bodies not always parsed on Verifier launch

1. Abstract
-----------
In a preparation for model execution, all the activities that fall in the 
selected model parts (Components and Domains) are parsed. For unformalized 
components, the interface operations on the connected ports to this component 
do not get parsed and accordingly can not be executed during model execution.

2. History
----------
None.

3. Document References
----------------------
[1] ClearQuest DEI dts0100756294 - Provided operation bodies not always parsed 
on Verifier launch

4. Background
-------------
 When launching verifier, all the activities related with the selected model
elements (Components and Domains) are populated in beginning step to parse
them and be ready for execution if required.
    
 AllActivityModifier.getAllActivities() populates all activities, kind by kind. 
AllActivityModifier.getAllInterfaceOperations() is responsible for
required and provided interface operations.

5. Analysis
-----------
5.1 Currently the interface operations on formalized component ports only are 
	parsed.
	The logical condition in getAllInterfaceOperations() can clearly describes 
	that : 
	if(parseAll && m_domain != null && m_parent instanceof Component_c)
	
	Since unformalized component is not associated with a domain, m_domain 
	becomes null and the condition evaluates with false.
	
	This logical condition should not rely on the domain instance since 
	the interface operation falls in component communication only and has 
	nothing to do with domain.


6. Design
---------
6.1 Remove the domain checking from the logical condition in 5.1.

7. Design Comments
------------------
None.

8. Work Required
----------------
Fully outlined in the design section.

9. Unit Test
------------
9.1 
_- Create new xtUML
_- Add interface package, interface and add interface operation to it
_- Add two components and connect them.
_- Formalize the connection to the created interface
_- Write OAL code in the interface operation on both ports
_- Launch the verifier
_- Execute the interface operation   
_R the code in the provision interface operation executed
_- Create new domain
_- formalize one of the component to the domain
_- Launch the verifier
_- execute the interface operation
_R the code in the provision interface operation executed
_- Connect the two component with new ports and formalize them to the created 
   interface
_- Write OAL code in the interface operation on both ports
_- Launch the verifier
_- Execute the interface operation   
_R the code in the provision interface operation executed
 

End
---

$Log: dts0100756294.dnt,v $
Revision 1.4  2011/03/29 13:15:55  nmohamad
job:dts0100756294
Addressing review minutes

Revision 1.3  2011/03/29 12:18:57  nmohamad
job:dts0100756294
Addressing Campbell's feedback

Revision 1.2  2011/03/29 11:40:39  nmohamad
job:dts0100756294
Refine

Revision 1.1  2011/03/28 17:14:29  nmohamad
job:dts0100756294
Create

