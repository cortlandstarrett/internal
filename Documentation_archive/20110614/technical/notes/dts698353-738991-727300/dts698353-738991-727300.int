========================================================================

File:      $RCSfile: dts698353-738991-727300.int,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Polymorphic Events and Function/EE Includes

1. Abstract
-----------
This issue addresses fixes for polymorphic events in MC-3020 and two minor
include file problems in component port messages.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI DTS0100698353 - Translation in MC3020 of OAL fails when
                                   generating a polymorphic event
[2] ClearQuest DEI DTS0100738991 - Domain function calls in component ports
                                   do not generate appropriate C code from
                                   MC3020
[3] ClearQuest DEI DTS0100727300 - MC3020 not supporting calls to EE bridges
                                   in port operation OAL
[4] test model - polycalc - Polymorphic Events Test Model
svn://tucson.wv.mentorg.com/arch1/products/tiger/doc_repository/trunk/Models/Test/polycalc

4. Background
-------------
Polymorphic events were broken in MC-3020, and we did not know.  This was
partially because our primary poly test model coincidentally numbered
polymorphic events the same in different subtypes.

5. Design
---------
5.1    Subtype Event Numbering
5.1.1  Add a incrementing number to the name of events to guarantee that
       polymorphic event names are unique from other event names destined
       to the same class.
5.2    Incorrect Traversal
5.2.1  Traverse to the polymorphic event rather than the true event to get
       the correct event information when generating the polymorphic
       dispatcher.
       (This together with the above numbering conspired to give us 
       compilable code that pointed to the incorrect event.)
       
5.3    EE and Function Includes
5.3.1  Add needed #includes of domain functions and external entities to the
       component classes header file.  The component classes header file
       is included by ports for component that have internal behavior.  This
       addition will give visibility of port OAL derived code to domain
       function and bridge implementations.

6. Implementation Comments
--------------------------
6.1    Found a problem in TIM with locking the mutex twice when it is only
       needed to lock it once (and incorrect to try twice).
6.2    Meta-model now supports rval_dimensions in TE_ASSIGN.  Use it.

7. Unit Test
------------
7.1   Testing the EE and Function access from ports.
BEFORE THE FIX
7.1.1 Use the QuickStart to get the GPS Watch into your workspace.
7.1.2 Add -Wall to the compiler settings in
      Properties -> Build Settings -> Compiler -> Command Line Options
7.1.3 In a port message, call a function and call a bridge.
7.1.4 Add the following to the end of the UI::UI.SetData message:
if ( false )
  ::init();
  LOG::LogInfo( message:"hello" );
end if;
7.1.5 Build the project.
7.1.6 See the following compiler warnings.
src\UI_ports.c:100: warning: implicit declaration of function `UI_init'
src\UI_ports.c:103: warning: implicit declaration of function `LOG_LogInfo'
AFTER THE FIX
7.1.7 See that the compiler warnings from above are now absent.

7.2   Testing Polymorphic Events (running polycalc test model)

Test Instructions:
_- Load polycalc from [4].
_- Change perspective to xtUML Debugging.
_- Create a debug configuration for polycalc and start Verifier.
_- Execute function test.
_R LogSuccess:  finished with all tests
_- Switch to the EDGE Projects perspective.
_- Build Project.
_- Run the polycalc.exe executable.
_R finished with all tests


8. Code Changes
---------------
Branch name: R325CDS698353-738991-727300
mc/arc/q.class.events.arc
mc/arc/q.class.poly.arc
mc/arc/q.class.sem.arc
mc/arc/q.domain.classes.arc
mc/arc/specialized/q.class.arc
mc/arc/specialized/q.mc_metamodel.populate.arc
mc/arc/specialized/q.smt.generate.arc
mc/arc/specialized/q.val.translate.arc
mc/arc/specialized/sys.arc
mc/arc/specialized/t.domain_classes.h
mc/arc/specialized/t.smt.c
mc/arc/specialized/t.sys_events.c
mc/arc/specialized/t.sys_main.c
mc/arc/specialized/t.sys_tim.c

svn://tucson.wv.mentorg.com/arch1/products/tiger/doc_repository/trunk/Models/Test/polycalc

End
---

$Log: dts698353-738991-727300.int,v $
Revision 1.3  2010/12/22 18:59:50  cstarret
job:dts0100698353 dts0100738991 dts0100727300
supplying promotion documentation

Revision 1.2  2010/12/22 18:29:24  cstarret
job:dts0100698353 dts0100738991 dts0100727300
completed implementation note

Revision 1.1  2010/12/17 23:44:12  cstarret
job:dts0100698353 dts0100738991 dts0100727300
introducing first draft of combined implementation note
