========================================================================

File:      $RCSfile: dts0100740070.dnt,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Internal parser error, data type assignment issue

1. Abstract
-----------
During Parsing interface operation body, an internal parser error is triggered 
caused by NPE when validate the interface operation parameter of type unique_id.


2. History
----------
None.

3. Document References
----------------------
[1] ClearQuest DEI dts0100740070 - Internal parser error, data type assignment 
	issue
[2] Bugzilla Bug 2945 - Add support for component nesting and delegation
	 

4. Background
-------------
None.

5. Analysis
-----------
5.1  The following observation is taken using the customer model referenced
    by [1]. 
    
5.1.1  Although the interface operation parameter of type unqieu_id, but the 
	  data type chooser allows the user to set the type of unique_id, which may 
	  indicate to the user that perhaps the data type is not really set.

5.1.2  When type this following code in the interface operation body, an 
	  internal parser error is triggered :
	  select any avp from instances of AVP where selected.avpID==param.avpId; 

 	Note that the customer did not give us the .log.

5.1.3  When reassign unique_id type to the interface operation parameter using
	  chooser window, and re parse the previous code the error is gone.
 
5.2 The NPE triggered during parsing happened because of failure to retrieve 
	 the data type for the interface operation parameter using data type UUID.
	By looking into the xtUML file and comparing the UUID assigned to 
	C_PP::DT_ID with all created data types defined in the customer model, it 
	matched the Domain Unique Data Type that got suppressed by the formalization 
	process of the domain to component. Therefore when the user tried to 
	reassign data type to that interface parameter, he found the unique_id 
	available in the chooser window because it does not match Domain unique_id 
	data type that is currently assigned to the operation parameter. The NPE 
	is triggered in Data_types_compatible() validation function because it 
	failed to find it since this data type got suppressed, and by assigning the 
	interface parameter to the System Level unique_id, the tool behaves
	properly because it is the correct model building, since it is not possible 
	to assign interface operation parameter -that is created in System Level- to 
	a data type that resides inside Domain, besides that this Domain unique_id 
	in suppression and can not be used even for the element created inside the 
	Domain.

5.3  The following approaches are used to reproduce the problem ( assign 
	interface operation parameter to Domain data type )

5.3.1 Copy Paste : 
     - The components can not be pasted in Component Packages.
     - The interfaces can not be pasted in Interface Packages.
     - The ports can not be pasted over components.
     - The interface operation parameter can not be copied and pasted.
     - The core data type can not be copied.

5.3.2  Using different tool versions :
	  - Since the interface operation parameter can be reassigned to another 
	  data type using the port, so it is possible that may be before introduce
	  data type in suppression concept, the user may be able to assign interface
	  operation parameter to Domain data type through port. The Data In 
	  Suppression was introduced by "Package level configuration management" 
	  concept in [2]. That is the issue where we went from support on 
	  single-file model to support multi-files models that we are so familiar 
	  with now. In moving to support for PLCM, we forced customers to update. 
	  Therefore, there should be no models in existence that do not have 
	  those DIS instances.

5.3.3 Revision control system :
     - I could not find a way using this approach to force change in the
     interface operation parameter data type to one of a Domain data type.

5.3.4 Transaction Failure 
    - Theoretically can not happened because the interface operation parameter
     can not never be assigned to Domain data type to be migrate to System Level
     data type through Formalization transaction.

5.3.5 Export and Importing model
	- Using four different tool versions ( 2.0.0,  2.0.2, 3.0.0, and 3.2.0), and
	create small version the customer model, export it and import it in another
	version, the problem could not be reproduce.       

6. Design
---------
None.

7. Design Comments
------------------
None.

8. Work Required
----------------
Change issue status to closed with resolution Can't Reproduce.

9. Unit Test
------------
None.

End
---

$Log: dts0100740070.dnt,v $
Revision 1.2  2011/05/10 12:27:59  nmohamad
job:dts0100740070
refine

Revision 1.1  2011/05/09 17:58:18  nmohamad
job:dts0100740070
Create

