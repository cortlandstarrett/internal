========================================================================

File:      $RCSfile: dts0100706477.int,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Loosen generator license retention

1. Abstract
-----------
This note describes how the generator license handling is loosened to meet 
marketing and support requirements.

2. History
----------
None.

3. Document References
----------------------
[1] ClearQuest DEI dts0100706477
[2] Documentation_archive/20090903/technical/notes/dts0100586888.dnt
      Domain marking files are not created for formalized components when models 
      are imported
[3] Documentation_archive/20100712/technical/notes/dts0100647273.int
      Generator licensing handling issues with System Designer license
[4] Documentation/internal/process/releases/HOWTO-build-a-BP-demo.txt
[5] ClearQuest DEI dts0100709685
      Code gen licensing flag not honored first build after is has changed
[6] ClearQuest DEI dts0100709699
      Verify generator license released after build

4. Background
-------------
Some customers, especially Saab, want to share generator licenses between 
multiple developer engineers who run BridgePoint concurrently.

The scenario is this: a license server is configured to contain 5 Builder and
Verifier licenses, and 2 generator licenses.  The engineers can all use BP for
modeling.  When the time comes to generate code, they get an available generator
license from the server.  If none is available, they wait in the license queue
until one becomes available.  

Right now, when a user builds their model, the code generation license is locked
to their machine until they exit BridgePoint.  

Marketing has requested that the license be released when code gen completes, 
thus saving the user the annoyance of having to restart BridgePoint to release
the license.

Generator license acquisition logic was last updated in [3].  It has some 
bearing on the solution here.

5. Design
---------
5.1  Add function testLicense(license_ID)
5.1.1  The BridgePointLicenseManager class is extended with a new function that
       will only test for a license's availability without actually checking out
       the license.
5.1.2  The code to check for a demo license is moved from its existing location
       in checkLicense() to a new function, isDemoLicensed(), so it can be 
       shared with testLicense().
5.1.2.1  This move necessitates a change to the instructions for building a 
         BP demo [4].
       
5.2  Update argument handler
5.2.1  MCBuilderArgumentHandler takes care of setting up the flags that are 
       passed to the MC-3020 Model Compiler external tool builder.  This class
       determines whether we pass the -l3s or -l3b flag to xtumlmc_build to 
       request a binary or source license be used in the generator.  Part of the
       determination is to check the user's access to a source or binary
       license.  Previously, the code checked out the license from the server 
       as it's test of accessibility.  This logic was implemented as part of [2].
5.2.2  Now, the code will pass the license flag -l3s or -l3b solely based on
       whether the arc/ folder is present or not.  After the correct flag is 
       determine, the code tests for a license but does not check it out.  If 
       the license test fails, a dialog is popped to the user that says:
       
        License Request Failed
        Failed to get a code generation license.  See the console view for more 
        information.
        
       Once the user OKs the dialog, the Model Compiler and EDGE builders still
       run.  Generator will run and fail with an indication about what license
       was failed to retrieve.
5.2.2  The old license fall-back logic is inadequate and unnecessary.  It is 
       handled properly inside the generator.

       Removing the license fall-back also prevents over-active modification of 
       the Model Compiler launch file in a multiple user environment where there 
       is contention for only a few generator licenses.  In case of contention, 
       the fall-back switching would go into effect causing the launch file to 
       be changed.  This led to more occurances of the problem described in 
       ยง6.1.1.  


6. Implementation Comments
--------------------------
6.1  Argument handler
6.1.1  The MC-3020 launch file of the project is updated by this class.  There
       is an annoyance/bug that remains.  That is, the file is updated (if 
       necessary) by the export builder (pre-builder) when the user chooses to 
       build the project.  However, when the file is updated, it's changes are 
       not seen by the current build, often resulting in a generator licensing
       error.  The build will succeed on all following builds.  Stated another
       way, the build will typically fail the first time after the launch file 
       is changed.  It appears that when the user chooses to build a project,
       eclipse takes a snapshot of the external tool builder launch files before
       any of the builders run.  I attempted to work around the issue without
       success.
6.1.2  It appears that the best option to solve the problem is to avoid the
       launch file altogether by moving to a different style of builder.  This
       option was explored and rejected in [2 ยง6.5.1].
6.1.2.1  Changing the builder design is once again rejected. The side effects
         of the change on user's projects simply outweighs the benefit of fixing
         the annoyance in ยง6.1.1. A DEI [5] is raised to capture this bug.
       
7. Unit Test
------------
Set Up:
  - Configured a floating license server on svr-azt-eng-01.  It has 2 builder
    licenses and only one binary model compiler license.  To use the floating
    license server, set the MGLS_LICENSE_FILE environment variable to
    1717@svr-azt-eng-01
  - Enable mc3020 to run on your development machine.  This involves copying the
    mc3020 dir from a release plugin into the com.mentor.nucleus.bp.mc.mc3020
    plugin in the development workspace.
  - Build the branch on the local machine and run the BP Application launch. Run
    Help > Licensing Information, it will show some floating licenses.
  - Use Remote Desktop to log into svr-azt-eng-01, run BridgePoint and run
    lmtools.exe
    
Test1:
  // This test verifies that the license is no longer retained once the build
  // finishes.  This test is captured in the SMA QA system as [6].
  _- Create a new xtUML Project and model in both the local and remote 
     BridgePoints
  _- Build the project on the local machine. Wait for the build to finish.
  _- In lmtools on the server, switch to the Server Status tab. Enter
     "xtumlmc3020" in the Individual Feature line, then click Perform Status
     Enquiry. Scroll down until you find the results for svr-azt-eng-01.
  _R The server indicates 1 xtumlmc3020 license is issued and 0 are in use
  
Test2:
  // This test is a continuation of Test 1
  // This test uses an older version of BridgePoint on the server that still has
  // the license retention behavior.  The test shows how the license is locked
  // and license contention is tested.  We finish the test by releasing the lock
  // and verifying contention no longer occurs.
  _- Build the project on the remote machine
  _- In lmtools on the server, switch to the Server Status tab. Enter
     "xtumlmc3020" in the Individual Feature line, then click Perform Status
     Enquiry. Scroll down until you find the results for svr-azt-eng-01.
  _R The server indicates 1 xtumlmc3020 license is issued and 1 is in use
  _- Make a change to the local project and build it again.  
  _R A license request error dialog will be shown.
  _- Click OK
  _R Generator will run and wait for a few moments trying to get a license, then
     time out and say that it could not get a license.
  _- Exit BP on the server
  _- Build the local project again
  _R It will successfully code gen and compile
  _- In lmtools on the server, switch to the Server Status tab. Enter
     "xtumlmc3020" in the Individual Feature line, then click Perform Status
     Enquiry. Scroll down until you find the results for svr-azt-eng-01.
  _R The server indicates 1 xtumlmc3020 license is issued and 0 are in use
  
  
8. Code Changes
---------------
Branch name: R3_1_5-SKB-dts0100706477

com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.util/
    BridgePointLicenseManager.java

com.mentor.nucleus.bp.mc.mc3020/src/com.mentor.nucleus.bp.mc.mc3020/
    ExportBuilder.java
com.mentor.nucleus.bp.mc.mc3020/src/com.mentor.nucleus.bp.mc.mc3020/
    MC3020Nature.java
com.mentor.nucleus.bp.mc.mc3020/src/com.mentor.nucleus.bp.mc.mc3020/
    MCBuilderArgumentHandler.java




End
---

$Log: dts0100706477.int,v $
Revision 1.3  2010/08/05 21:41:19  kbrown
job:dts0100706477
Updated to account for new error dialog.

Revision 1.2  2010/08/05 18:55:31  kbrown
job:dts0100706477
Made changes from INT review.

Revision 1.1  2010/08/04 19:12:59  kbrown
job:dts0100706477
Check in INT.
