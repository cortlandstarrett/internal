========================================================================

File:      $RCSfile: dts0100770602.dnt,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Activity , Sequence , UseCase , Communication diagrams don't get converted to 
generics while importing.



1. Abstract
-----------
When importing a model with the "convert to generics" checked, 
the following specialized diagrams don't get converted:
	- Activity 
	- Sequence  
	- UseCase  
	- Communication 
This issue is raised to address this problem.

2. History
----------


3. Document References
----------------------
[1] ClearQuest DEI dts0100770602
[2] cvs://Documentation/internal/technical/notes/dts0100760259/dts0100760259.dnt


4. Background
-------------


5. Analysis
-----------
5.1 The Sequence, Communication , Activity and UseCase Diagrams can be created
    at SystemLevel , Domain , Subsystem , Component Package and Component.
    These Diagrams can be nested as well.
    
5.2 The Connections between containers for these diagrams and the diagrams 
    themselves are as follows 

5.2.1 SystemModel is related to Sequence instances across R950,
      to Use Case Diagram instances across R1211, to Communication instances 
      across R1136, and to Activity instances across R1113.
      
5.2.2 Domain is related to Sequence instances across R913 ,
      to Use Case Diagram instances across R1201, to Communication instances 
      across R1132 and to Activity instances across R1100.
      
5.2.3 SubSystem is related to Sequence instances across R914 ,
      to Use Case Diagram instances across R1202, to Communication instances 
      across R1131 and to Activity instances across R1108.
      
5.2.4 ComponentPackage is related to Sequence instances across R951 ,
      to Use Case Diagram instances across R1212, to Communication instances 
      across R1137 and to Activity instances across R1114.

5.2.5 Component is related to Sequence instances across R952 ,
      to Use Case Diagram instances across R1213, to Communication instances 
      across R1138 and to Activity instances across R1115.
  
6. Design
---------
6.1  Methods for upgrading the informal diagrams are added 
6.1.1 upgradeSequenceDiagram()
      Upgrade the nested Sequence diagram instances. 
      Upgrade the Interaction Participants of the Sequence Diagram by creating a 
      corresponding packageable element for each one and relate it to the 
      upgraded package.
      If the InteractionParticipant represents an informal function package
      that informal function package is replaced by a package Participant 
      instance then the related interactionParticipants is upgraded.
      
6.1.2 upgradeUseCaseDiagram()
      Upgrade the nested UseCase diagram instances. 
      Upgrade the Interaction Participants of the UseCase Diagram by creating a 
      corresponding packageable element for each one and relate it to the 
      upgraded package. 
      
6.1.3 upgradeCommunicationDiagram()
      Upgrade the nested Communication diagram instances. 
      Upgrade the Interaction Participants of the Communication Diagram by 
      creating a corresponding packageable element for each one and relate it to 
      the upgraded package.
      If the InteractionParticipant represents an informal function package
      that informal function package is replaced by a package Participant 
      instance then the related interactionParticipants is upgraded.

6.1.4 upgradeActivityDiagram()
      Upgrade the nested Activity diagram instances. 
      Upgrade the activityPartitions  , activityNodes and activity edges of the 
      Activity Diagram by creating a corresponding packageable element for each 
      one and relate it to the upgraded package.

6.2 Methods that were modified to add calls for the methods mentioned above 
    for converting the informal diagrams.
6.2.1 upgradeToGenerics()
      Get the informal diagrams instances directly related to the system and 
      then call their corresponding upgrade methods. 
      Relate the upgraded packages to the systemModel.
      
6.2.2 upgradeComponent()
      Get the informal diagrams instances directly related to the Component and 
      then call their corresponding upgrade methods.  Relate the upgraded 
      packages to the component.      
      
6.2.3 upgradeComponentPackage()
      Get the informal diagrams instances directly related to the Component 
      Package and then call their corresponding upgrade methods.  
      Relate the upgraded packages to the new created package representing 
      the component Package.   

6.2.4 upgradeSubsystem()
      Get the informal diagrams instances directly related to the subsystem 
      and then call their corresponding upgrade methods.  
      Relate the upgraded packages to the new created package representing 
      subsystem.
      
6.2.5 upgradeDomain()
      Get the informal diagrams instances directly related to the Domain
      and then call their corresponding upgrade methods.  
      Relate the upgraded packages to the new created package representing 
      Domain.    
    
6.3 The method upgradeComponentPackage() got one more parameter SystemModel
    representing the systemModel instance being updated. Before, it 
    was retrieved within the method itself but it was null hence the new updated
    packages were related to null . 
    That was the reason why some packages that were originally component 
    packages not get related correctly to system across R1405
        
                      
6.4 The method upgradeComponent() got modified  to get the  InterfacePackage
    instances related to the Component and call the upgraderInterfacePackage()
    because before that modification these packages were not upgraded.                   


7. Design Comments
------------------
none

8. Work Required
----------------
Stated in the Design section 


9. Unit Test
------------
9.1 Introduce a new generic-package specific unit test that imports a 
    specialized package model which contains all the diagrams that upgrade 
    support was introduced for by this issue.  This new test shall verify that
    the "convert to generics" option during import properly updates these
    diagrams.
9.2 Run the io.mdl.test suites (no other unit test suite need to be run for 
    this issue).

    

End
---

$Log: dts0100770602.dnt,v $
Revision 1.2  2011/05/18 15:16:32  rmulvey
job:dts0100770602
Added a couple comments in pre-review

Revision 1.1  2011/05/18 15:08:38  hkhaled
job: dts0100770602
commit DNT

