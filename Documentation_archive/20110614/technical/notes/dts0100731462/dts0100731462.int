========================================================================

File:      $RCSfile: dts0100731462.int,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Support signal resolution for events when container pasted

1. Abstract
-----------
This note describes the changes to allow signal resolution when pasting a
container that eventually contains a signal event.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100731462

4. Background
-------------
Currently if you copy and paste a container, which eventually holds a signal
event, the pasted result is a transition with an orphaned assignment.  The
reason is that the tool currently has no code in place to handle this
resolution.  For non-signal events there is code that will traverse down from
the container and resolve any non local events.

5. Design
---------
5.1 Add signal resolution

The State Machine class has an operation which locates all non local events and
calls on them to resolve their polymorphic event if possible.  This operation
is removeIncompleteNonLocalEvents() (revision: 1.15).  This operation is
modified to check for a signal event, and if found find all transitions that
have it assigned.  For each of these transitions it calls on the existing
Transition.updateAssignedSignal() (revision: 1.20).

A bug was found in the existing operations, locateMatchingProvidedSignal() and
locateMatchingRequiredSignal() (Transition revision: 1.20), which incorrectly
allowed resolution to a signal event that was housed in a different state
machine.  To solve this any matching signal (by name and argument) is asked if
it can be allocated to the current transition.  The existing operation to
support this is Provided Signal.isAvailableForAllocationTo(transition_id)
(revision: 1.12) and Required Signal.isAvailableForAllocationTo(transition_id)
(revision: 1.12).

6. Implementation Comments
--------------------------

7. Unit Test
------------
_- Copy a subsystem that contains a signal event
_- Paste the subsystem in the same component
_R The error dialog is shown, explaining that a matching signal could not be
   found
   
_- Copy a subsystem that contains a signal event
_- Paste the subsystem in a component that has a matching signal currently
   unmapped
_R The paste is successful
_R There is no error dialog shown

8. Code Changes
---------------
Branch name: Review-dts0100731462

com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    State Machine/State Machine/State Machine.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    State Machine/Transition/Transition.xtuml

End
---

$Log: dts0100731462.int,v $
Revision 1.2  2010/12/17 17:46:35  tlondon
Job: dts0100731462

address review minutes

Revision 1.1  2010/12/17 16:27:51  tlondon
Job: dts0100731462

Add int
