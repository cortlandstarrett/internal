========================================================================

File:      $RCSfile: dts0100713290.dnt,v $
Version:   $Revision: 1094 $
Modified:  $Date: 2011-06-14 12:33:49 -0700 (Tue, 14 Jun 2011) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Accelerate sub-type lookup


1. Abstract
-----------
1.1 This issue was reported to allow accelerated look-up for sub-type in 
    MC-Java.
 
1.2 Accelerated Look-up is generated by MC-Java to accelerate the instance 
    look-up for instances with single unique identifiers by searching first the
    local model root,and then looking globally.
    
2. History
----------
None.

3. Document References
----------------------
[1] ClearQuest DEI dts0100713290 - Accelerate sub-type lookup

[2] ClearQuest DEI dts0100712578 - Interface operations/signals with record-type
    parameters between component references causes value access errors.

[3] Bugzilla issue - i2225 - Enhance MC-Java performance/Bi-directional
    References

4. Background
-------------
4.1 Issue [2] was reported by a customer as a critical problem , where  
    Interface operations/signals with record-type parameters between 
    component references causes value access errors .

4.2 Issue [2] was due to architectural problem in MC-Java as it does 
    not generate acceleration code for sub-type instances because 
    the identifier is a referential.

4.3 There were two possible fixes for issue[2] :
    4.3.1 Fix the MC-Java to allow accelerated look-up for sub-type instances.
    4.3.2 Change the OAL for this specific case to search for the super-type
          instance and traverse to the sub-type. 

4.4. The second fix 4.3.2 was chosen as an alternative fix because
     the first fix 4.3.1 would affect the whole of the generated source base 
     and thus requires full testing.

4.5 A branch build containing The second fix 4.3.2 was given to the customer ,
    The fix was NOT put in head.

4.6 This issue[1] was raised to get a generic fix to allow 
    accelerated lookup of sub-type instances in MC-Java.

5. Analysis
-----------
5.1 MC-Java generates accelerated instance lookup for instances with single 
    unique identifiers,This uses a call to:

    InstanceList.getGlobal(Object id);

    Accelerated lookup searches first the local model root, and then looks 
    globally.

5.2 MC-Java currently excludes sub-type accelerated look up because the id used 
    is itself a referential. This was the cause of the problem described 
    by CQ issue dts0100712578 [2].
    
    5.2.1 This limitation is implemented in MC-Java "arch_utils.inc" in 
          version 1.14.4.5 for issue [3] , but There is no clear reason from 
          the documentation for this limitation . 
    5.2.2 this limitation is implemented in MC-Java "arch_utils.inc" in 
          one function:
          is_single_unique_id() in the following part :
          .if(empty refAttr)
          .if(type.Name == "unique_id")
          .assign attr_result = true
          .end if
          
5.3 Modifying the is_single_unique_id function to accept referentials as ids 
    will enable the sub-type accelerated look up and hence fix issue [2].
    Additionally, it may provide an additional small performance improvement 
    for Verifier .


6. Design
---------
6.1 Replace the following statements in function "is_single_unique_id()",
    which were originally introduced in version 1.14.4.5 to exclude sub-type 
    accelerated look up.
    
    .if(idAttr == attr)
      ...
      .if(empty refAttr)
       .if(type.Name == "unique_id")
       .assign attr_result = true
       .end if
      .end if
     ...
    .end if

    by the following statements which were in version 1.14.4.4 to enable 
    sub-type accelerated look up
    
    .if(idAttr == attr)
      ...
      .if(not_empty refAttr)
        .select one baseAttr related by refAttr->O_BATTR[R113]->O_ATTR[R106]
        .select one type related by baseAttr->S_DT[R114]
      .end if
      .if(type.Name == "unique_id")
        .assign attr_result = true
      .end if
      ...
    .end if
    

7. Design Comments
------------------
None.

8. Work Required
----------------
Fully described in the design section.

9. Unit Test
------------
9.1 All the JUnit tests must pass.
9.2 Run the customer model as described in the related issue[2].
    _R No errors are reported.

End
---