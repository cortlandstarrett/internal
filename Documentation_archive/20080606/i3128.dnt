========================================================================

File:      $RCSfile$
Version:   $Revision$
Modified:  $Date$

(c) Copyright 2008-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Allow interaction diagrams at system levels

1. Abstract
-----------
This note describes the changes required to allow drawing informal sequence, use
case, activity, and communication diagrams at the system levels.

Additionally this note will cover the changes required to add component
participant symbols to the sequence and communication diagrams.

2. History
----------

3. Document References
----------------------
[1] Bugzilla item 3128
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=3128

4. Background
-------------
Currently you can only add interaction diagrams at the domain level, which
includes the domain package diagram and class diagram.

5. Analysis
-----------
In order to support the interaction diagrams at the system level we need to
model the containment associations between the new containers and the diagram
elements.  Once the new associations are in place we need to add the necessary
code to allow creation, deletion, modification (properties), compare, and
persistence.

To support a component participant symbol in the sequence and communication
diagrams a new subtype of Interaction Participant shall be added and configured
such that the new symbol may be created, deleted, modified, and persisted.

6. Design
---------
6.1 Add new containment associations

For each diagram element three new associations shall be added.  One association
between the System Model class and the diagram element, one between the
Component Package class and the diagram element, and one between the Component
class and the diagram element.

6.2 Add new creation operations

For each new container we must add an operation to create each diagram element.
These operations shall be:

newSequence, newCommunication, newUseCasePackage, and newActivity

These operations shall create and initialize the diagram element, and shall
relate the diagram element to the container.

6.3 Update dispose operations

Each new container shall have their dispose operations updated to remove any of
the new diagram elements associated with it.

Each diagram element shall have their dispose operations updated to unassociate
itself with the new containers.

6.4 Allow modification of diagram elements under new containers

The ooaofooa_hierarchy.pei.sql file shall be updated to account for the new
containment associations.  This will allow for compare and properties to behave
as expected.

The UITree.pei.sql file shall be modified to account for the new containment
associations.  This will allow for the Model Explorer tree to show the diagram
elements under their new containers.

6.5 Update persistence tree

The file, file_io.pei.sql, shall be modified to account for the new containment
associations.  This will allow for persistence to occur for the diagram elements
when under the new containers.

6.6 Add diagram elements to contianer canvas xml definition

In order to include the diagram elements under the new containers, each
container's defaultFor canvas xml definition shall be configured to allow the
diagram elements as children.

6.7 Add Component Participant symbol

A new class shall be added to the Interaction subsystem, and shall be associated
as a subtype of Interaction Participant.  This class shall be named Component
Participant.  All of the necessary operations shall be added which allow the
symbol to be displayed on the canvas as a component symbol.

The hierarchy, Model Explorer tree, and persistence tree shall be updated to
include this new class.

A dispose operation shall be added for the new class.

6.8 Support Lifespan on all interaction participant shapes

An additional feature was requested and shall be added as part of this work.
That feature was to allow a lifespan on all interaction participants that are
shapes.

To support this the association between a Class Instance Participant and the
Lifespan shall be moved to be between the supertype (Interaction Participant)
and the Lifespan.  The newLifeSpan operation shall be updated to not enforce
connection with an Actor and Class Instance Participant.

With this change the association between an Actor Participant and a Lifespan
shall be deprecated.  Upgrade code shall be added to find a Lifespan associated
with an Actor Participant and reassociate it across the association between
Interaction Participant and Lifespan.

7. Design Comments
------------------

8. Work Required
----------------
All work required is specified in the design section.

9. Unit Test
------------
_- Run existing test suite
_R All existing tests pass

_- Create each interaction diagram under a system, component package, and
   component
_R Each diagram is created successfully

_- Import a model which contains a lifespan connected to an actor
_R The lifespan is reassociated with the actor's supertype class

_- Draw a lifespan from each shape symbol in the sequence
_R The lifespan is allowed on each shape

End
---

$Log$
Revision 1.2  2009/01/01 23:13:01  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.1.4.1  2008/12/31 16:10:04  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.1  2008/06/06 14:47:18  rmulvey
Job:3526
Archived the issues resolved during the R2_0_0 thru R2__0_2 releases into the Documentation/archive/20080606 folder.  Updated the Documentation/archive/20080606/README.tnt note accordingly.

Revision 1.2  2008/04/07 20:30:38  tlondon
Job: 3128

Update according to review minutes.

Revision 1.1  2008/04/07 15:39:51  tlondon
Job: 3128

Introduce notes

