========================================================================

File:      $RCSfile: i459-final-review-01.chk,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:21:28 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================
Tiger Project Checklist
Transferring to Final Review

Document References
-------------------
[1] com.projtech.bp.core/doc/internal/process/templates/checklists/
                                                    introducing-new-modules.chk
[2] bp.core/doc/internal/process/standard-file-headers.txt
[3]  bp.core/doc/internal/process/coding-standards.txt

Checklist
---------
o- If work done under assigned issue introduces a new module/plugin then 
   execute checklist for introducing new modules[1].

o- Make sure all files introduced under the assigned issue have the correct 
   ASCII/Binary properties.

o- Remove all code fragments that have been commented out.
   [Tip: While commenting out code during implementation, comment out the code 
         using built in eclipse short-cut key twice to comment or un-comment 
         code. This will put quad forward slashes ////, which will be easy to 
         search for code being commented out]
   
o- All introduced files have standard headers and required footers[2].

o- All applicable coding standards[3] are followed, especially the following:
   . No unused package import statements are left.
   . All warnings given by compiler are addressed where possible.
   . Marks all internal strings as ignorables for Eclipse internalization tool 
     by adding single comments as documented in Eclipse documentation 

     //$NON-ALS-<n>$  where n = 1, 2, 3, ...  The number indicates the position 
     of the string literal on the line, e.g.: 

     assertTrue("1 " + n + "2 " + r),  //$NON-ALS-1$ //$NON-ALS-2$

     The // is required for each comment
     [Tip: To find these, temporarily check the Option 'Usage of 
           non-externalized strings' to 'Warning' available at 
           Preferences/Java/Compiler/Problems]

o- See if generate.xml file is not left with any unused elements such as 
   targets, variables etc.
   
o- Verify that entries in all .cvsignore files are valid 
   . All explicit files names do not refer to files that should have been in 
     repository.
   . All listed file patterns are very specific and do not leave any chance of 
     future files to being ignored automatically. 
     . Avoid using *.java. Instead use some prefix.
       If files are generated they should have unique file name patterns that 
       can allow them to be differentiated from others.
   . The list does not miss any file that should have been ignored and added to 
     cvs by mistake.

o- All default properties (i.e., those created by wizard) in plugin.xml have 
   been changed to reflect the project properties.
   
o- Verify that the Project dependency list does not contain any extra or 
   un-necessary dependencies

o- Verify all changes to .classpath are also made to the compile target in
   generate.xml
   
x- All files are checked-in properly and no file is left ommitted.

_- Verify that all changes specified in design note review minutes were made to 
design note, if present.  If the change wasn't made, there should be an 
explanation in the review minutes.  If there was a major observation, then 
there should be minutes from the re-review, or an explanation for the non-
review in the review minutes.

_- Verify that all changes specified in implementation note review minutes were 
made to implementation note.  If the change wasn't made, there should be an 
explanation in the review minutes.  If there was a major observation, then 
there should be minutes from the re-review, or an explanation for the non-
review in the review minutes.

x- Verify that all work specified in the design note (or in the design section 
of the implementation note), was made to the files specified in the Code 
Changes section of the implementation note. This is done by doing a comparison 
between the initial and final version of the file.  

o- Verify that any changes made to files in the Code Changes section that are 
not traceable back to work required by the design are called out in the 
Implementation Comments section of the implementation note.  

o- Verify that all files mentioned in the design and implementation notes are 
called out in the Code Changes section.

o- Verify that all modules of the project are rebuilt correctly and do not 
result in build errors. This should be done after cleaning the output 
directories.

o Verify (by thought experiment) that the Unit Test actually tests all work 
  specified by the design and implementation notes.

o- Execute all unit tests and verify that all tests pass and do not result in 
Null-pointer errors. 
[Tip: Null pointer error breakpoints are set from the Breakpoints View, using 
the J! button.]

End
---

$Log: i459-final-review-01.chk,v $
Revision 1.1  2009/09/03 18:21:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:12:56  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.62.1  2008/12/31 16:09:59  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2004/12/28 16:29:52  svenkat
Job: 459
Introducing

Revision 1.1.2.1  2004/12/23 21:53:49  svenkat
Job: 459
Introducing

Revision 1.3  2004/12/16 00:12:32  campbell
Job: 615
Clarified use of NON-ALS internationalization comment.

Revision 1.2  2004/10/21 07:51:42  siddique
Job:448
Review observation in i448-102004-01.rvm addressed.

Revision 1.1  2004/10/20 13:04:31  babar
Job: 448
Renamed from final-review-transfer.chk

Revision 1.3  2004/10/20 00:02:58  campbell
Job:448
Added cross reference new module checklist.

Revision 1.2  2004/10/15 07:33:39  siddique
Job:448
Review observations addressed.

Revision 1.1  2004/10/12 11:27:53  siddique
Job:448
Introduced.

