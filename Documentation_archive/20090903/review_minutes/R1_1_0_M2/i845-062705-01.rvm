Review Meeting Minutes

#  $RCSfile: i845-062705-01.rvm,v $
#  $Revision: 1.1 $

#  Reviewed: i845.tnt
#  Start:    
#  End:      
#  Elapsed:  

#  Present:  McC

-- Number Type Min Who Section   Comment
x- 01 Min Design 1.3          Typo: 'strucutre'.
x- 02 Min Design 2.1.1        I think we may need another method, isSatisfied(),
                              that returns false if the underlying resource was
                              deleted. This will allow client user interface
                              components to decorate their interface with error
                              markers in the case where model integrity has been
                              damaged by an inappropriate  file resource change.
                              [x: Agreed. Adding the method to 
                              IPersistableModelElement instead]
                              
x- 03 Min Design 2.1.2        Typo: 'In case where' -> 'In the case where'.
x- 04 Maj Design 2.1.2        I don't understand the objective of this section.
                              Why do we need to color anything in the ooaofooa?
                              If we do this right, then the proxy will be
                              migrated automatically whenever any action
                              language attempts to traverse a not-yet-loaded
                              link. That way, we don't have to do any special
                              time consuming coloring in the model. This code
                              can be built into the implementation of the
                              get(M)anyXXXsAcross methods so that resource
                              loading is _transparent_ to the model (I see this
                              behavior is already specified under 2.2.2, so just
                              explain why this coloring is needed here or remove
                              the section).
                              [x: Have added a section as 'Cache Issues'. 
                              Removed the text to add coloring information in
                              operations. Finally the caching of attributes for 
                              cached model element in its parent is implicit, an 
                              explicit note here was perhaps confusing]
                              
x- 05 Min Design 2.1.3        I don't see that any more information is needed in
                              file_io.pei. The only additional information that
                              is neeeded is a specification of which model
                              elements can be proxies. Once that is specified,
                              the rest of the tree falls under that proxy until
                              either a leaf or another proxy is reached. Please
                              clarify what additional information is needed
                              beyond that specified above.
                              [x:Agreed]
                              
x- 06 Min Design 2.2.1        Yes!
x- 07 Min Design 2.2.1        There are two sections 2.2.1.
x- 08 Min Design 2.2.2        Incomplete sentence 'The proxy classes shall now'.
x- 09 Min Design 2.2.2        Why do model changes need to be propagated child->
                              parent then parent->children?
                              [x: Surely the changes are propagated from 
                              parent->children, the mechanism needs to be 
                              updated  such that a child root firing a change 
                              doesnt fire itslef rather hands it over to parent 
                              so that the change can be propagated to all 
                              children]
x- 10 Min Design 2.2.2        Presumably this change propagation (if needed)
                              does not propagate to the original child?
                              [x: Presumably true. But such scenarios are yet to 
                              be identified.]                                                            
x- 11 Min Design 3.2          This section repeats what was said in 2.1.2 and
                              2.1.3 accordingly, I have the same questions about
                              it. All duplicated information should be removed.
x- 12 Min Design 3.4          Typo: 'beleived'.

Design suggestion/things to think about: Don't forget that some proxies will
_not_ represent the top of the next tree held in another resource, but will
instead point sideways to something in another sibling component (e.g. Imported
Class -> Model Class(the proxy)) or upwards to something in a parent that may or
may not be loaded (e.g. Attribute -> Data Type(the proxy)). I said in the last
batch of review comments that loading of a parent might happen immediately, but
I want to reconsider that. What if we're loading the model so that a compare can
run? To compare successfully, the upward and sideways pointing proxies need to
have values since we can't rely on the rest of the model being present. Compare
will often (always?) need to work outside of a complete loaded model (e.g. when
comparing two subsystem revisions, we don't have the domain data). So the proxy
must cache the neeed attribute values.

Consequently, how about creating proxy instances during output only. On load,
we immediately resolve and discard as many proxy instances as possible (e.g.
delete the data type proxy if the domain is already loaded and migrate its
references to the actually loaded data type). This can maybe be done during
BatchRelateAll. If any proxy instances cannot be resolved, post a Problem (I
haven't thought about what editor to cache with the problem, maybe none for
now). Don't post problems for unresolved references found during a compare,
since we don't expect them to be resolved. 
[x: Agreed]


Finally, maybe the architecture does not create Problems. Maybe this should be
done by Audit (when we build it).

Informal comments only, no formal review carried out.

---
End

$Log: i845-062705-01.rvm,v $
Revision 1.1  2009/09/03 18:24:30  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2005/06/29 14:38:03  siddique
Job:845
Review observation addressed in i845.tnt

Revision 1.2  2005/06/27 21:05:43  campbell
Job: 845
Added comment about raising Problems (or not).

Revision 1.1  2005/06/27 19:14:28  campbell
Job: 845
Introduced.

