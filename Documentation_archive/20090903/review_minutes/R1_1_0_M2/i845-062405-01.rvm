Review Meeting Minutes

#  $RCSfile: i845-062405-01.rvm,v $
#  $Revision: 1.1 $

#  Reviewed: i845.tnt
#  Start:    
#  End:      
#  Elapsed:  

#  Present:  McC

-- Number Type Min Who Section   Comment
x- 01 Min McC Design 1.          Typo: Change 'Following is another' to 'The
                                 following is another'.
x- 02 Min McC Design 1.2 Heading Typo: 'Advnatanges and Disadvantanges' ->
                                 'Advantages and Disadvantages'.
x- 03 Maj McC Design 1.2 Dis i.  UML's treatment of packages is much like
                                 folders in a file system. We should make our
                                 tool take the same view. CVS has this known
                                 weakness, it is unrelated to the tool's file
                                 structure. The Subversion version control tool
                                 does not show this weakness. This is not there-
                                 fore a disadvantage of this proposed file
                                 structure.
x- 04 Maj McC Design 1.2 Dis ii. Once again UML's treatment of packages is much
                                 like folders. In pure UML, a package is a
                                 package, you can put any artifact you like in
                                 one. In our implementation, we have dedicated
                                 packages. This is not a trend that we want to
                                 continue indefinitely and certainly not one
                                 that we want to lock ourselves into by coupling
                                 our file system implementation to it. So, two
                                 packages cannot have the same name even if they
                                 are constrained to contain different things by
                                 our implementation.
x- 05 Min McC Design 1.2 Dis ii. I don't understand what special handling will
                                 be required, please elaborate. Surely the ME
                                 scans the folder system, finds the contained
                                 components and loads them according to our lazy
                                 loading specification. This is new but not
                                 particularly special nor more difficult than
                                 the special handling needed for a flat file
                                 approach (see 07 below).
                                 [x: This handling is already done, so the point 
                                 no longer exist. Removing it from the note]                                 
x- 06 Maj McC Design 1.2 Dis iii.Long pathnames in the Problems View (and Task
                                 Search etc.) are inevitable in a tool that
                                 supports nested packages. A short path to
                                 the implementation dependent folder does not
                                 help the user figure our where in the model his
                                 problem lies. This is therefore an advantage
                                 for the tree based approach. In a flat folder
                                 approach, all the user would know is that the
                                 problem occurred in a subsystem called 'Foo-1'.
                                 He would then have to figure out which of his
                                 nested 'Foo' subsystems the problem was really
                                 in. To rectify this, we would have to find out
                                 how to change the resource location in the
                                 viewer so that it is useful to the user and
                                 then we'd be back to a long path (having done a
                                 lot of extra work).
x- 07 Maj McC Design 3.1.1       Orphaned elements are never acceptable. This
                                 exposes another weakness in the flat file
                                 proposal, since when copying a file into a
                                 location in the analysis note file structure,
                                 the parent is always known (Canvas 4 is still
                                 needed to automatically add the shape to the
                                 parent diagram, but it is at least known which
                                 diagram it must be added to).
x- 08 Min McC Design 3.1.1       Multiple typos in this section.
x- 09 Min McC Design 3.1.2       There is no reference to double click in the
                                 specified document.

Informal comments only, no formal review carried out.

---
End

$Log: i845-062405-01.rvm,v $
Revision 1.1  2009/09/03 18:24:30  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2005/06/27 14:08:27  siddique
Job:845
Addressed review observations. Made changes in i845.tnt

Revision 1.3  2005/06/24 19:16:05  campbell
Job: 845
Added comments about pathname length.

Revision 1.2  2005/06/24 19:02:57  campbell
Job: 845
Corrected typos.

Revision 1.1  2005/06/24 18:59:46  campbell
Job: 845
Introduced.

