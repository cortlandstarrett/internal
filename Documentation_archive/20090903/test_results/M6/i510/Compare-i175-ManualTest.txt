==========================================================================

File:      $RCSfile: Compare-i175-ManualTest.txt,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:25:31 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

==========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
==========================================================================

Source:  bp.core\doc\internal\technical\Compare\compare-i175.int 

Note: The following tests were written for .sql/.bak files but actually have
been executed for .mdl files. 

_- Test basic comparison functionality
   Create a copy of testOAL1.bak, Make changes to the "Domain Description", 
   "Function Name" (test to testNew), Change attribute Disk_ID name in class 
   Disk, Change Action Semantics Field of Function 'initialize', Change an 
   Event’s name, Change name of State machine and save it as testOAL1New.sql.
   Select the two files (testOAL1.sql and testOAL1New.sql), in the context menu 
   select Compare With > Each Other. 
x_R It shows the above differences in the files. 
_- Clicking on an Item on comparison tree.
x_R Selects the text for that node and its children, in lower window panes (left 
   and right panes).   

_- Compare two SQL files with logically same model but different unique IDs
   Export the sql for model testOAL1.bak and change the IDs and name them as 
   testOAL1.sql and testOAL2.sql. Make sure that both files have different IDs 
   associated with the same objects. Compare them both. 
x_R The compare progress dialog appears loading both models. Finally the compare 
   tree viewer title bar will show "Bridge Point Model Comparison (No Structural 
   Differences)".

_- Two similar files should not be compared.
   Create a copy testOAL1.sql named testOAL2.sql. Compare testOAL1.sql and 
   testOAL2.sql.
x_R A Dialog box appears stating "There are no differences between the selected 
   inputs."

_- Compare Invalid SQL files
   Remove the header of SQL File i.e. delete line "-- BP 6.1D content: domain 
   syschar: 3".  Compare with the original SQL file. 
x_R The compare window should show that 
   "Bridge Point Model Comparison (Can't Compare Structures)” and shows a dialog
   box showing error message that file is not a valid uml model.
   
_- Restore from Local History
   Delete testOAL1.sql. Right click the project folder, click "Restore from 
   Local History...". 
   
x_R A window appears with a list of locally deleted files labeled as 
   "CompareTest - Available files in Local History". 
   _- Select testOAL1.sql. 
   x_R The import SQL progress dialog appears and loads the model. The lower 
      pane of the window has the text of testOAL1.sql. The top right pane has a 
      list of timestamps for each day of this file. 
   _- Click on different times (representing history of the file at the time) 
   x_R On each click the respective version of the SQL file is loaded and its 
      text is shown below. 
   _- Click on the date node.
   x_R Clears the lower text pane. 
   _- Click again on any number of sub items (the time labels).
   x_R Shows the text again in the pane below. 
   
   _- Click the check box on the left of testOAL1.sql in left pane and press 
      Restore button.
   x_R The selected version of testOAL1.sql will be restored.
   _- Check contents of testOAL1.sql, it should contain valid SQL statements.
   x_R The SQL file remains intact (updated to the version to which it is 
      restored)

_- Compare With > Local History
x_R It shows a list of timestamps of the file. Double click on any of them. 
   The compare will be performed showing the structural difference between 
   the two version of the file. The comparison tree appears at right top 
   pane. While the two files appear side by side in the panes below. 

   _- Click on any node (timestamps of file) labeled by date.
   x_R The lower pane is cleared.
   
   _- Click on any node with time as label
   x_R The comparison is performed again.
   
_- Replace with > Local History
x_R Results are same as the test "Compare With > Local History" except that no
   difference tree is shown this time. Only text of the two files is shown in 
   the lower panes.
   _- Select any timestamp of the file and press Replace button.
   x_R That version of the file replaces the current version of the file
  
_- Testing compare with CVS 
   Check testOAL1.sql into CVS, And then make changes as stated above. In the 
   context menu attempt following options:
   
   _- Team > Synchronize With Repository...
      Select modified file testOAL1.sql and perform Synchronize with repository      
   x_R Outgoing changes are indicated by an arrow (added to the file icon) 
      pointing towards the right.
      
      Double click on the file to run the comparison operation. 
   x_R The comparison is shown accordingly.
   	  
   	  Check in another version of the same file from some other location. Now 
   	  your local copy is older then the repository file. Perform the 
   	  Synchronize again.
   x_R Incoming changes are indicated by an arrow (added to the file icon) 
      pointing towards left.
      
      
   
   _- Team > Merge
      This functionality requires that the file has a starting point in a 
      branch. Run this on an SQL file which is being branched from HEAD 
      (e.g. ooaofooa.sql). (Follow the merge process as described in eclipse 
      documentation)
      First dialog asks for the starting point, select the appropriate version. 
      Then the next dialog asks the places the changes are to be merged from. 
      Press Finish.
      
      _- Branched File is changed and HEAD remains same
         Modify the branched ooaofooa.sql, and perform the steps mentioned above
         for merge. 
      x_R The file ooaofooa.sql will be shown with incoming changes.           
         Double click on the file to Show Content Comparison.
      x_R Compare plugin is activated and the files are compared, showing the 
         performed incoming changes.    
      
      _- Both the Branched and the HEAD files are changed
         Modify the branched ooaofooa.sql and check-in back to branch. Also 
         modify the same file at HEAD and check-in the file back in HEAD. 
         Perform the steps mentioned above for merge.
      x_R The file will show incoming and outgoing changes alongwith conflicts 
         (if any exist)
         
         Double click the file to Show Content Comparison.
      x_R Compare plugin is activated and the files are compared, showing the 
         changes & conflicts.
   
   _- Team > Show in Resource History
   x_R A list of versions submitted into the CVS of the file is shown. 
      Select any two files and select Compare from the context menu. 
   x_R The compare will be performed showing the structural difference between 
      the two versions of the file.
      
   _- Compare With > Latest from Repository
   x_R It shows the file in the tree (in case any difference exist)
      Double Click on the file, to run the compare functionality
   x_R Comparison is performed showing both the structural and content 
      differences
      
   x_- Compare With > Another Branch or Version
      Follow the same procedure described above for Compare With > Latest from 
      Repository.
  
   _- Compare With > Revision (Perform this after checking in two version of 
      testOAL1.sql)
   x_R A list of different versions in CVS are shown. 
      Double click on any version of the file 
   x_R Comparison is done with the double clicked file and difference shown 
      accordingly
   
   _- Replace With > Revision 
   x_R Same as the above test i.e. "Compare With > Revision"
   
End
---
  
*Log*  
