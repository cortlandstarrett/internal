io.canvas:

ui\canvas\Axis_c.java(16): public final static int OOA_UNINITIALIZED_ENUM = -1;
ui\canvas\Axis_c.java(18): public final static int X = 1;
ui\canvas\Axis_c.java(19): public final static int Y = 2;
ui\canvas\CanvasEditor.java(210): if (event.button == 1) {
ui\canvas\CanvasEditor.java(218): if (event.button == 2) {
ui\canvas\CanvasEditor.java(221): if (event.button == 3) {
ui\canvas\CanvasEditor.java(222): if ((event.stateMask & (SWT.BUTTON1 | SWT.BUTTON2)) == 0) {
ui\canvas\CanvasEditor.java(234): if (event.button == 1 || event.button == 3) {
ui\canvas\CanvasEditor.java(448): static final int imageWidth = 8000;
ui\canvas\CanvasEditor.java(449): static final int imageHeight = 6000;
ui\canvas\CanvasEditor.java(450): static final int scrollBy = 8;
ui\canvas\CanvasEditor.java(487): int imageWidth = 8000;
ui\canvas\CanvasEditor.java(488): int imageHeight = 6000;
ui\canvas\CanvasEditor.java(510): int imageWidth = 8000;
ui\canvas\CanvasE
ditor.java(511): int imageHeight = 6000;
ui\canvas\CanvasPlugin.java(99): int value = 0;
ui\canvas\CanvasPlugin.java(252): int value = 0;
ui\canvas\Cl_c.java(175): if (Ooa_type == 1) {
ui\canvas\Cl_c.java(232): } else if (Ooa_type == 40) {
ui\canvas\Connector_c.java(393): int len = 0;
ui\canvas\Connector_c.java(398): int j = 0;
ui\canvas\Connector_c.java(440): int len = 0;
ui\canvas\Connector_c.java(445): int j = 0;
ui\canvas\Connector_c.java(732): int Startx1 = 0;
ui\canvas\Connector_c.java(734): int Starty1 = 0;
ui\canvas\Connector_c.java(736): int Startx2 = 0;
ui\canvas\Connector_c.java(738): int Starty2 = 0;
ui\canvas\Connector_c.java(743): int segResultCount = 0;
ui\canvas\Connector_c.java(744): int segInstCount = 0;
ui\canvas\Connector_c.java(750): if ((selected.getPrevious_ge_id() == 0)) {
ui\canvas\Connector_c.java(859): if ((selected.getPrevious_ge_id() == 0)) {
ui\canvas\Connector_c.java(989): int text_x = 0;
ui\canvas\Connector_c.java(991): int text_y = 0;
ui\canvas\Connector_c.java(993): int text_w = 0;
ui\canvas\Connector_c.java(995): int text_h = 0;
ui\canvas\Connector_c.java(1033): if ((text_w == 0 && text_h == 0)) {
ui\canvas\Connector_c.java(1256): int text_x = 0;
ui\canvas\Connector_c.java(1258): int text_y = 0;
ui\canvas\Connector_c.java(1434): if ((segment.getPrevious_ge_id() == 0)) {
ui\canvas\Connector_c.java(1603): return (end_cons.length == 0);
ui\canvas\Connector_c.java(1933): int segmentResultCount = 0;
ui\canvas\Connector_c.java(1934): int segmentInstCount = 0;
ui\canvas\Connector_c.java(1940): if ((selected.getPrevious_ge_id() == 0)) {
ui\canvas\Connector_c.java(1965): int segmentResultCount = 0;
ui\canvas\Connector_c.java(1966): int segmentInstCount = 0;
ui\canvas\Connector_c.java(1972): if ((selected.getPrevious_ge_id() == 0)) {
ui\canvas\Connector_c.java(1995): int x = 0;
ui\canvas\Connector_c.java(2025): int y = 0;
ui\canvas\Connector_c.java(2064): int nw_x = 0;
ui\canvas\Connector_c.java(2066): int nw_y = 0;
ui\canvas\Connector_c.java(2068): int se_x = 0;
ui\canvas\Connector_c.java(2070): int se_y = 0;
ui\canvas\Connector_c.java(2203): int XIntersect = 0;
ui\canvas\Connector_c.java(2205): int YIntersect = 0;
ui\canvas\Connector_c.java(2255): int moveX = 0;
ui\canvas\Connector_c.java(2377): int moveY = 0;
ui\canvas\Connector_c.java(2584): int delta_x = 90;
ui\canvas\Connector_c.java(2642): int other_segResultCount = 0;
ui\canvas\Connector_c.java(2643): int other_segInstCount = 0;
ui\canvas\Connector_c.java(2840): int segmentResultCount = 0;
ui\canvas\Connector_c.java(2841): int segmentInstCount = 0;
ui\canvas\Connector_c.java(2847): if ((selected.getPrevious_ge_id() == 0)) {
ui\canvas\Connector_c.java(2897): int count = 0;
ui\canvas\Connector_c.java(2916): if ((count == 1)) {
ui\canvas\Connector_c.java(3062): int segResultCount = 0;
ui\canvas\Connector_c.java(3063): int segInstCount = 0;
ui\canvas\Connector_c.java(3069): if ((selected.getPrevious_ge_id() == 0)) {
ui\canvas\ConnectorSpecification_c.java(144): int len = 0;
ui\canvas\ConnectorSpecification_c.java(151): int j = 0;
ui\canvas\ConnectorSpecification_c.java(197): int len = 0;
ui\canvas\ConnectorSpecification_c.java(204): int j = 0;
ui\canvas\ConnectorSpecification_c.java(250): int len = 0;
ui\canvas\ConnectorSpecification_c.java(257): int j = 0;
ui\canvas\ConnectorTerminal_c.java(393): int elemResultCount = 0;
ui\canvas\ConnectorTerminal_c.java(394): int elemInstCount = 0;
ui\canvas\ConnectorText_c.java(195): int len = 0;
ui\canvas\ConnectorText_c.java(200): int j = 0;
ui\canvas\ConnectorText_c.java(565): int x = 0;
ui\canvas\ConnectorText_c.java(567): int y = 0;
ui\canvas\ConnectorText_c.java(569): int w = 0;
ui\canvas\ConnectorText_c.java(571): int h = 0;
ui\canvas\ConnectorTool_c.java(24): static final int EVCD_CONNECTOR_TOOL_SUITABLE_LOCATION = 5;
ui\canvas\ConnectorTool_c.java(31): static final int EVCD_CONNECTOR_TOOL_UNSUITABLE_LOCATION = 4;
ui\canvas\ConnectorTool_c.java(40): static final int EVCD_CONNECTOR_TOOL_MOUSE_UP = 6;
ui\canvas\ConnectorTool_c.java(47): static final int EVCD_CONNECTOR_TOOL_DONE = 10;
ui\canvas\ConnectorTool_c.java(54): static final int EVCD_CONNECTOR_TOOL_COMPLETE = 8;
ui\canvas\ConnectorTool_c.java(63): static final int EVCD_CONNECTOR_TOOL_MOUSE_MOVE = 7;
ui\canvas\ConnectorTool_c.java(72): static final int EVCD_CONNECTOR_TOOL_MOUSE_DOWN = 3;
ui\canvas\ConnectorTool_c.java(79): static final int EVCD_CONNECTOR_TOOL_DEACTIVATE = 2;
ui\canvas\ConnectorTool_c.java(86): static final int EVCD_CONNECTOR_TOOL_ACTIVATE = 1;
ui\canvas\ConnectorTool_c.java(658): if ((seg.getPrevious_ge_id() == 0)) {
ui\canvas\ConnectorTool_c.java(1074): ST_CONNECTOR_TOOL_CREATING_SEGMENT_WITHOUT_MOUSE_MOVE = 15;
ui\canvas\ConnectorTool_c.java(1084): static final int EVCD_CONNECTOR_TOOL_SUITABLE_LOCATION = 5;
ui\canvas\ConnectorTool_c.java(1100): static final int EVCD_CONNECTOR_TOOL_UNSUITABLE_LOCATION = 4;
ui\canvas\ConnectorTool_c.java(1111): static final int EVCD_CONNECTOR_TOOL_MOUSE_UP = 6;
ui\canvas\ConnectorTool_c.java(1127): static final int EVCD_CONNECTOR_TOOL_DONE = 10;
ui\canvas\ConnectorTool_c.java(1137): static final int EVCD_CONNECTOR_TOOL_COMPLETE = 8;
ui\canvas\ConnectorTool_c.java(1148): static final int EVCD_CONNECTOR_TOOL_MOUSE_MOVE = 7;
ui\canvas\ConnectorTool_c.java(1164): static final int EVCD_CONNECTOR_TOOL_MOUSE_DOWN = 3;
ui\canvas\ConnectorTool_c.java(1180): static final int EVCD_CONNECTOR_TOOL_DEACTIVATE = 2;
ui\canvas\ConnectorTool_c.java(1191): static final int EVCD_CONNECTOR_TOOL_ACTIVATE = 1;
ui\canvas\Cursortype_c.java(16): public final static int OOA_UNINITIALIZED_ENUM = -1;
ui\canvas\Cursortype_c.java(18): public final static int Default = 1;
ui\canvas\Cursortype_c.java(19): public final static int OpenHand = 2;
ui\canvas\Cursortype_c.java(20): public final static int ClosedHand = 3;
ui\canvas\Cursortype_c.java(21): public final static int Connector_Node_Handle = 4;
ui\canvas\Direction_c.java(16): public final static int OOA_UNINITIALIZED_ENUM = -1;
ui\canvas\Direction_c.java(18): public final static int North = 1;
ui\canvas\Direction_c.java(19): public final static int South = 2;
ui\canvas\Direction_c.java(20): public final static int East = 3;
ui\canvas\Direction_c.java(21): public final static int West = 4;
ui\canvas\Direction_c.java(22): public final static int None = 5;
ui\canvas\ElementInResize_c.java(399): int w = 0;
ui\canvas\ElementSpecification_c.java(174): int len = 0;
ui\canvas\ElementSpecification_c.java(180): int j = 0;
ui\canvas\ElementSpecification_c.java(240): int len = 0;
ui\canvas\ElementSpecification_c.java(246): int j = 0;
ui\canvas\ElementSpecification_c.java(289): int len = 0;
ui\canvas\ElementSpecification_c.java(295): int j = 0;
ui\canvas\ElementSpecification_c.java(339): int len = 0;
ui\canvas\ElementSpecification_c.java(346): int j = 0;
ui\canvas\ElementSpecification_c.java(392): int len = 0;
ui\canvas\ElementSpecification_c.java(398): int j = 0;
ui\canvas\ElementSpecification_c.java(441): int len = 0;
ui\canvas\ElementSpecification_c.java(447): int j = 0;
ui\canvas\Gr_c.java(41): private static int lastX = 0;
ui\canvas\Gr_c.java(42): private static int lastY = 0;
ui\canvas\Gr_c.java(51): int yOffset = 0;
ui\canvas\Gr_c.java(95): int graphic_spacing = 4;
ui\canvas\Gr_c.java(105): int curveRadius = 25;
ui\canvas\Gr_c.java(164): topLeft[0] = 0;
ui\canvas\Gr_c.java(165): topLeft[1] = 0;
ui\canvas\Gr_c.java(167): topLeft[3] = 0;
ui\canvas\Gr_c.java(174): topLeft[10] = 0;
ui\canvas\Gr_c.java(316): triangle[0] = 0;
ui\canvas\Gr_c.java(317): triangle[1] = 0;
ui\canvas\Gr_c.java(318): triangle[2] = 12;
ui\canvas\Gr_c.java(319): triangle[3] = 24;
ui\canvas\Gr_c.java(320): triangle[4] = -12;
ui\canvas\Gr_c.java(321): triangle[5] = 24;
ui\canvas\Gr_c.java(339): if (x <= Width || Width == 0) {
ui\canvas\Gr_c.java(345): int len = 0;
ui\canvas\Gr_c.java(406): if (result.length == 1) {
ui\canvas\Gr_c.java(422): openArrow[0] = -6;
ui\canvas\Gr_c.java(423): openArrow[1] = 12;
ui\canvas\Gr_c.java(424): openArrow[2] = 0;
ui\canvas\Gr_c.java(425): openArrow[3] = 0;
ui\canvas\Gr_c.java(426): openArrow[4] = 6;
ui\canvas\Gr_c.java(427): openArrow[5] = 12;
ui\canvas\Gr_c.java(573): int foo = 0;
ui\canvas\Gr_c.java(606): int imageWidth = 8000;
ui\canvas\Gr_c.java(607): int imageHeight = 6000;
ui\canvas\GraphicalElement_c.java(267): int len = 0;
ui\canvas\GraphicalElement_c.java(273): int j = 0;
ui\canvas\GraphicalElement_c.java(321): int len = 0;
ui\canvas\GraphicalElement_c.java(327): int j = 0;
ui\canvas\GraphicalElement_c.java(370): int len = 0;
ui\canvas\GraphicalElement_c.java(376): int j = 0;
ui\canvas\GraphicalElement_c.java(419): int len = 0;
ui\canvas\GraphicalElement_c.java(425): int j = 0;
ui\canvas\GraphicalElement_c.java(468): int len = 0;
ui\canvas\GraphicalElement_c.java(474): int j = 0;
ui\canvas\GraphicalElement_c.java(517): int len = 0;
ui\canvas\GraphicalElement_c.java(523): int j = 0;
ui\canvas\GraphicalElement_c.java(567): int len = 0;
ui\canvas\GraphicalElement_c.java(573): int j = 0;
ui\canvas\GraphicalElement_c.java(616): int len = 0;
ui\canvas\GraphicalElement_c.java(622): int j = 0;
ui\canvas\GraphicalElement_c.java(665): int len = 0;
ui\canvas\GraphicalElement_c.java(671): int j = 0;
ui\canvas\GraphicalElement_c.java(933): int matchingElemSpecResultCount = 0;
ui\canvas\GraphicalElement_c.java(934): int matchingElemSpecInstCount = 0;
ui\canvas\GraphicalElement_c.java(1283): int intersect = 0;
ui\canvas\GraphicalElement_c.java(1316): int intersect = 0;
ui\canvas\InstanceList.java(52): if (size() == 0) {
ui\canvas\LineSegment_c.java(243): int len = 0;
ui\canvas\LineSegment_c.java(248): int j = 0;
ui\canvas\LineSegment_c.java(306): int len = 0;
ui\canvas\LineSegment_c.java(312): int j = 0;
ui\canvas\LineSegment_c.java(355): int len = 0;
ui\canvas\LineSegment_c.java(360): int j = 0;
ui\canvas\LineSegment_c.java(402): int len = 0;
ui\canvas\LineSegment_c.java(407): int j = 0;
ui\canvas\LineSegment_c.java(774): if ((getPrevious_ge_id() == 0)) {
ui\canvas\LineSegment_c.java(941): int count = 0;
ui\canvas\LineSegment_c.java(974): int XIntersect = 0;
ui\canvas\LineSegment_c.java(976): int YIntersect = 0;
ui\canvas\LineSegment_c.java(1122): int XIntersect = 0;
ui\canvas\LineSegment_c.java(1124): int YIntersect = 0;
ui\canvas\masterTimer_c.java(18): static final int timerResolution = 10; // timer resolution in milliseconds
ui\canvas\Model_c.java(25): static final int EVCD_MODEL_MOUSE_MOVED = 4;
ui\canvas\Model_c.java(34): static final int EVCD_MODEL_MOUSE_RELEASED = 3;
ui\canvas\Model_c.java(44): static final int EVCD_MODEL_MOUSE_PRESS_OVER_SYMBOL = 9;
ui\canvas\Model_c.java(54): static final int EVCD_MODEL_MOUSE_PRESSED = 2;
ui\canvas\Model_c.java(64): static final int EVCD_MODEL_MOUSE_PRESS_OVER_WHITESPACE = 8;
ui\canvas\Model_c.java(71): static final int EVCD_MODEL_DONE = 6;
ui\canvas\Model_c.java(80): static final int EVCD_MODEL_MOUSE_PRESS_OVER_SELECTED_SYMBOL = 12;
ui\canvas\Model_c.java(89): static final int EVCD_MODEL_MOUSE_CONTEXT_PRESS = 5;
ui\canvas\Model_c.java(96): static final int EVCD_MODEL_SPACE_PRESSED = 14;
ui\canvas\Model_c.java(103): static final int EVCD_MODEL_SPACE_RELEASED = 15;
ui\canvas\Model_c.java(110): static final int EVCD_MODEL_MOUSE_MOVED_OVER_WHITESPACE = 18;
ui\canvas\Model_c.java(119): static final int EVCD_MODEL_MOUSE_MOVED_OVER_HOTSPOT = 19;
ui\canvas\Model_c.java(126): static final int EVCD_MODEL_TOOL_ACTIVATED = 20;
ui\canvas\Model_c.java(133): static final int EVCD_MODEL_TOOL_DEACTIVATED = 21;
ui\canvas\Model_c.java(140): static final int EVCD_MODEL_MOUSE_EXIT = 22;
ui\canvas\Model_c.java(147): static final int EVCD_MODEL_MOUSE_ENTER = 23;
ui\canvas\Model_c.java(156): static final int EVCD_MODEL_WAYPOINT_CREATED = 24;
ui\canvas\Model_c.java(365): int len = 0;
ui\canvas\Model_c.java(370): int j = 0;
ui\canvas\Model_c.java(412): int len = 0;
ui\canvas\Model_c.java(417): int j = 0;
ui\canvas\Model_c.java(464): int len = 0;
ui\canvas\Model_c.java(469): int j = 0;
ui\canvas\Model_c.java(516): int len = 0;
ui\canvas\Model_c.java(521): int j = 0;
ui\canvas\Model_c.java(567): int len = 0;
ui\canvas\Model_c.java(572): int j = 0;
ui\canvas\Model_c.java(614): int len = 0;
ui\canvas\Model_c.java(620): int j = 0;
ui\canvas\Model_c.java(999): int result = 0;
ui\canvas\Model_c.java(1082): int result = 0;
ui\canvas\Model_c.java(1422): newY = 0;
ui\canvas\Model_c.java(1440): newX = 0;
ui\canvas\Model_c.java(1471): int sel_symb_count = 0;
ui\canvas\Model_c.java(1490): int sel_con_count = 0;
ui\canvas\Model_c.java(1603): if (((tools.length == 0))) {
ui\canvas\Model_c.java(1663): int mtResultCount = 0;
ui\canvas\Model_c.java(1664): int mtInstCount = 0;
ui\canvas\Model_c.java(1770): int elem_specResultCount = 0;
ui\canvas\Model_c.java(1771): int elem_specInstCount = 0;
ui\canvas\Model_c.java(1785): int mtResultCount = 0;
ui\canvas\Model_c.java(1786): int mtInstCount = 0;
ui\canvas\Model_c.java(1931): int elemResultCount = 0;
ui\canvas\Model_c.java(1932): int elemInstCount = 0;
ui\canvas\Model_c.java(1989): ST_MODEL_MOUSE_NOT_ON_CANVAS = 25;
ui\canvas\Model_c.java(1999): static final int EVCD_MODEL_MOUSE_MOVED = 4;
ui\canvas\Model_c.java(2014): static final int EVCD_MODEL_MOUSE_RELEASED = 3;
ui\canvas\Model_c.java(2029): static final int EVCD_MODEL_MOUSE_PRESS_OVER_SYMBOL = 9;
ui\canvas\Model_c.java(2047): static final int EVCD_MODEL_MOUSE_PRESSED = 2;
ui\canvas\Model_c.java(2064): static final int EVCD_MODEL_MOUSE_PRESS_OVER_WHITESPACE = 8;
ui\canvas\Model_c.java(2082): static final int EVCD_MODEL_DONE = 6;
ui\canvas\Model_c.java(2092): static final int EVCD_MODEL_MOUSE_PRESS_OVER_SELECTED_SYMBOL = 12;
ui\canvas\Model_c.java(2108): static final int EVCD_MODEL_MOUSE_CONTEXT_PRESS = 5;
ui\canvas\Model_c.java(2124): static final int EVCD_MODEL_SPACE_PRESSED = 14;
ui\canvas\Model_c.java(2134): static final int EVCD_MODEL_SPACE_RELEASED = 15;
ui\canvas\Model_c.java(2144): static final int EVCD_MODEL_MOUSE_MOVED_OVER_WHITESPACE = 18;
ui\canvas\Model_c.java(2155): static final int EVCD_MODEL_MOUSE_MOVED_OVER_HOTSPOT = 19;
ui\canvas\Model_c.java(2171): static final int EVCD_MODEL_TOOL_ACTIVATED = 20;
ui\canvas\Model_c.java(2181): static final int EVCD_MODEL_TOOL_DEACTIVATED = 21;
ui\canvas\Model_c.java(2192): static final int EVCD_MODEL_MOUSE_EXIT = 22;
ui\canvas\Model_c.java(2202): static final int EVCD_MODEL_MOUSE_ENTER = 23;
ui\canvas\Model_c.java(2212): static final int EVCD_MODEL_WAYPOINT_CREATED = 24;
ui\canvas\Model_c.java(2811): int toolResultCount = 0;
ui\canvas\Model_c.java(2812): int toolInstCount = 0;
ui\canvas\Model_c.java(3182): int toolResultCount = 0;
ui\canvas\Model_c.java(3183): int toolInstCount = 0;
ui\canvas\Model_c.java(3523): int toolResultCount = 0;
ui\canvas\Model_c.java(3524): int toolInstCount = 0;
ui\canvas\ModelContentOutlinePage.java(220): return !(((Operation_c) element).getInstance_based() == 1);
ui\canvas\ModelSpecification_c.java(77): int len = 0;
ui\canvas\ModelSpecification_c.java(83): int j = 0;
ui\canvas\ModelSpecification_c.java(126): int len = 0;
ui\canvas\ModelSpecification_c.java(132): int j = 0;
ui\canvas\ModelTool_c.java(22): static final int EVCD_MODEL_TOOL_ACTIVATE = 5;
ui\canvas\ModelTool_c.java(29): static final int EVCD_MODEL_TOOL_DONE = 2;
ui\canvas\ModelTool_c.java(38): static final int EVCD_MODEL_TOOL_MOUSE_MOVE = 4;
ui\canvas\ModelTool_c.java(47): static final int EVCD_MODEL_TOOL_MOUSE_DOWN = 1;
ui\canvas\ModelTool_c.java(56): static final int EVCD_MODEL_TOOL_MOUSE_UP = 3;
ui\canvas\ModelTool_c.java(63): static final int EVCD_MODEL_TOOL_DEACTIVATE = 6;
ui\canvas\ModelTool_c.java(318): int len = 0;
ui\canvas\ModelTool_c.java(323): int j = 0;
ui\canvas\ModelTool_c.java(366): int len = 0;
ui\canvas\ModelTool_c.java(371): int j = 0;
ui\canvas\ModelTool_c.java(414): int len = 0;
ui\canvas\ModelTool_c.java(419): int j = 0;
ui\canvas\ModelTool_c.java(690): ST_MODEL_TOOL_ACTIVATING = 2;
ui\canvas\ModelTool_c.java(700): static final int EVCD_MODEL_TOOL_ACTIVATE = 5;
ui\canvas\ModelTool_c.java(710): static final int EVCD_MODEL_TOOL_DONE = 2;
ui\canvas\ModelTool_c.java(720): static final int EVCD_MODEL_TOOL_MOUSE_MOVE = 4;
ui\canvas\ModelTool_c.java(736): static final int EVCD_MODEL_TOOL_MOUSE_DOWN = 1;
ui\canvas\ModelTool_c.java(752): static final int EVCD_MODEL_TOOL_MOUSE_UP = 3;
ui\canvas\ModelTool_c.java(767): static final int EVCD_MODEL_TOOL_DEACTIVATE = 6;
ui\canvas\ModelTool_c.java(815): int toolsResultCount = 0;
ui\canvas\ModelTool_c.java(816): int toolsInstCount = 0;
ui\canvas\ModelTool_c.java(828): toolsResultCount = 0;
ui\canvas\Modeltype_c.java(16): public final static int OOA_UNINITIALIZED_ENUM = -1;
ui\canvas\Modeltype_c.java(18): public final static int None = 0;
ui\canvas\Modeltype_c.java(19): public final static int DomainPackageDiagram = 1;
ui\canvas\Modeltype_c.java(20): public final static int PDDR = 2;
ui\canvas\Modeltype_c.java(21): public final static int PDDA = 3;
ui\canvas\Modeltype_c.java(22): public final static int PDDS = 4;
ui\canvas\Modeltype_c.java(23): public final static int ClassDiagram = 5;
ui\canvas\Modeltype_c.java(24): public final static int OCDA = 6;
ui\canvas\Modeltype_c.java(25): public final static int OCDS = 7;
ui\canvas\Modeltype_c.java(26): public final static int InstanceStatechartDiagram = 8;
ui\canvas\Modeltype_c.java(27): public final static int ClassStatechartDiagram = 10;
ui\canvas\Modeltype_c.java(28): public final static int DataTypePackageDiagram = 100;
ui\canvas\Modeltype_c.java(29): public final static int FunctionPackageDiagram = 101;
ui\canvas\Modeltype_c.java(30): public final static int ExternalEntityPackageDiagram = 102;
ui\canvas\Ooaofgraphics.java(365): int eeGesResultCount = 0;
ui\canvas\Ooaofgraphics.java(366): int eeGesInstCount = 0;
ui\canvas\Ooaofgraphics.java(377): eeGesResultCount = 0;
ui\canvas\Ooaofgraphics.java(487): int oldEEResultCount = 0;
ui\canvas\Ooaofgraphics.java(488): int oldEEInstCount = 0;
ui\canvas\Ooaofgraphics.java(663): int oldEEResultCount = 0;
ui\canvas\Ooaofgraphics.java(664): int oldEEInstCount = 0;
ui\canvas\Ooaofgraphics.java(1077): int eeGesResultCount = 0;
ui\canvas\Ooaofgraphics.java(1078): int eeGesInstCount = 0;
ui\canvas\Ooaofgraphics.java(1090): eeGesResultCount = 0;
ui\canvas\Ooaofgraphics.java(1178): int oldEEResultCount = 0;
ui\canvas\Ooaofgraphics.java(1179): int oldEEInstCount = 0;
ui\canvas\Ooaofgraphics.java(1246): int gesResultCount = 0;
ui\canvas\Ooaofgraphics.java(1247): int gesInstCount = 0;
ui\canvas\Ooaofgraphics.java(1258): gesResultCount = 0;
ui\canvas\Ooaofgraphics.java(1340): int eeGesResultCount = 0;
ui\canvas\Ooaofgraphics.java(1341): int eeGesInstCount = 0;
ui\canvas\Ooaofgraphics.java(1352): eeGesResultCount = 0;
ui\canvas\Ooatype_c.java(16): public final static int OOA_UNINITIALIZED_ENUM = -1;
ui\canvas\Ooatype_c.java(18): public final static int Subsystem = 11;
ui\canvas\Ooatype_c.java(19): public final static int EE = 12;
ui\canvas\Ooatype_c.java(20): public final static int Class = 21;
ui\canvas\Ooatype_c.java(21): public final static int ImportedClass = 23;
ui\canvas\Ooatype_c.java(22): public final static int Association = 24;
ui\canvas\Ooatype_c.java(23): public final static int CommunicationPath = 28;
ui\canvas\Ooatype_c.java(24): public final static int AccessPath = 29;
ui\canvas\Ooatype_c.java(25): public final static int AssociativeLink = 34;
ui\canvas\Ooatype_c.java(26): public final static int Subtype = 35;
ui\canvas\Ooatype_c.java(27): public final static int Supertype = 36;
ui\canvas\Ooatype_c.java(28): public final static int State = 41;
ui\canvas\Ooatype_c.java(29): public final static int Transition = 42;
ui\canvas\Ooatype_c.java(30): public final static int DerivedCommunicationPath = 47;
ui\canvas\Ooatype_c.java(31): public final static int DerivedAccessPath = 48;
ui\canvas\Ooatype_c.java(32): public final static int CoreDataType = 50;
ui\canvas\Ooatype_c.java(33): public final static int UserDataType = 51;
ui\canvas\Ooatype_c.java(34): public final static int EnumerationDataType = 52;
ui\canvas\Ooatype_c.java(35): public final static int DataTypePackage = 53;
ui\canvas\Ooatype_c.java(36): public final static int FunctionPackage = 54;
ui\canvas\Ooatype_c.java(37): public final static int ExternalEntityPackage = 55;
ui\canvas\Ooatype_c.java(38): public final static int None = 0;
ui\canvas\SegmentInFlex_c.java(474): int endTermSpecResultCount = 0;
ui\canvas\SegmentInFlex_c.java(475): int endTermSpecInstCount = 0;
ui\canvas\SegmentInFlex_c.java(526): && segment.getPrevious_ge_id() == 0)) {
ui\canvas\SelectionTool_c.java(22): static final int EVCD_SELECTION_TOOL_ACTIVATE = 1;
ui\canvas\SelectionTool_c.java(29): static final int EVCD_SELECTION_TOOL_DEACTIVATE = 2;
ui\canvas\SelectionTool_c.java(286): ST_SELECTION_TOOL_SELECTING = 2;
ui\canvas\SelectionTool_c.java(296): static final int EVCD_SELECTION_TOOL_ACTIVATE = 1;
ui\canvas\SelectionTool_c.java(307): static final int EVCD_SELECTION_TOOL_DEACTIVATE = 2;
ui\canvas\Shape_c.java(280): int tabHeightRatio = 5;
ui\canvas\Shape_c.java(282): int tabWidthRatio = 10;
ui\canvas\Shape_c.java(339): int compartment_id = 1;
ui\canvas\Shape_c.java(349): int entry_id = 1;
ui\canvas\Shape_c.java(413): int Y_extent = 0;
ui\canvas\Shape_c.java(428): || (entries == 1 && Os_c.Ismultiline(leftResult)))) {
ui\canvas\ShapeSpecification_c.java(142): int len = 0;
ui\canvas\ShapeSpecification_c.java(148): int j = 0;
ui\canvas\ShapeTool_c.java(22): static final int EVCD_SHAPE_TOOL_ACTIVATE = 5;
ui\canvas\ShapeTool_c.java(29): static final int EVCD_SHAPE_TOOL_DEACTIVATE = 6;
ui\canvas\ShapeTool_c.java(36): static final int EVCD_SHAPE_TOOL_DONE = 4;
ui\canvas\ShapeTool_c.java(45): static final int EVCD_SHAPE_TOOL_MOUSE_UP = 2;
ui\canvas\ShapeTool_c.java(54): static final int EVCD_SHAPE_TOOL_MOUSE_MOVED = 3;
ui\canvas\ShapeTool_c.java(63): static final int EVCD_SHAPE_TOOL_MOUSE_DOWN = 1;
ui\canvas\ShapeTool_c.java(315): ST_SHAPE_TOOL_RESETTING = 6;
ui\canvas\ShapeTool_c.java(325): static final int EVCD_SHAPE_TOOL_ACTIVATE = 5;
ui\canvas\ShapeTool_c.java(335): static final int EVCD_SHAPE_TOOL_DEACTIVATE = 6;
ui\canvas\ShapeTool_c.java(346): static final int EVCD_SHAPE_TOOL_DONE = 4;
ui\canvas\ShapeTool_c.java(356): static final int EVCD_SHAPE_TOOL_MOUSE_UP = 2;
ui\canvas\ShapeTool_c.java(371): static final int EVCD_SHAPE_TOOL_MOUSE_MOVED = 3;
ui\canvas\ShapeTool_c.java(387): static final int EVCD_SHAPE_TOOL_MOUSE_DOWN = 1;
ui\canvas\TerminalSpecification_c.java(470): int len = 0;
ui\canvas\TerminalSpecification_c.java(476): int j = 0;
ui\canvas\TerminalSpecification_c.java(519): int len = 0;
ui\canvas\TerminalSpecification_c.java(525): int j = 0;
ui\canvas\TerminalSpecification_c.java(568): int len = 0;
ui\canvas\TerminalSpecification_c.java(574): int j = 0;
ui\canvas\Tim_c.java(15): static long nextId = 0;
ui\canvas\Tim_c.java(17): long length = 0; // in milliseconds, enough for about 30 million years
ui\canvas\Tim_c.java(18): long timeToExpiry = 0;
ui\canvas\Tim_c.java(63): timeToExpiry = 0;
ui\canvas\Vertex_c.java(16): public final static int OOA_UNINITIALIZED_ENUM = -1;
ui\canvas\Vertex_c.java(18): public final static int NE = 1;
ui\canvas\Vertex_c.java(19): public final static int NW = 2;
ui\canvas\Vertex_c.java(20): public final static int SW = 3;
ui\canvas\Vertex_c.java(21): public final static int SE = 4;
ui\canvas\Vertex_c.java(22): public final static int None = 5;
ui\canvas\WhitespaceTerminal_c.java(261): int toolResultCount = 0;
ui\canvas\WhitespaceTerminal_c.java(262): int toolInstCount = 0;
ui\canvas\preferences\CanvasEditorPreferences.java(81): int ncol = 2;
ui\canvas\preferences\CanvasEditorPreferences.java(83): gl.horizontalSpacing = 10;
ui\canvas\preferences\CanvasEditorPreferences.java(84): gl.verticalSpacing = 10;
ui\canvas\preferences\CanvasEditorPreferences.java(89): spacerGridData.horizontalSpan = 2;
ui\canvas\preferences\CanvasEditorPreferences.java(135): //Spacer2GridData.horizontalSpan = 1;
ui\canvas\preferences\CanvasEditorPreferences.java(184): Spacer3GridData.horizontalSpan = 2;

internal.io.sql:

internal\io\sql\ExportDataTypeHandler.java(80): if (udt.getGen_type() == 0)
internal\io\sql\ImportDataTypeHandler.java(292): if (newDTSet.length == 0 || !m_success) {
internal\io\sql\ImportEESql.java(141): if ( newEESet.length == 0 || !m_success)
internal\io\sql\ImportFunctionSql.java(236): if ( newFunctionSet.length == 0 || !m_success)

io.core:

io\core\CoreExportPage.java(183): if (fDestinationNamesCombo.getText().length() == 0) {
io\core\CoreImport.java(52): private int m_numInserts = 0;
io\core\CoreImport.java(93): public static final int PPS_OK = 0;
io\core\CoreImport.java(94): public static final int PPS_ERROR = -1;
io\core\CoreImport.java(95): public static final int PPS_ASK = -2;
io\core\CoreImport.java(125): final int bufferLength = 8192;
io\core\CoreImport.java(149): int numInserts = 0;
io\core\CoreImport.java(170): if (s.toUpperCase().indexOf("INSERT") == 0) //$NON-NLS-1$
io\core\CoreImportPage.java(79): layout.numColumns = 3;
io\core\CoreImportPage.java(180): if (fSourceNamesCombo.getText().length() == 0)
io\core\CoreImportWizard.java(41): private static final int FILE_FORMAT_ERROR = 1;
io\core\SqlLexer.java(184): int _cnt12 = 0;
io\core\SqlLexer.java(286): int _cnt16 = 0;
io\core\SqlLexer.java(347): if (inputState.guessing == 0) {
io\core\SqlLexer.java(389): if (inputState.guessing == 0) {
io\core\SqlLexer.java(409): int _cnt26 = 0;
io\core\SqlLexer.java(440): if (inputState.guessing == 0) {
io\core\SqlLexer.java(528): if (inputState.guessing == 0) {
io\core\SqlParser.java(74): int _cnt3 = 0;
io\core\SqlParser.java(106): int col_num = 0;
io\core\SqlTokenTypes.java(10): int EOF = 1;
io\core\SqlTokenTypes.java(11): int NULL_TREE_LOOKAHEAD = 3;
io\core\SqlTokenTypes.java(12): int LITERAL_insert = 4;
io\core\SqlTokenTypes.java(13): int LITERAL_into = 5;
io\core\SqlTokenTypes.java(14): int LITERAL_values = 6;
io\core\SqlTokenTypes.java(15): int TOK_LPAREN = 7;
io\core\SqlTokenTypes.java(16): int TOK_COMMA = 8;
io\core\SqlTokenTypes.java(17): int TOK_RPAREN = 9;
io\core\SqlTokenTypes.java(18): int Semicolon = 10;
io\core\SqlTokenTypes.java(19): int TOK_ID = 11;
io\core\SqlTokenTypes.java(20): int TOK_STRING = 12;
io\core\SqlTokenTypes.java(21): int TOK_NUMBER = 13;
io\core\SqlTokenTypes.java(22): int SL_COMMENT = 14;
io\core\SqlTokenTypes.java(23): int WS = 15;
io\core\SqlTokenTypes.java(24): int WS1 = 16;
io\core\SqlTokenTypes.java(25): int WS2 = 17;

io.mdl:

io\mdl\ImportModel.java(19): private int m_num_s_dom_found = 0;
io\mdl\ImportModel.java(70): if (m_num_s_dom_found == 0) {
io\mdl\ImportModel.java(934): long val4 = 0;
io\mdl\ImportModel.java(935): if (numParms == 5) {
io\mdl\ImportModel.java(2117): if (table.equalsIgnoreCase("SM_SUPDT") && col_num == 2) // Non_Local //$NON-NLS-1$
io\mdl\ImportModel.java(2122): else if (table.equalsIgnoreCase("O_REF") && col_num == 10) // Is_Cstrd //$NON-NLS-1$
io\mdl\ImportModel.java(2127): else if (table.equalsIgnoreCase("ACT_BLK") && col_num == 2) // WhereSpecOK //$NON-NLS-1$
io\mdl\ImportModel.java(2132): else if (table.equalsIgnoreCase("ACT_BLK") && col_num == 3) // InWhereSpec //$NON-NLS-1$
io\mdl\ImportModel.java(2137): else if (table.equalsIgnoreCase("ACT_BLK") && col_num == 4) // SelectedFound //$NON-NLS-1$
io\mdl\ImportModel.java(2142): else if (table.equalsIgnoreCase("ACT_FOR") && col_num == 2) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2147): else if (table.equalsIgnoreCase("ACT_DAB") && col_num == 3) // AttributeWritten //$NON-NLS-1$
io\mdl\ImportModel.java(2152): else if (table.equalsIgnoreCase("V_TRV") && col_num == 3) // ParmListOK //$NON-NLS-1$
io\mdl\ImportModel.java(2157): else if (table.equalsIgnoreCase("V_BRV") && col_num == 2) // ParmListOK //$NON-NLS-1$
io\mdl\ImportModel.java(2162): else if (table.equalsIgnoreCase("V_FNV") && col_num == 2) // ParmListOK //$NON-NLS-1$
io\mdl\ImportModel.java(2167): else if (table.equalsIgnoreCase("V_VAR") && col_num == 3) // Declared //$NON-NLS-1$
io\mdl\ImportModel.java(2172): else if (table.equalsIgnoreCase("V_INT") && col_num == 2) // IsImplicitInFor //$NON-NLS-1$
io\mdl\ImportModel.java(2177): else if (table.equalsIgnoreCase("ACT_AT") && col_num == 3) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2182): else if (table.equalsIgnoreCase("ACT_CR") && col_num == 2) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2187): else if (table.equalsIgnoreCase("ACT_SEL") && col_num == 2) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2192): else if (table.equalsIgnoreCase("ACT_FIO") && col_num == 2) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2197): else if (table.equalsIgnoreCase("ACT_FIW") && col_num == 2) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2202): else if (table.equalsIgnoreCase("E_ESS") && col_num == 1) // ParmListOK //$NON-NLS-1$
io\mdl\ImportModel.java(2207): else if (table.equalsIgnoreCase("E_ESS") && col_num == 2) // PEIndicated //$NON-NLS-1$
io\mdl\ImportModel.java(2212): else if (table.equalsIgnoreCase("E_CES") && col_num == 1) // is_implicit //$NON-NLS-1$
io\mdl\ImportModel.java(2217): else if (table.equalsIgnoreCase("GD_MD") && col_num == 4) // UseGlobalPrint //$NON-NLS-1$
io\mdl\ImportModel.java(2222): else if (table.equalsIgnoreCase("GD_MD") && col_num == 5) // PrintMode //$NON-NLS-1$
io\mdl\ImportModel.java(2227): else if (table.equalsIgnoreCase("GD_MD") && col_num == 8) // IsLandscape //$NON-NLS-1$
io\mdl\ImportModel.java(2232): else if (table.equalsIgnoreCase("GD_MD") && col_num == 13) // GridOn //$NON-NLS-1$
io\mdl\ImportModel.java(2237): else if (table.equalsIgnoreCase("GD_ES") && col_num == 5) // isFixedAspectRatio //$NON-NLS-1$
io\mdl\ImportModel.java(2242): else if (table.equalsIgnoreCase("CT_MTL") && col_num == 1) // active //$NON-NLS-1$
io\mdl\ImportModel.java(2247): else if (table.equalsIgnoreCase("TS_TSP") && col_num == 2) // satisfied //$NON-NLS-1$
io\mdl\ImportModel.java(2253): if (table.equalsIgnoreCase("S_DOM") && col_num == 0) // Dom_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2255): else if (table.equalsIgnoreCase("S_SS") && col_num == 0) // SS_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2257): else if (table.equalsIgnoreCase("S_EE") && col_num == 0) // EE_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2259): else if (table.equalsIgnoreCase("S_EEM") && col_num == 0) // EEmod_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2263): else if (table.equalsIgnoreCase("S_EEDI") && col_num == 0) // EEdi_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2267): else if (table.equalsIgnoreCase("S_EEEVT") && col_num == 0) // EEevt_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2271): else if (table.equalsIgnoreCase("S_EEEDI") && col_num == 0) // EEedi_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2275): else if (table.equalsIgnoreCase("S_DT") && col_num == 0) // DT_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2277): else if (table.equalsIgnoreCase("S_BRG") && col_num == 0) // Brg_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2279): else if (table.equalsIgnoreCase("S_BPARM") && col_num == 0) // BParm_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2281): else if (table.equalsIgnoreCase("S_ENUM") && col_num == 0) // Enum_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2283): else if (table.equalsIgnoreCase("S_SYNC") && col_num == 0) // Sync_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2285): else if (table.equalsIgnoreCase("S_SPARM") && col_num == 0) // SParm_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2289): else if (table.equalsIgnoreCase("S_SYS") && col_num == 0) // Sys_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2291): else if (table.equalsIgnoreCase("S_FPK") && col_num == 0) // FunPack_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2293): else if (table.equalsIgnoreCase("S_EEPK") && col_num == 0) // EEPack_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2297): else if (table.equalsIgnoreCase("S_DPK") && col_num == 0) // DatPack_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2299): else if (table.equalsIgnoreCase("R_REL") && col_num == 0) // Rel_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2301): else if (table.equalsIgnoreCase("R_OIR") && col_num == 2) // OIR_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2305): else if (table.equalsIgnoreCase("CA_COMM") && col_num == 0) // CPath_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2309): else if (table.equalsIgnoreCase("CA_ACC") && col_num == 0) // APath_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2311): else if (table.equalsIgnoreCase("SM_SM") && col_num == 0) // SM_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2313): else if (table.equalsIgnoreCase("SM_EVT") && col_num == 0) // SMevt_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2317): else if (table.equalsIgnoreCase("SM_STATE") && col_num == 0) // SMstt_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2321): else if (table.equalsIgnoreCase("SM_TXN") && col_num == 0) // Trans_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2323): else if (table.equalsIgnoreCase("SM_ACT") && col_num == 0) // Act_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2325): else if (table.equalsIgnoreCase("SM_EVTDI") && col_num == 0) // SMedi_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2329): else if (table.equalsIgnoreCase("SM_SUPDT") && col_num == 0) // SMspd_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2333): else if (table.equalsIgnoreCase("O_TFR") && col_num == 0) // Tfr_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2335): else if (table.equalsIgnoreCase("O_TPARM") && col_num == 0) // TParm_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2339): else if (table.equalsIgnoreCase("O_ATTR") && col_num == 0) // Attr_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2341): else if (table.equalsIgnoreCase("O_OBJ") && col_num == 0) // Obj_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2343): else if (table.equalsIgnoreCase("O_REF") && col_num == 8) // ARef_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2347): else if (table.equalsIgnoreCase("O_IOBJ") && col_num == 0) // IObj_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2349): else if (table.equalsIgnoreCase("ACT_ACT") && col_num == 0) // Action_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2351): else if (table.equalsIgnoreCase("ACT_BLK") && col_num == 0) // Block_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2353): else if (table.equalsIgnoreCase("ACT_SMT") && col_num == 0) // Statement_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2355): else if (table.equalsIgnoreCase("V_VAL") && col_num == 0) // Value_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2357): else if (table.equalsIgnoreCase("V_VAR") && col_num == 0) // Var_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2359): else if (table.equalsIgnoreCase("ACT_LNK") && col_num == 0) // Link_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2361): else if (table.equalsIgnoreCase("GD_MD") && col_num == 0) // Model_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2363): else if (table.equalsIgnoreCase("CT_MTL") && col_num == 0) // Tool_ID  //$NON-NLS-1$
io\mdl\ImportModel.java(2367): else if (table.equalsIgnoreCase("TS_TSP") && col_num == 0) // Term_Spec_ID  //$NON-NLS-1$
io\mdl\ModelExportPage.java(51): layout.marginHeight = 0;

io.sql:

io\sql\ImportBPSql.java(19): private int m_num_s_dom_found = 0;
io\sql\ImportBPSql.java(59): if (m_num_s_dom_found == 0) {
io\sql\ImportBPSql.java(673): long val4 = 0;
io\sql\ImportBPSql.java(674): if (numParms == 5) {
io\sql\ImportBPSql.java(1108): scrollx = 1600;
io\sql\ImportBPSql.java(1111): scrolly = 4200;
io\sql\ImportBPSql.java(1187): if (table.equalsIgnoreCase("SM_SUPDT") && col_num == 2) // Non_Local //$NON-NLS-1$
io\sql\ImportBPSql.java(1192): else if (table.equalsIgnoreCase("O_REF") && col_num == 10) // Is_Cstrd //$NON-NLS-1$
io\sql\ImportBPSql.java(1197): else if (table.equalsIgnoreCase("GD_MD") && col_num == 4) // UseGlobalPrint //$NON-NLS-1$
io\sql\ImportBPSql.java(1202): else if (table.equalsIgnoreCase("GD_MD") && col_num == 5) // PrintMode //$NON-NLS-1$
io\sql\ImportBPSql.java(1207): else if (table.equalsIgnoreCase("GD_MD") && col_num == 8) // IsLandscape //$NON-NLS-1$
io\sql\ImportBPSql.java(1212): else if (table.equalsIgnoreCase("GD_MD") && col_num == 13) // GridOn //$NON-NLS-1$
io\sql\ImportBPSql.java(1218): if (table.equalsIgnoreCase("S_DOM") && col_num == 0) // Dom_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1222): else if (table.equalsIgnoreCase("S_SS") && col_num == 0) // SS_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1226): else if (table.equalsIgnoreCase("S_EE") && col_num == 0) // EE_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1230): else if (table.equalsIgnoreCase("S_EEM") && col_num == 0) // EEmod_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1234): else if (table.equalsIgnoreCase("S_EEDI") && col_num == 0) // EEdi_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1238): else if (table.equalsIgnoreCase("S_EEEVT") && col_num == 0) // EEevt_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1242): else if (table.equalsIgnoreCase("S_EEEDI") && col_num == 0) // EEedi_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1246): else if (table.equalsIgnoreCase("S_DT") && col_num == 0) // DT_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1250): else if (table.equalsIgnoreCase("S_BRG") && col_num == 0) // Brg_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1254): else if (table.equalsIgnoreCase("S_BPARM") && col_num == 0) // BParm_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1258): else if (table.equalsIgnoreCase("S_ENUM") && col_num == 0) // Enum_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1262): else if (table.equalsIgnoreCase("S_SYNC") && col_num == 0) // Sync_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1266): else if (table.equalsIgnoreCase("S_SPARM") && col_num == 0) // SParm_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1270): else if (table.equalsIgnoreCase("R_REL") && col_num == 0) // Rel_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1274): else if (table.equalsIgnoreCase("R_OIR") && col_num == 2) // OIR_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1278): else if (table.equalsIgnoreCase("CA_COMM") && col_num == 0) // CPath_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1282): else if (table.equalsIgnoreCase("CA_ACC") && col_num == 0) // APath_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1286): else if (table.equalsIgnoreCase("SM_SM") && col_num == 0) // SM_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1290): else if (table.equalsIgnoreCase("SM_EVT") && col_num == 0) // SMevt_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1294): else if (table.equalsIgnoreCase("SM_STATE") && col_num == 0) // SMstt_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1298): else if (table.equalsIgnoreCase("SM_TXN") && col_num == 0) // Trans_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1302): else if (table.equalsIgnoreCase("SM_ACT") && col_num == 0) // Act_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1306): else if (table.equalsIgnoreCase("SM_EVTDI") && col_num == 0) // SMedi_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1310): else if (table.equalsIgnoreCase("SM_SUPDT") && col_num == 0) // SMspd_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1314): else if (table.equalsIgnoreCase("O_TFR") && col_num == 0) // Tfr_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1318): else if (table.equalsIgnoreCase("O_TPARM") && col_num == 0) // TParm_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1322): else if (table.equalsIgnoreCase("O_ATTR") && col_num == 0) // Attr_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1326): else if (table.equalsIgnoreCase("O_OBJ") && col_num == 0) // Obj_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1330): else if (table.equalsIgnoreCase("O_REF") && col_num == 8) // ARef_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1334): else if (table.equalsIgnoreCase("O_IOBJ") && col_num == 0) // IObj_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1338): else if (table.equalsIgnoreCase("GD_MD") && col_num == 0) // Model_ID  //$NON-NLS-1$
io\sql\ImportBPSql.java(1394): if (ges[i].getOoa_type() == -1) {
