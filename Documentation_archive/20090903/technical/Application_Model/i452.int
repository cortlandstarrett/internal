========================================================================

File:      $RCSfile: i452.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:21:19 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp. and is not for external distribution.
========================================================================

Tiger Implementation Note
Prevent Null Pointer Exceptions when Referred to Base Attributes are deleted

Abstract
--------
When a class has referential attributes with reference modes that need to get
information from the referred to attribute, Null Pointers can occur during the
delete transaction. This note addresses this by providing a default 'Orphaned'
value when the referred to attribute can no longer be resolved.

History
-------
final - i452-100604-01.rvm

Document References
-------------------
Bugzilla Issue 452

Background
----------
The Null Pointer Exceptions (NPE's) referred to are caused by the fact that
canvases refresh when they receive model change messages. These refresh messages
happen during the course of adjusting the model and so the canvas can attempt to
redisplay itself when the model is only partially updated. Thus, referential
attributes that will ultimately be migrated to base attributes by the change
are still in existence and pointing at already deleted base attributes.

Design
------
In the ooa of ooa, the derived attribute 'Attribute.Name' is modified to add
'if (not_empty root_attr)' test around each statement that uses the value of an
attribute of root_attr. For each test an else clause is added to set self.Name
to the same value as it would have, but with the word 'Orphaned' replacing the
'root_attr.<attribute_name>' value. In one case, both parts of the result are
derived from root_attr. Here the word 'Orphaned' is returned just once.

Implementation Comments
-----------------------
An issue is raised to cover the related but separate problem of what to do when
an identifying attribute is deleted.

Unit Test
---------

_- Load ooa of ooa
_- Open the Body Subsystem
_- Delete the for statement class
_R The class deletes at the first try
_R The error log contains no null pointer exceptions

_- Run Core test suite.
_- Run Canvas test suite.
_R All tests pass

Code Changes
------------
com.projtech.bp.core/mdl/ooaofooa.bak
Initial Version: 1.63    Final Version: 1.64

End
---

$Log: i452.int,v $
Revision 1.1  2009/09/03 18:21:19  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2009/01/01 23:13:13  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.3.152.1  2008/12/31 16:10:19  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.3  2004/10/08 22:36:33  campbell
Job: 452
Ready for final review.

Revision 1.2  2004/10/06 21:54:38  campbell
Job: 452
Address review meeting minutes.

Revision 1.1  2004/10/06 00:35:17  campbell
Job: 452
Introduced.
