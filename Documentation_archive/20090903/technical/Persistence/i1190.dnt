========================================================================

File:      $RCSfile: i1190.dnt,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:22:28 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Design Note
Ensure that newly created domains have unique ids

Abstract
--------
This note describes the changes required to ensure uniqueness for domain ids
when domains are newly created.

History
-------
final - i1190-010405-01.rvm

Document References
-------------------
[1] Issue 1190
[2] Documentation/internal/technical/Persistence/i845-i48.int 1.1

Background
----------
Currently the domain id for newly created domains will be the same for all
domains which use the same import file.  This causes problems in verifier and
the various model compilers.

Analysis
--------
On import, the id of the domain being created should be set to a unique value.

Design
------

1. Create method in generated classes to set unique ids

The java.arc archetype is modified so that two new methods are created.

Previously, set methods were only generated for attributes that were not of the
type unique_id.  The archetype is changed to generate a private set method for
attributes of the type unique_id.

Another method is generated, setUniqueIds, which will set each attribute of the
type unique_id to a unique value using the associated IdAssigner class.

2. Modify import process to set a domains id to a unique value

The gen_import_java.inc archetype is modified so that after all elements are
batch-related, the domain being created has a unique ID value set.  This is done
by making a call to the method, setUniqueIds, created in 1.

The domain id change must be reflected in the associated GD_MD instance in order
to present the correct diagram.  This is done by finding the associated instance
before changing the id, and then setting its OOA_ID value to the new domain id.

Design Comments
---------------
The changes described in [2] are required in order to persist the highest id
value.  All changes were merged into this issue.

In the case of a model-root being the key to the highest id value, a call to get
the highest persisted value was not being made.  The getKey method found in
IdAssigner.java will convert a key to a SystemModel instance if an associated
system is found.  After this conversion a call to setHighestIdFromPersistedValue
is made.  This allows for the highest persisted value to be read when creating
new domains.

It was determined during testing that there was nothing being done for the case
where two model files were kept in a revision control system with the same id.
The logic for this issue is therefore changed to force a persist after updating
the id once the model is loaded.  For any two model files with equal id's, 
only one should have its id increased, in order to lessen the number of dirty 
flags added to the model files.  Therefore, the following two checks are made 
to see if the id is already unique when deciding whether to change it:

1. The id is over the highest known

or, 

2. The id is unique for the system

In order to check if the id is unique special handling is done for DomainProxy
instances.  The DomainProxy class is modified to store the domain id of its
underlying file upon creation.  A new method is created which will scan a model
file until it finds the insert statement for an S_DOM.  At which point it reads
the id value in and stores it.

The method which determines if an id is unique, ImportModel.isDomainIdUnique,
required the IdAssigner instance of the domain being checked.  A getter method
is added to java.arc which returns a given class's IdAssigner.

Work Required
-------------

1. Create method in generated classes to set unique ids

The changes are made to MC-Java/java.arc according to the design.

2. Modify import process to set a domain's id to a unique value

The changes are made to bp.io.core/arc/gen_import_java.inc according to the
design.

Unit Test
---------
_- Create two new domains using the same import file
_R The domains have two unique values
_- Open the diagram for one of the newly created domains
_R The domain's contents still exist

_- Copy two models with the same domain id into a xtUML project
_R One model is updated with a new id

The above tests are implemented as junit tests in 
io.mdl.test.UniqueDomainIdsTest.

_- Create a new domain proxy using a file with a value that is not -1
_R The domain id of the given proxy is not equal to -1

The above test is implemented as a junit test in core.test.DomainIdInProxyTest.

Testing persisted id values
(These tests are done manually as resetting the tool is required)
_- Create a new project and domain
_- Restart eclipse
_- Create a new domain
_R The new domain's id is one higher than the previous domain


End
---

$Log: i1190.dnt,v $
Revision 1.1  2009/09/03 18:22:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.6  2009/01/01 23:13:08  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.5.28.1  2008/12/31 16:10:12  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.5  2006/01/12 22:51:03  jmather
Job: 1190
Reworded certain portions for clarity.

Revision 1.4  2006/01/09 15:52:07  tlondon
Job: 1190

Add unique test method name

Revision 1.3  2006/01/06 22:54:54  tlondon
Job: 1190

Add comments about id uniqueness handling

Revision 1.2  2006/01/04 22:59:27  tlondon
Job: 1190

Fixed according to review minutes.
Added comments about id assignment changes.

Revision 1.1  2006/01/03 22:43:00  tlondon
Job: 1190

Initial

