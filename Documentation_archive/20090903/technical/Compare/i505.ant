========================================================================

File:      $RCSfile: i505.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:22:09 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Analysis Note
Comprehensive Test Suite for Compare

Abstract
--------
It is required to have a comprehensive automated testing suite for Compare 
functionality. The previously written manual test for compare functionality must
be automated. The testing suite also captures tests previously missed. A set of 
tests to check compare coverage using compare functionality is included as well.

History
-------

Document References
-------------------
[1] bp.core/doc/internal/technical/Compare/compare-i175.int
[2] bp.core/doc/internal/technical/Compare/compare-i175.dnt
[3] Bugzilla Issue 510
[4] Bugzilla issue 421
[5] Bugzilla Issue 501

Analysis
--------
Following test cases are to be automated to the best possible extent:

- i505.1   Test cases to check compare functionality
           These tests are to automate the current manual tests for checking the
           Compare functionality[1]. In all of these tests a common series of
           actions exist, which is:

  . Check that the Differencing tree is displayed
  . Clicking on a node in the difference tree displays the text of only that 
    node in the compare panes below, Correctly.
  . The tree is expanded to show all the difference nodes i.e. all structural 
    differences are captured by the difference tree.
  . Clicking on the node "System Model" displays complete generated text in the 
    lower compare panes.
  . The differences shown in the lower panes, highlight the correct text.
  . Closing the compare window does not throw any exceptions.

           These tests will involve a thorough and complete understanding of the
           internal working of the eclipse compare functionality. This will
           involve programmatically invoking the actions and then getting the
           appropriate data (e.g. Diff Tree, Viewers, Tree controls etc.). 
 
- i505.1.1 Manual Tests Mentioned in Compare-i175 [1]
           All Manual tests as described in [1] are automated and will include
           the steps written above (if applicable). The list of tests is given
           below, but the expected results and complete execution steps are
           already written in [1]:
         
  - Compare With > Each Other
    . Same Models
    . Logically Same Models
    . Comparing with a Model with an Error in mdl file
    . Comparing two different Models
  
  - Restore From Local History
  - Compare With > Local History
  - Replace With > Local History
  
  - Compare with CVS
    - Team > Synchronize With Repository
    . Checking Incoming Changes are shown properly
    . Checking Outgoing Changes are shown properly
    . Checking Conflicts are shown properly
    
    - Team > Merge
    - Team > Show in Resource History
    - Compare With > Latest from Repository
    - Compare With > Another Branch or Version
    - Compare With > Revision
    - Replace With > Revision 

- i505.1.2 Compare Tree Sorting is done properly
           All nodes in the diff tree and their associated text must be sorted
           according to criteria defined in design note for compare i175[2]. The
           test must also confirm that the sorting of the Tree exactly matches
           to the text it generates. 

- i505.1.3 Resource modification after compare
           An .mdl file can be deleted or renamed once Compare functionality
           runs on the it (see[3] for details). 

- i505.2   Test cases to check compare coverage
           Although a complete theoretical coverage test already exist, but this
           test involves checking coverage of compare functionality by creating
           all possible differences and testing them one by one. 

           There are two possibilities to do this:

- i505.2.1 Manually create differences and include all these models with test 
           project.

  ADVANTAGE:    Although work required would be more, but it is simpler to do.
  DISADVANTAGE: Have to create a lot of models which might be cumbersome.
    
- i505.2.2 Generate some code that can create difference at run time and then 
           run compare on the model.

  ADVANTAGE:   Easy to manage.
  DISADVANTAGE: It is still not sure how would that be possible.  
 
- i505.3   Representative stress test
           Go over all models checked into CVS and check that the difference
           shown is consistent with the description documented in the change
           log. Check both that the correct changes are reported and that no
           false changed elements are reported in any case.
        
- i505.4   Revisit metamodel coverage test/proof
           Two post i175 issues[4,5] document the fact that creation transition
           changes are not reported by diff. The purpose of the i175 meta-model
           coverage exercise was to assure that such ommissions were prevented.
           This exercise shall revisit the procedure, identify how the creation
           transition omission was not detected and search for (and rectify)
           other same and different test failure modes.

Work Required
-------------


End
---

$Log: i505.ant,v $
Revision 1.1  2009/09/03 18:22:09  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2009/01/01 23:13:35  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.3.124.1  2008/12/31 16:10:48  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.3  2004/11/17 13:58:35  campbell
Job: 505
Miscellaneous small changes.
Added two new test sections.

Revision 1.2  2004/11/12 05:04:42  siddique
Job:505
Adding the numbering, filled the missing sections.

Revision 1.1  2004/11/10 15:08:45  siddique
Job:505
Initial Draft.


