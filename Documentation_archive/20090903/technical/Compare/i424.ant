========================================================================

File:      $RCSfile: i424.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:22:09 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Analysis Note
Diff tree elements are not sorted properly

Abstract
--------
Structured diff viewer sorts only on the basis of name of tree nodes. It is 
required [3] that alpha sorting should be done after considering specific 
ordered relationships between metamodel entities.

History
-------

Document References
-------------------
[1] Bugzilla Issue # 424.
[2] Bugzilla Issue # 175.
[3] bp.core/doc/internal/technical/compare/compare-i175.ant

Analysis
--------
It was realized that 175 did not sorted user space class attributes according 
to precede/succeed relation-ship in the meta-model. Instead it only sorted 
meta model attributes. Moreover even if elements are sorted, structured diff
viewer reorders when diff UI is shown and requires resorting. 

There are two solutions to this.

1-   Providing a generic mechanism of sorting meta model child elements in the 
   core.inspector package, so that any code that make use of inspector package
   can also benefit from sorting functionality. However functionality of 
   sorting should be configurable to be optional.

1.1- Sorting should be configurable so that more sorting criteria can be added
   based on meta model type.
   
2-   Sorting for attributes and type is done at the level of text generation 
   which was done previously.

1.advantage Sorting can be kept consistent by any packages that share the 
            inspector packages.

2.disadvantage Main disadvantage of second solution is that we need to separate 
               out the element array for type and then sort each fragment 
               separately. Whereas in solution 1, inspectors already have 
               separate arrays.

Solution 1 is selected for the advantages that it provides   

Work Required
-------------
i424.1  Create a generic mechanism for sorting child elements, which can be
        used by the inspectors to sort, as specified by solution 1.

i424.2  Update the text generation package to remove sorting code.

i424.3  Introduce code to structured diff viewer that re-orders any 
        disordered elements as it was ordered by inspectors by introducing 
        sorting index.

End
---

$Log: i424.ant,v $
Revision 1.1  2009/09/03 18:22:09  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:35  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.96.1  2008/12/31 16:10:48  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2004/12/01 14:09:44  babar
Job: 424
Updated against rvm

Revision 1.1  2004/11/29 15:13:22  babar
Job: 424
Introduced


