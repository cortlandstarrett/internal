========================================================================

File:      $RCSfile: object_contribution.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:21:47 $

(c) Copyright 2003-2009 Mentor Graphics Corporation All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Project Technology, Inc. and is not for external distribution.
========================================================================

Tiger Project Analysis Note
Generating Eclipse Object Contributions

Abstract
--------
This document identifies the infrastructure needed to get Eclipse to
add object contributions that invoke functions defined on a client
model.

History
-------
  final - object_contribution-061303-01.rvm

Document References
-------------------
[1] bp.core/doc/internal/technical/drop_1.ant
[2] bp.core/doc/internal/technical/prototype_1.tnt
[3] eclipse.ui.popupMenus
[4] bp.core/mdl/ooaofooa_1-0.bak (TBD)

Background
----------
Eclipse uses a concept known as the Object Contribution[3]. Whenever the 
user executes a right mouse click, Eclipse examines the current selection 
and compares the type of object found there with its list of Object 
Contributions. Those contributions which match both the object type in
the selection and pass through an optional filter are shown in the context
menu which appears as a result of the right click. Object Contributions
are declared in the plugin.xml file. This means that the same menu
contributions can appear in multiple contexts.

This document describes how tiger object contributions will be generated.

When the user selects the context menu entry contribution, it transfers
control to a class nominated in the plugin.xml file that implements the
'IAction' interface.

This document describes how object contributions are tied to XtUML
functions defined in the client model. It describes how IAction
implementations are automatically generated to transfer control to code
generated from the action language in the specified client model
function[4].

Analysis
--------
The solution adopted for the prototype[2] was deficient in that Menu names
were derived directly from the function names. This resulted in unfriendly
names without spaces.

Invocation Method
Object Contribution menu entries are specified in a coloring table 
defined as part of the Object Contribution coloring model. Each entry
defines the client object to which the contribution is to be attached
and the client function on which the menu is to work. An additional
label attribute defines the text that will be shown on the context menu.

Work Required
-------------

OC1.1  - Create a new model, object_contribution with a single entity,
         ContextMenuEntry and attributes:
         - 'Key_Letters'
         - 'Function Name'
         - 'Label'
OC1.2  - Create ContextMenuEntries for:
         - 'New Function'
         - 'Rename'(Function)
         - 'Delete'(Function)
         - 'Change Return Type'(Function)
         - 'New Parameter'(Function)
         - 'Rename'(Function Parameter)
         - 'Delete'(Function Parameter)
         - 'Change Type'(Function Parameter)
         - 'New Operation'
         - 'Rename'(Operation)
         - 'Delete'(Operation)
         - 'Change Return Type'(Operation)
         - 'New Parameter'(Operation)
         - 'Rename'(Operation Parameter)
         - 'Delete'(Operation Parameter)
         - 'Change Type'(Operation Parameter).
OC1.3  - Add the corresponding functions to the client model[4]. Note 
         that new operations default to instance based. The ability to
         change this initial state is not required for Drop 1.
OC1.4  - Create an archetype to generate the plugin.xml file.
OC1.5  - Create an archetype to generate the IAction implementations
         for each client function referenced in a Context Menu Entry.

End
---
$Log: object_contribution.ant,v $
Revision 1.1  2009/09/03 18:21:47  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.5  2009/01/01 23:13:18  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.4.170.1  2008/12/31 16:10:26  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.4  2003/06/13 21:35:50  campbell
Job: 20
Update for review observations.

Revision 1.3  2003/06/12 20:31:14  campbell
Job: 20
Update for typos.

Revision 1.2  2003/06/12 00:02:53  campbell
Job: 20
Broke out Object Contribution work separately from
Explorer View stuff.

Revision 1.1  2003/06/11 22:27:49  campbell
Job: 20
First Introduction
