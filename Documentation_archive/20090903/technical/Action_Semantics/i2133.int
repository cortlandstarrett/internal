========================================================================

File:      $RCSfile: i2133.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:18:45 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Implementation Note
Allow names to start with an underscore

Abstract
--------
This note describes the change to the parser to allow names to start with 
an underscore.

History
-------

final i2133-061906-01.rvm

Document References
-------------------

Issue 2133

Background
----------
In BP 6.1 names were allowed to start with an underscore ("_x"). In Tiger
this is not allowed.

Design
------

1.  Add '_' character to set of legal starting characters

In oal_lex.g, the '_' character is moved from the ID_LETTER rule to the
ID_START_LETTER rule.

Implementation Comments
-----------------------
- Some refactoring was done on the changed test files.

- The explicit call out of the debug keywords was removed from oal_lex.g.  This prevents 
an ambiguity warning.

Unit Test
---------

The following model elements are added to testOAL1.xtuml:

Datatype _testUdt (integer core type)
Enumerated Datatype _testEnum, with enumerator _test
Function _test(_parm: integer): void
Function _testRef(_ref: integer byRef): void
Bridge T::_test(_parm: integer): void
Bridge T::_testRef(_ref: integer byRef): void
External Entity _Test (_T), with bridge _test(_parm: integer):void
Class operation D_D::_test(_parm: integer): void
Class operation D_D::_testRef(_ref: integer byRef): void
Instance operation D_H::_test(_parm: integer): void
Instance operation D_H::_testRef(_ref: integer byRef): void
Class _Test (_T) with 
   attribute _attr:_testUdt
   ISM with
     state _test
     event _T1:'_test'(_edi: integer)
     creation transition into _test state caused by _T1
   CSM with
     event _T_A1:'_test'(_edi: integer)

OalParserTest.java is modified to load the new function, bridge, and operation
definitions.

The following tests are added:

In TestAssign.java:

- testVarStartingWithUnderscore
    _x = 1;
    
- testEnumeratorWithUnderscore
    x = _testEnum::_test;

In TestAttribute.java:

- testAttributeReadWithUnderscores
    create object instance d1 of _T; x = d1._attr;

- testAttributeWriteWithUnderscores
    create object instance d1 of _T; d1._attr = 1;
    
In TestEvent.java: 

- testEventOneParmToInstanceWithUnderscore
    select any t from instances of _T;  generate _T1(_edi: 7) to t;

- testEventOneParmToAssignerWithUnderscore
    generate _T_A1(_edi:8) to _T assigner;

- testEventOneParmToCreatorWithUnderscore
    generate _T1(_edi:8) to _T creator;

- testEventOneParmToInstanceWithMeaningWithUnderscore
    select any t from instances of _T;  generate _T1:'_test'(_edi: 7) to t;

- testEventOneParmToAssignerWithMeaningWithUnderscore
    generate _T_A1:'_test'(_edi:8) to _T assigner;

- testEventOneParmToCreatorWithMeaningWithUnderscore
    generate _T1:'_test'(_edi:8) to _T creator;

In TestInvocation.java:

- testInvocationRetVoidParmIntWithUnderscores 
   (this tests all possible invocation types)
    _test( _parm: 2 );
    
- testWriteByRefParamWithUnderscores (executed in context of _testRef)
    param._ref = 1;
    
- testInvocationPassVarToByRefWithUnderscores
	x = 3; _testRef(_ref: x);

- testInvocationPassVarToByRefWithUnderscoresInParm
	_x = 3; _testRef(_ref: _x);

- testInvocationBridgeWithUnderscores
    _T::_test(_parm: 1);
    

Code Changes
------------

com.mentor.nucleus.bp.als.oal/src/.../oal_lex.g

com.mentor.nucleus.bp.als.oal.test/models/testOAL1.xtuml
com.mentor.nucleus.bp.als.oal.test/src/.../OalParserTest.java
com.mentor.nucleus.bp.als.oal.test/src/.../TestAssign.java
com.mentor.nucleus.bp.als.oal.test/src/.../TestAttribute.java
com.mentor.nucleus.bp.als.oal.test/src/.../TestEvent.java
com.mentor.nucleus.bp.als.oal.test/src/.../TestInvocation.java


End
---

$Log: i2133.int,v $
Revision 1.1  2009/09/03 18:18:45  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:12  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.16.1  2008/12/31 16:10:16  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2006/06/20 00:14:05  greg
Job: 2133
Addressed observations

Revision 1.1  2006/06/15 00:44:13  greg
Job: 2133
Introduce
