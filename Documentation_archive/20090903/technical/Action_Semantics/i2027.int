========================================================================

File:      $RCSfile: i2027.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:18:45 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Implementation Note
Add checking for state machine existence

Abstract
--------
This note describes a fix to add more error checking when parsing the
generate event statement.

History
-------

final i2027-061306-01.rvm

Document References
-------------------
Issue 2027

Background
----------
The following statements were found to cause an NPE in the parser:

select any sda from instances of D_SDA; 
generate D_SDA_A1 to sda;

where the D_SDA class doesn't have an instance state machine.  Note that
we are sending an existing class-based event to the ISM. The following also
causes an error:

generate D_S1 to D_S class;

where we send an existing instance-based event to a non-existent CSM.


Design
------

1.  Add checking for error cases to parser validation functions.

1.1  Class events

In the process_class_event() function, we add OAL to check that the 
CSM exists:

  if ( empty sm )
    stmt.dispose();
    select any obj from instances of O_OBJ 
        where selected.Obj_ID == param.a2_obj_id;
    ERR::reportParseError( msg: 
        "Cannot find Class State Machine for class ->"+
        obj.Name+"<-",   token: param.a3_rule_token );
  elif ( empty evt )


1.2  Instance events

In process_instance_event() function, we add OAL to check that the 
ISM exists:

  if ( empty ism )
    stmt.dispose();
    ERR::reportParseError( msg: 
      "Cannot find Instance State Machine for class   ->"+
        obj.Name+"<-",   token: param.a3_rule_token );
  elif ( empty evt )

Implementation Comments
-----------------------
None

Unit Test
---------

- testISMEventToClassWithoutCSM
     generate D_S1 to D_S class;
			
- testCSMEventToInstanceWithoutISM
     select any sda from instances of D_SDA; 
     generate D_SDA_A1 to sda;
     
Both tests should report an error, and not throw an NPE.

Code Changes
------------

com.mentor.nucleus.bp.als.oal.test/src/.../TestEvent.java

com.mentor.nucleus.bp.core/models/ooaofooa.xtuml

End
---

$Log: i2027.int,v $
Revision 1.1  2009/09/03 18:18:45  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:12  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.16.1  2008/12/31 16:10:16  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2006/06/14 18:01:34  greg
Job: 2027
Add history

Revision 1.1  2006/06/13 17:03:01  greg
Job: 2027
Introduce
