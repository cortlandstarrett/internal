========================================================================

File:      $RCSfile: i1246.dnt,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:30:14 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Design Note
Create MC2020 Eclipse Plugin


Abstract
--------
This note describes the design and work required to implement an EDGE plugin
to provide MC2020 as a code generator.

History
-------
None.

Document References
-------------------
[1] Bugzilla issue 1246,
		http://phoenix.projtech.com/bugzilla/show_bug.cgi?id=1246
[2] MC3020 Model Compiler Integration design,
		<CVS>/MC-Documentation/internal/technical/Runtime-build/i654.dnt
[3] <CVS>/Documentation/internal/process/templates/checklists/introducing-new-modules.chk		

Background
----------
Model compilers are invoked from the EDGE environment via builders that are set
up by special Eclipse plugins that bridge the gap between Eclipse and the 
command-line oriented model compiler builds.

Analysis
--------
There exists in the current release of EDGE a builder that uses MC3020 to 
generate C code.  Due to customer demand and marketing requirements, we need to 
provide a similar, but separate, builder to use MC2020 to generate C++ code.  
The primary reason for this separation is to allow MC2020 and MC3020 to be
packaged, sold, and licensed as individual components.  It will be common
for customers to purchase a second model compiler after the initial purchase
of the first.

Design
------
The tack to be taken with this work is to piggyback on the work already done
for the MC3020 plugin.  We will copy and reuse the source of the MC3020 plugin
as much as possible.

This will result in duplication of code, and certainly leaves open the
opportunity to refactor common code at a later date.  However, this plan
provides for the least amount of risk in allowing us to hit the 11/1/2005
deadline to release this feature to QA.

Design Comments
---------------
None.

Work Required
-------------
i1246.1		Create new MC2020 plugin using MC3020 plugin

i1246.1.1	Copy com.mentor.nucleus.bp.mc.mc3020 to 
			com.mentor.nucleus.bp.mc.mc2020
			
i1246.1.2	Copy com.mentor.nucleus.bp.mc.mc3020.pkg to 
			com.mentor.nucleus.bp.mc.mc2020.pkg

i1246.1.3	Copy com.mentor.nucleus.bp.mc.mc3020.pkg-feature to 
			com.mentor.nucleus.bp.mc.mc2020.pkg-feature

i1246.1.4	Copy com.mentor.nucleus.bp.mc.mc3020.test to 
			com.mentor.nucleus.bp.mc.mc2020.test
			
i1246.2		3020 to 2020 renaming

i1246.2.1	Change all occurances of 3020 to 2020 in file or directory names for
			all contained files or directories of the new source specified in 
			i1246.1

i1246.2.2	Using a search and replace tool, locate and replace all occurances
			of the string "3020" with "2020" in all contained files of the new 
			source specified in i1246.1 

i1246.3		Add a -2 to the rox_build additional arguments specified in:
				/com.mentor.nucleus.bp.mc.mc2020
					/build_settings
						- build_setting.properties
						
					/src/com/mentor/nucleus/bp/mc/mc2020
						- MC2020Properties.java
						
i1246.4		Modify references to default marking files in:
				/com.mentor.nucleus.bp.mc.mc2020
					/manifest
						- default-manifest.xml : Modify the	file names of the 
							default marking files
					
				/com.mentor.nucleus.bp.mc.mc2020.test
					/src/com/mentor/nucleus/bp/mc/mc2020/test
						- TestProjectAndModelOperations.java : Modify the file
							names of the default marking files
							
i1246.5		Complete [3], then check the new code into CVS.

i1246.6		Have the MC2020 plugin call xtumlmc_build instead of rox_build.

i1246.6.1	This needs to be the compiled "exe" version of xtumlmc_build and not
			the perl script called through the perl interpreter.
			
i1246.7		Have the MC3020 plugin call xtumlmc_build instead of rox_build.

i1246.7.1	This needs to be the compiled "exe" version of xtumlmc_build and not
			the perl script called through the perl interpreter	.

Unit Test
---------
The unit tests to be completed here are essentially the same as the required 
unit tests of MC3020 as specified in [2].

Test the correct behavior for a new xtUML project.
_- Create a new xtUML project
_R Tool arguments are not empty
_R The src folder is created
_R The gen folder is created
_R All system marking files are created
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark

Test correct behavior for a new model added to an empty project.
_- Create a new xtUML model
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files are created
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R All model marking files are created
  - {model_name}_domain.mark
  - {model_name}_debug.mark
  - {model_name}_class.mark
  - {model_name}_transformer.mark  
_R The tool arguments include a -o with
   the model name as a parameter and a
   -m with the correct relative path to
   the model file.

Test correct behavior for moving a model.
_- Move an existing xtUML model into separate
   project
- For the model's new host project
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files exist
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R All model marking files exist
  - {model_name}_domain.mark
  - {model_name}_debug.mark
  - {model_name}_class.mark
  - {model_name}_transformer.mark  
_R The tool arguments include a -o with
   the model name as a parameter and a
   -m with the correct relative path to
   the model file.
- For the model's original host project
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files exist
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R All model marking files still exist
  - {model_name}_domain.mark
  - {model_name}_debug.mark
  - {model_name}_class.mark
  - {model_name}_transformer.mark  
_R The tool arguments do not include a -o with
   the model name as a parameter or a
   -m with the model filename.

Test the case where a model file is renamed.
_- Rename an existing xtUML Model
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files exist
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R All model marking files exist with the
   new model name
  - {new_model_name}_domain.mark
  - {new_model_name}_debug.mark
  - {new_model_name}_class.mark
  - {model_name}_transformer.mark  
_R All model marking files do not exist with
   the original model name
  - {orig_model_name}_domain.mark
  - {orig_model_name}_debug.mark
  - {orig_model_name}_class.mark
  - {orig_model_name}_transformer.mark  
_R The tool arguments do not include a -o with
   the old model name as a parameter or a
   -m with the old model filename.
_R The tool arguments include a -o with
   the new model name as a parameter and a
   -m with the correct relative path to
   the new model file.

Test the case where a new model file is added.
_- Add a new domain to a project which already
   exists and contains a domain
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files exist
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R All model marking files exist with the
   new model name
  - {new_model_name}_domain.mark
  - {new_model_name}_debug.mark
  - {new_model_name}_class.mark
  - {new_model_name}_transformer.mark  
_R All previously existing model marking files still exist with
   the correct model name
  - {existing_model_name}_domain.mark
  - {existing_model_name}_debug.mark
  - {existing_model_name}_class.mark
  - {existing_model_name}_transformer.mark  
_R The tool arguments include a -o with
   each existing model name as a parameter
   and a -m with the correct relative path to
   each exiting model file.

Test the case where a model file is deleted.
_- Delete an existing xtUML Model
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files exist
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R All model marking files still exist for the
   deleted model name
  - {deleted_model_name}_domain.mark
  - {deleted_model_name}_debug.mark
  - {deleted_model_name}_class.mark
  - {deleted_model_name}_transformer.mark  
_R The tool arguments do not include a -o with
   the deleted model name as a parameter or a
   -m with the deleted model filename.

Test the case where the last model file is deleted from the system.
_- Delete existing xtUML Models until there are no more in the project
_R Tool arguments are not empty
_R The src folder exists
_R The gen folder exists
_R All system marking files exist
  - bridge.mark
  - datatype.mark
  - registry.mark
  - system.mark
_R Model marking files still exist
  - *_domain.mark
  - *_debug.mark
  - *_class.mark
  - *_transformer.mark  
_R There are no -o tool arguments

Test the case where a file is added to the gen folder.
_- Repeat the following for:
   .c .h .mark .C .cxx .cpp .cc .H .hxx .hpp .hh files
_- Place the file in the gen folder
_R The tool arguments include a -f with
   the file name as a parameter

Test the case where a file is removed from the gen folder.
_- Repeat the following for:
   .c .h .mark .C .cxx .cpp .cc .H .hxx .hpp .hh files
_- Remove the previously added file from the gen folder
_R The -f tool argument for the file is removed

Test the case where a file within the gen folder is renamed.
_- Repeat the following for:
   .c .h .mark .C .cxx .cpp .cc .H .hxx .hpp .hh files
_- Rename the file in the gen folder
_R The tool arguments do not include a -f with
   the old file name as a parameter
_R The tool arguments include a -f with
   the new file name as a parameter

Test that -c is added correctly
_- Edit the .project file to remove all codebuilder declarations
_- Add a new domain to the project
_R The tool arguments include a -c

Test that -c is removed correctly
_- Edit the .project file and insert the element:

		<buildCommand>
			<name>com.mentor.nucleus.builder.TestBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>

into the 	<buildSpec> element.
_- Add a new domain to the project
_R The tool arguments do not include a -c

End
---

$Log: i1246.dnt,v $
Revision 1.1  2009/09/03 18:30:14  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.7  2009/01/01 23:14:10  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.6.30.1  2008/12/31 16:11:26  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.6  2005/10/12 01:48:05  kbrown
Job:1246
Checking in updated design note and review minutes.

Revision 1.5  2005/10/11 17:26:22  cstarret
Job:1246
Prereview edit of design note.  No semantic changes made.

Revision 1.4  2005/10/05 19:40:11  kbrown
Job:1246
Fixed marking file names.

Revision 1.3  2005/10/05 15:50:14  kbrown
Job:1246
More updates.

Revision 1.2  2005/10/05 02:04:53  kbrown
Job:1246
Completed first go at a design note.

Revision 1.1  2005/10/04 19:14:19  kbrown
Job:1246
Beginnings of design note for this issue.

