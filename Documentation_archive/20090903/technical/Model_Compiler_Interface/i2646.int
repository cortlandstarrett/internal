========================================================================

File:      $RCSfile: i2646.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:30:14 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Implementation Note
Renaming a domain adds marking files instead of renaming them

Abstract
--------
This note describes a bug fix for a problem in the model compiler plugins.  If a
user renames a domain, the model compiler plugins treat the rename operation as
if it was an add operation.

History
-------

Document References
-------------------
[1] Bug 2646
    http://phoenix.projtech.com/bugzilla/show_bug.cgi?id=2646

Background
----------
While performing final testing of R1.4.1, it was observed that renaming a domain
in ME caused new marking files to be added to the gen folder for the new domain
name, but it left the old marking files in place.  This caused build errors
when these stale marking files were passed to the model compiler on the
xtumlmc_build command line.

Investigation of the problem found that this issue was actually introduced when
multi-file models were added (initial release R1.4.0).  In a single-file model,
when a domain is renamed the name of a file is changed.  In a multi-file model,
when a domain is renamed, a file name is changed, but the name of the folder
that holds that domain file is also changed.  The model compiler plugin code had
not been updated to account for this.

Design
------
Modify the model compiler resource change listener to be aware of the fact that
in a multi-file model when a domain is renamed it affects a folder on disk as
well as a file.

The mc3020 and mc2020 model compiler plugins should both be modified to include
this fix.

Implementation Comments
-----------------------
1. The model compiler plugins contained code to be aware of and to process both
   multi-file and single-file models.  Code that was specific to handling
   single-file models was removed.

   Starting in v1.4.0 multi-file models were introduced.   In
   v1.4.1 (which just shipped) a meta-model change was made that is not
   backwards compatible (S_DIDs were added).  Users will now no longer be
   passing single-file models to the model compiler from inside eclipse (from
   the MC plugins). Therefore, this simplification of the code is now
   appropriate.  This simply means that if a single-file model is present in an
   Eclipse project it will be ignored by the MC plugins.  Prior to this change,
   code was in place to assure that if single-file and multi-file models were
   both present, the multi-file model would be used and the single file would
   not (we did not want 2 identical models to be passed to the MC).  With this
   change, this check is no longer needed (and has been removed) because
   single-file models will never be placed on the xtumlmc_build command line
   when the model compiler is run from inside Eclipse.  This has no
   impact on calling xtumlmc_build and passing-in a single-file model from the
   command-line.  Doing so is perfectly fine as long as the single-file model
   has been converted to v1.4.1 format.


Unit Test
---------
1. Verify that when a domain is renamed the marking files are also renamed.
_-Create a xtuml Project named elevator
_-Create a model named elevator and import "model_compilers/test/rosey.xtuml"
  into it
_-In ME Rename the domain from elevator to rosey
_R Under the gen folder you should find domain marking files for rosey, and none
   for elevator.
_- Build the model
_R The model builds successfully

2. Verify that a multi-domain model is processed correctly.
_-Create a xtuml Project named elevator
_-Create a model named elevator and import "model_compilers/test/rosey.xtuml"
  into it
_-Add a model named odms into this project and import
  "model_compilers/test/odms.xtuml" into it.
_-In ME Rename the domain from elevator to rosey
_R Under the gen folder you should find domain marking files for rosey, and none
   for elevator.  The marking files for odms should still be present.
_- Build the model
_R The model builds successfully

Code Changes
------------
The changes are in branch Review-i2646.

com.mentor.nucleus.bp.mc.mc2020/src/com/mentor/nucleus/bp/mc/mc2020/
    MC2020ResourceListener.java

com.mentor.nucleus.bp.mc.mc3020/src/com/mentor/nucleus/bp/mc/mc3020/
    MC3020ResourceListener.java


End
---

$Log: i2646.int,v $
Revision 1.1  2009/09/03 18:30:14  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:14:10  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.14.1  2008/12/31 16:11:26  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2006/12/22 16:33:44  kbrown
Job:2646
Performed re-through review of the int.  Fixed typos.

Revision 1.1  2006/12/20 21:32:51  rmulvey
Job:2646
Created note.
