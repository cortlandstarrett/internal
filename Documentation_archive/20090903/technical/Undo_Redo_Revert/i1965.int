========================================================================

File:      $RCSfile: i1965.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:23:21 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Implementation Note
Correcting a Design Error Involving Transaction Boundaries for Deletions


Abstract
--------
This note describes the implementation for correcting a design error 
involving transaction boundaries for deletions that was introduced
by the author's work for [2].

History
-------

Document References
-------------------
[1] Bugzilla issue 1965
[2] Bugzilla issue 1789
[3] Bugzilla issue 1307

Background
----------
[3] was the issue for undo/redo.  It introduced some very complex archetype code 
to add transaction boundaries around user interface actions.  The work for [2] 
simplifies some of that new code.  However, it went a little too far in its
simplification in that it normalized special cases involving the delete action
that were in fact necessary, since the transaction boundary for a delete
has to encompass all of the calls necessary to delete model elements of 
different types.  This issue undoes this over-simplification.

Design
------
1.
In core's create_global_action.inc, a transaction boundary is added around
the portion of the run() method that calls the methods for deleting the 
various kinds of model elements, as a delete-action of multiple element types 
should be treated as one transaction.

As a result, in core's function_body.inc, special cases are added back  
that leave out the transaction boundaries for the delete action methods, 
since the boundary described above is now the one in effect.

Since the ui_blck_xlate function of core's ui_processing.inc may need to 
cancel the current transaction if one is in effect, a parameter was re-added
to it for whether the calling code employs transactions in the manner
expected by the function.  A call to that function in wizard.inc is updated
to provide the reinstated parameter's value.  

Implementation Comments
-----------------------

Unit Test
---------
The testUndoRedoOfDeletionOfClass test of UndoRedoTest is 
renamed to become testUndoRedoOfDeletionOfMultipleModelElementTypes.
It is changed from deleting a class with an attached association, to deleting
two classes connected by an association, as well as a separate association
not connected to either class.  The reason why the original test did not 
catch the bug, and also why the manual test of deleting the entire contents of
a large subsystem didn't either, is that deletion of a class also deletes
its connected relationships as a side effect.  Including an association in 
the deletion that is not connected to any of the classes to be deleted tests 
that separate transactions are not being created for the deletion of the 
classes and the associations, but rather, that one transaction bounds the 
deletion of both element types.

The expected results for ModelTransactionTest.
testDeleteClassTransactionFromExplorer() in core.test are updated to reflect 
that the name given to a deletion transaction must now be more general, since 
it governs the deletion of model elements of multiple types.

Code Changes
------------
com.mentor.nucleus.bp.core/arc/create_global_action.inc
com.mentor.nucleus.bp.core/arc/function_body.inc
com.mentor.nucleus.bp.core/arc/ui_processing.inc
com.mentor.nucleus.bp.core/arc/wizard.inc

com.mentor.nucleus.bp.core.test/src/com/mentor/nucleus/bp/core/test/
	UndoRedoTest.java
com.mentor.nucleus.bp.core.test/expected_results/TransactionTest/
	delete_transaction.exp

	
End
---

$Log: i1965.int,v $
Revision 1.1  2009/09/03 18:23:21  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2009/01/01 23:14:04  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.3.24.1  2008/12/31 16:11:19  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.3  2006/04/21 18:54:20  jmather
Job: 1965
Addressed review comments.

Revision 1.2  2006/04/21 17:28:22  jmather
Job: 1965
Added a unit test comment.

Revision 1.1  2006/04/21 17:00:58  jmather
Job: 1965
Introduced.
