========================================================================

File:      $RCSfile: i420.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:18:57 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Analysis Note
Replacing Model and OOA Type literals with an Enumeration

Abstract
--------
This note describes the requirements for removing model and ooa type literals
from the Canvas model and from the canvas plugin code.

History
-------

Document References
-------------------
[1] Issue 420
[2] bp.ui.canvas/mdl/ooaofgraphics.bak

Background
----------
Currently there are literal values spread thoughout the OAL and used in  
ui.canvas/plugin.xml. The enumerator values for Model_Type are in the
defaultFor.modelType attribute. The enumerator values for OOA_Type are in the
symbol.elemType attribute.  Note that the current values of these constants are
also documented in the attribute descriptions for Model Specification.Model_Type
and Element Specification.OOA_Type in the ooa of graphics[2].

Analysis
--------
The requirements are that:

- there be no literal values assigned to the attributes
  Model Specification.Model_Type or Element Specification.OOA_Type.
- these values be usable as values in bp.canvas/plugin.xml
- all references to these values from hand written code be obtained from the
  generated values.
- the existing import of BridgePoint builder SQL files continue to work.

There are two possible designs that could be followed:

- Allow existing MC-Java functionality to create sequential enumerated type
  values and modify bp.io.sql so that it maps existing BridgePoint type values
  to the generated sequential ones on import and vice versa on output.
- Modify MC-Java to parse for a coloring keyword in each enumerator, say,
  'Value:' and use this value when declaring the constant to be used for that
  enumerator. 

Design
------
The second option is recommended as the faster solution. We should revisit this
decision later, but even if this enumeration policy is reversed, MC-Java will
sooner or later meet a situation that needs the colored values.

Work Required
-------------
i420.1    Modify MC-Java
i420.1.1  Scan Enumerator.Descrip for the selected keyword and use that value to
          initialize the constant.
i420.1.2  Report duplicate values in the same enumeration as an error.
i420.1.3  Report non numeric values as an error.
i420.1.4  If any enumerator of a given enumeration does not have a colored
          value, then it will be given the previously specified value
          incremented by one (or one if it is the first enumerator and no
          previous value exists).
i420.2    Modify CanvasPlugin.java
          Change this file so that when it reads the string from each
          defaultFor.modelType and symbol.elemType attributes, it uses the Java
          reflection interface to obtain the correct value and load it into the
          appropriate pre-existing instance of Model Specification.Model_type
          and ElementSpecification.ooa_type respectively. For example, an xml
          element containing the attribute:
          
          modelType="com.projtech.bp.ui.canvas.ModelType.m_ClassDiagram"
          
          would resolve to the value of the public final int, 'm_ClassDiagram'
          declaration generated for the Model Type enumeration. The value of
          this (5) would be loaded into the Model_type member of the appropriate
          element specification pre-existing instance created at plugin startup.

Acceptance Test
---------------
_- MC-Java must still declare an unmarked enumeration correctly and must not
   report any errors for this case.
_- MC-Java must declare a marked enumeration using the values specified in the
   coloring markup (an unmarked incremented duplicate must be detected too).
_- MC-Java must report duplicate values as a build time error.
_- MC-Java must report non-numeric values as a build time error.
_- MC-Java must provide incremented values for non-colored enumerators.
_- CanvasPlugin must obtain and set the correct values from the string
   definition in the plugin.xml.
_- CanvasPlugin must report a startup error for strings that do not match with a
   generated enumerator value.

End
---

$Log: i420.ant,v $
Revision 1.1  2009/09/03 18:18:57  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.5  2009/01/01 23:13:05  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.4.152.1  2008/12/31 16:10:08  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.4  2004/10/13 22:40:39  campbell
Job: 420
Address review meeting minutes.

Revision 1.3  2004/10/12 22:45:44  campbell
Job: 420
Addressed pre-review comments from GBR.

Revision 1.2  2004/10/12 19:26:05  campbell
Job: 420
Added example of enumerator string to be specified
in the plugin.

Revision 1.1  2004/10/12 19:09:37  campbell
Job: 420
Introduced.
