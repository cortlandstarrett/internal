========================================================================

File:      $RCSfile: i1879-01.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:21:09 $

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Analysis Note
Basic Constants

1. Abstract
-----------
This note describes the alternatives examined to meet the requirements
associated with supporting constants in the BridgePoint builder product.

2. History
----------

3. Document References
----------------------
[1] Bugzilla item 1879
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=1879
[2] cvs://Documentation/external/requirements/Constants.SRS.txt
[3] Bugzilla item 3390 (Fixed length arrays - Phase II)
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=3390
[4] Bugzilla item 3204 (Support alternate base literal constants)
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=3204
[5] Bugzilla item 245 (Bitwise operators needed)
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=245
[6] Bugzilla item 3205 (Support Ada style underscores in literals)
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=3205
[7] cvs://Models/Constants
[8] Bugzilla item 479 (integer value for enumerators)
    http://tucson.wv.mentorg.com/bugzilla/show_bug.cgi?id=479

4. Background
-------------
Many customers have requested the ability to specify named fixed values in
BridgePoint. 

5. Analysis
-----------
This note describes the basic features that shall be provided to meet the
constants feature set. 

This note shall address the following requirements set out in [2]:

Const-1 through Const 7 shall be met in full.

Const-8 Shall be met in full, the containment association shall be made visible
by indenting the contained values. It shall be up to the user to resize the
symbol so that all nested values are visible.

Const-9 through Const-12b shall be met in full.

Const-12c shall be partially met. No support for expressions or 'C' style
alternate base literals will be supplied, see [3,4] for enhancements planned to
include the parts of this requirement not addressed here.

Const-13 through Const-17 shall be met in full.

Const-18a shall not be addressed here. See [4]. Note that integer, real, Boolean
and string values shall be supported.

Const-18b shall be met in full.

Const-18c shall not be addressed by this work. See [6].

Const-19a through Const-19c shall not be addressed by this work. See [5].

Const-20a shall be met in full.

Const-20b shall not be addressed under this work. See [3].

Const-21 through Const-23 shall not be addressed by this work, see [8].

6. Work Required
----------------
During the design phase, consideration shall be given to an approch that allows
primitive constants to be introduced before structured constants.  If this 
sequenced-approach can be taken, the design/implementation shall broken into
these two seperate deliverables.

6.1 Metamodel changes
A sample model[7], was used to finalize requirements for this work. It may be
used as a starting point for the required changes to the metamodel. A new
Subsystem, Constants is suggested to contain these new metamodel classes.

6.2 Infrastructure changes
6.2.1 Prevent changes to some names and values
Pre-defined constants, i.e. those which are refered to by other constants cannot
have their names or values changed in the properties of the referring constant.
Similarly, a structured constant cannot have the names of its member values
changed.  Review existing support for determination of read only status of
properties entries. The existing infrastructure in this area may be sufficient.

6.2.2 Allow notification when an association value changes
This feature set requires that metamodel instances be created and/or torn down
when the data type of a constant is changed. We currently have no mechanism for
receiving notification of this. One possibility is to establish the convention
that an operation like onR116Change(id:new_dt) will be automatically called
whenever the data type related across R116 changes. This operation can then
contain the OAL necessary to set up (in this case) all the required values and
defaults when the user alters the data type. This operation shall dispose old
values last and transfer previously entered values where member name and types
match, so that user entered information loss is minimized when changing data
types.

6.3 Parser changes
No changes to parser grammar shall be required. However, the validation
functions shall be changed to look for a constant before reporting the parse
error 'Variable ->x<- used in context where it must already exist.'. There are
four places in OAL VAlidation Functions that must be considered for this.

Also the assignment validation must be extended to report a new parse error if
an attempt is made write to a constant. Suggested error: 'Variable ->x<- is a
constant and is therefore read only.'.

7. Acceptance Test
------------------
This section describes the data (degrees of freedom) that shall go into creating 
the test matrices.  Each section below (Parser, Properties, Canvas )will require 
a separate test matrix.  These matrices will be created, using this data as 
input, during the design phase.

7.1 Parser test
    The following degrees of freedom shall be covered:

  Reference position (P)
  1. Constant as L-Value in Assignment (illegal)
  2. Constant as R-Value in Assignment

  RValue (R)
  1.  Function argument
  2.  Signal argument
  3.  Interface operation argument
  4.  Instance operation argument
  5.  Class operation argument
  6.  Event parameter
  7.  Attribute
  8.  Transient
  9.  Structure member
  10. MDA
  11. param parameter by reference 
  12. param parameter by value
  13. Return Value
  
  LValue (L)
  1.  Function argument
  2.  Signal argument
  3.  Interface operation argument
  4.  Instance operation argument
  5.  Class operation argument
  6.  Event parameter
  7.  Attribute
  8.  Transient
  9.  Structure member
  10. MDA (Illegal)
  11. param parameter by reference (illegal)
  12. param parameter by value (illegal)
  13. Return Value
  
  Type compatibility (T)
  1. Compatible
  2. Incompatible
  
  Constant has user defined type (U)
  1. Yes
  2. No
  
  Constant Kind (K)
  1. Simple
  2. Structured
  3. Enumeration
  
  Constant is member of structure (M)
  1. Yes
  2. No
  
  Constant is predefined (P)
  1. Yes
  2. No
  
  Constant name exists (E)
  1. Yes
  2. No
  
  Constant declaration is in a package (D)
  1. Below
  2. Same Level
  3. Above
  
  Constant is in scope (I)
  1. Yes
  2. No
  
  
7.2 Properties
    The following degrees of freedom shall be covered:

  Constant has user defined type (U)
  1. Yes
  2. No
  
  Constant Kind (K)
  1. Simple
  2. Structured
  3. Enumeration
  
  Constant is member of structure (M)
  1. Yes
  2. No
  
  Constant is predefined (P)
  1. Yes
  2. No
  
  Constant Specification is Empty (E)
  1. Yes
  2. No
  
  Structured Constant is empty (S)
  1. Yes
  2. No
  
  Edit Field (F)
  1. Name
  2. Value
  3. Description
  
  Specification or Constant (O)
  1. Specification
  2. Constant
  
7.3 Canvas
    The following degrees of freedom shall be covered:

  Constant has user defined type (U)
  1. Yes
  2. No
  
  Constant Kind (K)
  1. Simple
  2. Structured
  3. Enumeration
  
  Constant is member of structure (M)
  1. Yes
  2. No
  
  Constant is predefined (P)
  1. Yes
  2. No
  
  Constant Specification is Empty (E)
  1. Yes
  2. No
  
  Structured Constant is empty (S)
  1. Yes
  2. No
  
  Constant Specification is Named (N)
  1. Yes
  2. No
  
  Constant declaration is in a package (D)
  1. Below
  2. Same Level
  3. Above
  
  Constant is in scope (I)
  1. Yes
  2. No
  
  
End
---

$Log: i1879-01.ant,v $
Revision 1.1  2009/09/03 18:21:09  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.9  2009/01/01 23:13:07  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.8.4.1  2008/12/31 16:10:10  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.8  2008/01/30 15:11:52  rmulvey
Job:1879
Added a summary for each of the items that exists in the Document References section.   Removed a reference to a second analysis note for this issue.  There shall be no need for a second analysis note for this issue.   All items called-out in the SRS which are not addressed directly by this analysis note are addressed by seperate issues.  These issues are specified in the document references section, and they are
referred-to in the analysis section when we specifiy that some SRS requirements will not be met by this issue.

Revision 1.7  2008/01/30 14:39:08  rmulvey
Job:1879
Updated to account for review observations.

Revision 1.6  2007/10/15 17:02:12  campbell
Job: 1879
Ensure DoF keyletters are unique.

Revision 1.5  2007/10/15 16:30:26  campbell
Job: 1879
Combine constant scope tests with existing parser and canvas tests.

Revision 1.4  2007/10/15 16:28:21  campbell
Job: 1879
Added tests for constant scope.

Revision 1.3  2007/10/12 23:41:27  campbell
Job:3198
Address review observations.

Revision 1.2  2007/10/11 16:19:56  campbell
Job: 1879
Updated to cover enumerator values.

Revision 1.1  2007/10/11 00:09:22  campbell
Job: 1879
Introduced.

