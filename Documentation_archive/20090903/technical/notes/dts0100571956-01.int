========================================================================

File:      $RCSfile: dts0100571956-01.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:21:09 $

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Constants (phase 1) Support for MC-3020

1. Abstract
-----------
The initial delivery of Constants support for BridgePoint was supplied in
the 2.2.0 release of May 2009.  Neither Verifier nor MC-3020 supported
Constants as of this release.  This note describes the changes needed to
support simple symbolic constants in the C model compiler.

2. History
----------

3. Document References
----------------------
[1] ClearQuest dts0100571956 Add constant (phase 1) support to model compilers
[2] ClearQuest dts0100530239 Support for Constants ...
[3] MC-3020 Translation Extensions (MC meta-model)
    com.mentor.nucleus.bp.core/models/com.mentor.nuclues.bp.core/
    (MC-3020-HEAD branch)

4. Background
-------------
The phase 1 delivery of constants support for BridgePoint is very modest.
It basically amounts to symbolic (named) core type values.

5. Design
---------
MC-3020 will support these Constants in the simplest possible manner.  This
involves two design guidances.

5.1.    Follow the pattern established by Literals and EDTs
5.1.1.  Literals and EDTs
        Literals and EDTs are "leaf" nodes in the syntax tree of OAL
        expressions.  They are "leaf" classes in the super/sub hierarchy of
        the Value subsystem.  This makes them simpler to deal with.  They
        can be processed first without being combined with other elements.
        Constants are also "leaf" nodes.  Thus, Constants can follow the
        translation patterns of Literals and EDTs.
5.2.    Direct Value Generation
5.2.1.  This version of constants support will emit the value of a constant
        into the generated code.  This makes for a very simple and straight-
        forward translation.  In future (deeper/broader) constant support,
        we may wish to generate code with implementation symbolic constants
        and use these symbolic constants in the generated code.

6. Implementation Comments
--------------------------
6.1.  I found and fixed a bug in a relationship traversal across R2048.
6.2.  Running test models, I found and fixed an issue with the comment
      in the ports source code reading the message direction (Client to Server,
      or Server to Client) backwards.
6.3.  Running a Constants test model, I found a problem with infinite 
      recursion.
6.4.  Removed an unnecessary call to report queue lengths (for performance).

7. Unit Test
------------
7.1.    Ran existing model compiler test models.
7.2.    Test new functionality.
7.2.1.  Add system-level constant specification and use it.
7.2.2.  Add component-level constant specification and use it.
7.2.3.  Add (bare) domain-level constant specification and use it.
7.2.4.  Above is accomplished by const_test.xtuml which is now checked in
        under Models_SF.  This model was modified from Keith's original version
        by removing a recursive SDT.

8. Code Changes
---------------
8.1.  This work is found in branch:  R2_2_1-CDS-dts0100571956-01.

This group of changes adds support for constants to mc3020.  It is a very
simple addition.
The meta-model had already been updated, so the only change needed was
to use the present instance data in the Value subsystem.  Constants behave
very similarly to literals, so the pattern for dealing with them was present.
A function was added to populate the TE_VAL [3] instances with the name and
value of the symbolic constant.
Additional changes here are mostly esthetic.
Did fix one bug in a relationship traversal.

q.class.arc:  Use MC model refs rather than xtUML MM refs.
q.domain.datatype.arc:  Moved the marking of generated to true to be before
                        the recursive call to avoid infinite recursion.
q.domain.analyze.arc:  Removed this extra call to analyze queue lengths.
                       The query it does is quite expensive.  Here it was
                       being called only to report some numbers to the console.
q.oal.translate.arc:  Call the new Constants translator.
q.mc_metamodel.populate.arc:  Link up TE_EVT --- TE_SM --- TE_CLASS in
                              the MC meta-model for efficient traversal
                              across R2071 and R2072.
q.oal.analyze.arc:  Add signals to the events query.  This fixes a bug
                    where we optimize out event artifacts when there are
                    only signals.
                    This is an expensive query that will need to be removed
                    when a more efficient calculation of events needed is
                    supplied.
q.smt.generate.arc:  Use consistent parameter string.
q.val.translate.arc:  Added new function to translate V_SCV instances.
                      Change order of TRV translation.
                      Fix traversal to TE_PARM across R2048 (not R2047).
sys.arc:  Correct a comment.
sys_util.arc:  Account for signal events when establishing event queue length.
t.class.op.c:  Remove tests for gen_declaration.  This is a .c not .h template.
t.class.op.h:  Use MC model refs rather than xtUML MM refs.
t.component.port.c:  Swap direction of generated comment on messages.
t.sys_factory.c:  esthetic consistency
t.sys_events.c:   Account for signal events when establishing event queue.

model_compilers/mc3020/schema/sql/xtumlmc_schema.sql:  Add R2071 and R2072.

com.mentor.nucleus.bp.core/models/com.mentor.nuclues.bp.core/ (MC-3020-HEAD)
Merged with HEAD and added relations to Translation Extensions.
[Changes here have been committed/merged.  No further promotion necessary.]

Models_SF/const_test.xtuml (new)

End
---

$Log: dts0100571956-01.int,v $
Revision 1.1  2009/09/03 18:21:09  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2009/06/03 14:39:13  cstarret
job:dts0100571956
updates after review

Revision 1.3  2009/06/02 20:38:45  cstarret
job:dts0100571956
completed implementation note

Revision 1.2  2009/06/02 20:09:08  cstarret
job:dts0100571956
mostly complete implementation note.

Revision 1.1  2009/05/28 15:26:17  cstarret
job:dts0100571956
Introduce (incomplete) implementation note.
