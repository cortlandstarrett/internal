========================================================================

File:      $RCSfile: model_explorer-outline_view.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:27:08 $

(c) Copyright 2003-2009 Mentor Graphics Corporation All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Project Technology, Inc. and is not for external distribution.
========================================================================

Tiger Project Analysis Note
Model Explorer and Outline Views

Abstract
--------
This document defines how Tiger interfaces with the Eclipse Explorer
and Outline Views.

History
-------
  final - model_explorer-outline_view-061303-01.rvm

Document References
-------------------
[1] bp.core/doc/internal/technical/drop_1.ant
[2] bp.core/doc/internal/technical/prototype_1.tnt
[3] bp.core/doc/internal/technical/Icons/icons.ant (TBD)
[4] bp.core/doc/internal/technical/Dedicated_Text_Editor/
                                         dedicated_text_editor.ant (TBD)
[5] org.eclipse.ui.editors.text.TextEditor

Background
----------
Eclipse provides various ways in which to navigate development
information. The three main ways are the Resource Navigator, the
Explorer (e.g. the Package Explorer) and the Outline View.

Analysis
--------
A new Model Explorer view is provided. This is analogous to the Java
Package Explorer. The Outline View is provided with the same display,
except that in line with established Eclipse behavior it shows only the
subtree immediately below the component shown in the currently focused
editor. The interface with the Resource Navigator is oriented to a file
system view; as such its behavior is defined elsewhere (see Retargetable
Action/File_Save_SaveAS and File_IO).

The solution adopted for the prototype[2] was deficient in a number of
ways:

 - Tree adapter navigation allows only a single metamodel relationship
   to be navigated. This doesn't cover the two cases of O_OBJ to SM_SM
   for instance and class based statecharts.
 - The use of tree decorations was not completely successful:
   - decorations are not used elsewhere in Eclipse.
   - they are not very intuitive because they do not offer expected
     context menu entries.
   - icons consistent with the rest of Eclipse do a better job of 
     differentiating the tree entries.

The tree navigation is enhanced to allow multiple relationships to be
navigated by the generated tree adapters. Decorations are removed from
the generated trees. The decoration infrastructure is also removed.
Icons are introduced that blend in with the rest of Eclipse, final icons
are developed under a separate activity[3].

A modeled coloring file is created that maps the client domain (which is
modeled as a network) onto a hierarchical structure which renders it
suitable for showing in an Eclipse tree viewer.

The ExplorerView implements an 'openListener' interface to detect when
the user wishes to open something in the model tree (by default, this is
synonymous with double click but may be changed in the workbench 
preferences). For domains, subsystems and statemodels, this passes
control to code ready to cause a canvas editor to be launched (these are
not themselves planned for the first drop). For tree entries that map to
entities with action semantics, this causes the action language
editor[4] to open. For tree entries that map to entities with
descriptions (and no action semantics), the default open action 
causes the description editor to open[5]. Description editing is
available on entities with both action semantics and descriptions
through use of the context menu (see Dedicated Editor[4]).

Both the Explorer and Outline Views offer the same buttons as the
equivalent Java editors, except where a button is inappropriate (for
example, Hide Non-public Methods is inappropriate until the tool is
operating with a metamodel that allows visibility attributes to be
set). The Outline View ordering button is supported. If deselected,
the ordering behavior is undefined, except for attributes which are
shown in the order already specified by the user in BridgePoint 6.1.

Entries in the Outline View differ from those in the Explorer View in
that all entries that map to entities with type show the type as a
string separated from the name by a colon.

The full path to a selected entry is shown in the status bar when an
item is selected in both views. In the Outline View, the status line
shows the full path plus the path to the item within the file.

The top left hand icon for both Model Explorer and Outline View is a
green BridgePoint triangle logo with an alpha layer so that the users
chosen titlebar colors show through.

Work Required
-------------
ME1.1   - Create a model to capture the required tree structure
ME1.2   - Define the tree structure as pre-existing instances
ME1.3   - Create archetypes to generate the adapter class.
ME1.4   - Create archetypes to generate the Label Provider class.
ME1.5   - Hand write a Model Explorer view that uses the generated
          adapters.
ME1.6   - Hand write the outline adapter class. 

End
---
$Log: model_explorer-outline_view.ant,v $
Revision 1.1  2009/09/03 18:27:08  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2009/01/01 23:13:26  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.3.170.1  2008/12/31 16:10:36  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.3  2003/06/13 21:31:30  campbell
Job: 20
Update for review observations.

Revision 1.2  2003/06/12 20:31:13  campbell
Job: 20
Update for typos.

Revision 1.1  2003/06/12 16:07:59  campbell
Job: 20
First Introduction
