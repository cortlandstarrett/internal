========================================================================

File:      $RCSfile: i981.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:24:29 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Implementation Note
Fallout from i968; more problems with the parsing TolerantThread

Abstract
--------
This note describes the implementation to prevent the NPEs and other exceptions
that continued to occur with a less frequency after the resolution of issue 968.

History
-------
final - i981-061505-01.rvm

Document References
-------------------
[1] Bugzilla Issue 981
[2] Bugzilla Issue 968
[3] Documentation/internal/technical/Dedicated_Text_Editor/i968.int
[4] http://www.forward.com.au/javaProgramming/javaGuiTips/errorRecovery.html

Background
----------
During the resolution of issue 968 it was observed that certain NPEs can still 
occur with a lesser frequency while rapidly changing an activity. See Main 
comment in Bugzilla issue 981 [1] and Implementation Notes in document [3] for 
further details.

Design
------
This issue answers the following questions:

i981.1  Why does adding the return proposed under 968 not fix the issue [3]? 

Although the 'return' statement suggested in the resolution of issue 968 [3] 
fixes a more frequent bug, this does not remove the possibility of two 
concurrently running parsing threads. Consider the following scenario:
Thread A is parsing an activity, when Thread B starts and sends the interrupt()
signal to the parsing thread A. The thread A, however, at that moment is at a 
stage of parsing, where it does not throw interrupted exception anymore and also
nullifies the 'parseThread' reference. Thread B on the other hand now starts 
parsing, hence creating a similar scenario as described in the design section 
of [3].

It is hence suggested to avoid nullifying the reference of 'parseThread'. 
A new parseThread instance can be created when an active thread is not in 
waiting state or is null (which will happen for the first time only). All the 
references of nullifying the parseThread are hence removed.
Also the return statement suggested under issue 968 is no longer required.

i981.2  There are no error logs written when the problem is shown in a runtime
        environment. Why not?

The errors, which were all un-checked exceptions, are caused during the running 
instance of TolerantThread. As per Rule 4, mentioned in document [4], a run() 
method of thread should catch Throwable and report errors in the way specific to 
the application otherwise the Thread exits and the JVM prints the exception to 
the available console.

The Runnable implemented in the ActivityEditor.Listener class is now updated to 
catch Throwable and report it to the error log.

i981.3  The hang originally reported in issue 968 is not seen under debug 
        conditions. Why not?

The hang was caused due to a deadlock caused by multiple running parse threads, 
which in case of Debug are either suspended due to an NPE or just avoided the 
deadlock condition due to the timing differences.

i981.4  Is there another design for TolerantThread that will be more robust?

Removing the concept of nullifying the parseThread (as specified in section 
i981.1) does make the TolerantThread safer and theoretically removes the 
possibility of multiple parsing threads being run at the same moment. 

As a better programming practice, the following methods are made 'private' as 
they are not accessed by the external classes:

- synchronized void ActivityEditor::accessParseThread ( boolean start, 
                                                       Runnable r, String name )
                                                       
- synchronized boolean TolerantThread::accessIsWaiting ( boolean write, 
                                                              boolean newValue )                                                             
- synchronized long TolerantThread::accessLastTime(boolean write, long newValue)


Implementation Comments
-----------------------
- The signature of the method 'ActivityEditor::accessParseThread' is updated to 
be as follows:
  synchronized void ActivityEditor::accessParseThread (Runnable r, String name)

The parameter 'start' was removed as it's value was alway 'true' because 
parseThread in no longer nullified.

Unit Test
---------
No new functionality is introduced with this change. Existing unit tests must
pass. 

Since this is a fallout issue from i968, following test shall be run multiple 
times:

_- Open an activity editor on a large action such as ooaofgraphics/
                                                       Graphical_Data/Shape.draw
_- Very rapidly add spaces to a large number of lines in the editor
_R No NPE's or concurrent access errors are seen.
_- Save the changes
_R No tool hangs (as described in the issue) are seen.

Code Changes
------------
com.mentor.nucleus.bp.ui.text/src/com/mentor/nucleus/bp/ui/text/activity/
                                                             ActivityEditor.java
End
---

$Log: i981.int,v $
Revision 1.1  2009/09/03 18:24:29  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.6  2009/01/01 23:13:40  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.5.30.1  2008/12/31 16:10:55  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.5  2005/06/20 17:05:26  siddique
Job:981
Added history.

Revision 1.4  2005/06/15 17:53:22  siddique
Job:981
Added implementation comments.

Revision 1.3  2005/06/13 18:56:37  babar
Job:981
Made small correction

Revision 1.2  2005/05/26 13:08:24  siddique
Job:981
Minor updates.

Revision 1.1  2005/05/26 12:49:39  siddique
Job:981
Introduced.

