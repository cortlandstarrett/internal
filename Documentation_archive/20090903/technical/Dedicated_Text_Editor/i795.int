========================================================================

File:      $RCSfile: i795.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:24:28 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Implementation Note
Improve synchronization of parse thread.

Abstract
--------
This note describes changes to improve the synchronization between
the UI thread and the OAL parse thread.

History
-------

final i795-040605-01.rvm

Document References
-------------------
[1] Issue 795
[2] Issue 349

Background
----------
When typing in an Activity Editor, Null Pointer exceptions occur.

Design
------
The work for issue 349 changed the ActivityEditor to start a thread
that waited until the user had stopped typing before starting the
parse in the background.  If the timing is such that there is a parse
already in progress, that parse is interrupted before the new parse starts.
The null pointer errors occur in the thread that is being interrupted.

1.  Synchronize inter-thread data access

There are three data members that are accessed by both threads:
ActivityEditor.parseThread, TolerantThread.hangedOn, and 
TolerantThread.lastTime.  The latter two data members are changed
to be volatile (parseThread already is).  The data member hangedOn is
changed to isWaiting.  The following member functions
are created, and all accesses (read and write) to the data members
go through these functions:

	public synchronized void accessParseThread(
	     boolean start, Runnable r, String name)

	if ( start )
		if parseThread == null or is parsing activity
			parseThread = new TolerantThread(this, r, name, parseThread);
			parseThread.start();
		else
			update parse thread timeout
	else  
	  parseThread = null;
	  
	public synchronized boolean accessIsWaiting(boolean write, boolean newValue)

	if ( write )  Update isWaiting value with newValue
	return isWaiting
	
	public synchronized long accessLastTime(boolean write, long newValue)

	if ( write )  Update lastTime value with newValue
	return lastTime


2.  Always clear current scope and thread reference

There are several places where the parse thread can be interrupted.  In each
place, we use accessParseThread(false, null, "") to update the parseThread
variable.  Additionally, if the activity parse has begun, Block.Clearcurrentscope()
is called.

3.  Allow the parse thread to run

The parse thread is changed to have the same priority as the UI thread, as
the UI thread appeared to be starving the parse thread.  Additionally, after
the UI thread starts a parse thread, the UI thread will yield the CPU so that
the parse thread can get started.

Implementation Comments
-----------------------

- The method ActivityEditorInteraction.waitForParse() is deleted, and all tests
are changed to use the method ActivityEditor.waitForParseThread() instead.  This
makes the ui.text tests more reliable.

- All other waitForThread() methods were consolidated to use 
bp.test.common.TestingUtilites.waitForThread()

- The marker deletion thread in PlaceHolderEntry.java is given a name, since I 
thought I was going to have to wait for it in a test.  Turned out I didn't
need the wait, but leaving the thread named seemed like a good idea.

- The HANGON_DURATION value was specified in issue 349 as 500ms.  The value
in the file was 300ms.  It's changed to 500ms.

- The ActivityEditor.waitForParseThread() method shouldn't be synchronized.

Unit Test
---------
- Run all unit tests
R All tests pass

- Start Tiger, load ooaofgraphics
- open the activity editor for the Shape Tool state Creating Element
- Copy the contents of the activity to another editor (i.e. Notepad)
- Delete the contents of the activity
R There are no parse errors
- Type the contents of the activity back into the editor
R There are no Null Pointer Exceptions

Code Changes
------------

com.mentor.nucleus.bp.ui.canvas.test/src/com/mentor/nucleus/bp/ui/canvas/test/CanvasEditorInteraction.java
com.mentor.nucleus.bp.ui.canvas.test/src/com/mentor/nucleus/bp/ui/canvas/test/CanvasTestUtilities.java

com.mentor.nucleus.bp.ui.text/src/com/mentor/nucleus/bp/ui/text/activity/ActivityEditor.java
com.mentor.nucleus.bp.ui.text/src/com/mentor/nucleus/bp/ui/text/placeholder/PlaceHolderEntry.java

com.mentor.nucleus.bp.ui.text.test/src/com/mentor/nucleus/bp/ui/text/test/TextTestUtil.java
com.mentor.nucleus.bp.ui.text.test/src/com/mentor/nucleus/bp/ui/text/test/activity/ActivityEditorInteraction.java
com.mentor.nucleus.bp.ui.text.test/src/com/mentor/nucleus/bp/ui/text/test/activity/I697OpenActivityEditorFromMarker.java
com.mentor.nucleus.bp.ui.text.test/src/com/mentor/nucleus/bp/ui/text/test/activity/ParseActivity.java
com.mentor.nucleus.bp.ui.text.test/src/com/mentor/nucleus/bp/ui/text/test/i372Tests/NavigationTest.java
com.mentor.nucleus.bp.ui.text.test/src/com/mentor/nucleus/bp/ui/text/test/placeholder/MarkerBasedPlaceholderLifecyleTest.java

End
---

$Log: i795.int,v $
Revision 1.1  2009/09/03 18:24:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.4  2009/01/01 23:13:41  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.3.38.1  2008/12/31 16:10:55  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.3  2005/04/07 21:20:42  jmather
Job: 795
Fixed a couple of Code Changes path errors.

Revision 1.2  2005/04/07 18:35:08  greg
Job: 795
Addressed observations, updated implementation comments

Revision 1.1  2005/04/05 22:33:23  greg
Job: 795
Introduce
