========================================================================

File:      $RCSfile: i968.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:24:28 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Implementation Note
Prevent concurrent access problems with the TolerantThread

Abstract
--------
This note describes the implementation steps taken to prevent Null Pointer
Exception (NPE) occurrences during parsing of large actions.

History
-------

Document References
-------------------
[1] Bugzilla issue 968
[2] Bugzilla issue 981
 
Background
----------
NPE's can happen during parsing if many rapid changes are made to a large state
action.

Design
------
Part of the problem is that in the document changed handler, the parser thread
can be interrupted by rapid typing.

If an interrupt occurs and is serviced, it nullifies the current thread
reference. Since the current thread can only be interrupted by a waiting thread,
setting the current thread to null in this way should not occur. Furthermore,
doing this can cause a situation where a parser thread is running, but the
reference to it is null. The next document change that occurs launches a new
TolerantThread, which starts immediately because the current thread reference is
null. In reality, there is already a parser thread running and so concurrent
access and null pointer exceptions can then occur.

The code that catches the InterruptedException in the Activity Editor document
change handler is changed to return when it is interrupted. This will then
execute the join behavior in Tolerant thread and execute another parse cycle as
designed.

Implementation Comments
-----------------------
Note that this does not resolve the issue completely. NPE's are still seen when
performing rapid changes to a large action in the debugger, albeit at a reduced
frequency. However, the originally reported hang appears to be cured by this
change so it will be promoted and a new issue[2] tracks the resolution of this
issue during the work for R_1_1_0.

Unit Test
---------
No new functionality is introduced with this change. Existing unit tests must
pass.

_- Open an activity editor on a large action such as ooaofgraphics/
                                                       Graphical_Data/Shape.draw
_- Very rapidly add spaces to a large number of lines in the editor
_R No NPE's or concurrent access errors are seen.
_- Save the changes
_R No tool hangs (as described in the issue) are seen.

Code Changes
------------
com.mentor.nucleus.bp.ui.text/src/com/mentor/nucleus/bp/ui/text/activity/
                                                             ActivityEditor.java

This change should be applied to both HEAD and R_1_0_HEAD.

End
---

$Log: i968.int,v $
Revision 1.1  2009/09/03 18:24:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:41  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.32.1  2008/12/31 16:10:55  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2005/05/25 22:23:26  campbell
Job: 968
Review issues addressed.

Revision 1.1  2005/05/25 21:35:52  campbell
Job: 968
Introduced.
