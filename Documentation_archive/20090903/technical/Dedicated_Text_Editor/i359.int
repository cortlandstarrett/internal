========================================================================

File:      $RCSfile: i359.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:24:28 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Implementation Note
Add support for derived attribute activity editor

Document References
-------------------
[1] /Documentation/internal/technical/Dedicated_Text_Editor/i372.dnt

Implementation Comments
-----------------------
- Adding a new datatype to ooaofooa caused a conflict with the Token
datatype id in bp.als/sql/err_ee.sql.  The id value was changed in ooaofooa
for the new datatype to give an id space of 100 id's for the als models.

- The properties/arc/BuildPropertySource.arc archetype was changed to allow
attributes with a real enumerated datatype.  
properties.test/arc/create_view_test.arc was also modified for the same reason.
This change fixes issue 721.  The issue is marked as a duplicate of this issue.
The Scope datatype and usage described in issue 721 was added to ooaofooa.bak,
ooaofooa.mdl, and function_import.sql.  The generated class Scope_c usage 
was added to ModelContentOutlinePage.java, and create_explorer_view.inc.

- The code for generating unrelate statements was changed to check the
referential attributes values against the not-participating value when
saving the cached value in referring.inc.

- Following requirements were covered by 372.

  . Support of Derived attributes
   
    Issue 372 introduces an interface called IModelElementEditorInputFactory. 
    It defines two terms EditableModelElement and RequiredModelElement. 
    EditableModelElement refers to a model element, which is present in explorer
    tree and can be edited using certain editor. RequiredModelElement is a model
    element which is required along with EditableModelElement to provide a 
    complete functionality like editing and saving. For example an Attribute is 
    editable by activity editor if it has a required element of type
    'Derived Base Attribute'. Similarly 'State Machine State' is editable if it
    has associated required model element 'Action'. The method
    getEditableModelElement(NonRootModelElement) allows one to obtain editable
    model element from a given model if possible. Which means it would provide 
    'State Machine State' if a given 'Action' is associated with 'State Machine 
    State'. This allows one to open the editor either directly using 'State 
    Machine State' or Action. Using the same pattern, 'Derived Base Attribute'
    is supported. An activity editor can be opened either by Attribute if 
    getRequiredModelElement returns non null value, which in this case would 
    be 'Derived Base Attribute'. Or activity editor can be opened using 'Derived 
    Base Attribute' if getEditableModelElement return 'Attribute'. However there
    is one important thing to understand that editable model element will always
    be 'Attribute' so that it can be linked with explorer. Similarly required 
    model element will always be 'Derived Base Attribute' so that editor can
    retrieve and store the text of activity. 
    
  . Parsing of derived attributes  
    
    The class ActivityEditorInput (defined by 372) is based on a fact that 
    property containing activity text will be required model element. Therefore
    it uses factory to obtain required model element thus using the generic 
    pattern defined by IModelElementEditorInputFactory, it can parse any model
    element, whose required model element would contain Action_Semantics 
    attribute.
  
  Note: Above two requirements did not require any change to existing design
  of 372 but described here to provide understanding of how these requirements
  are covered. There this issue does not list any changes for above two 
  requirements handled by 372.

  . Closing of Activity editor when attribute is changed back to base attribute

    A method findPlaceHolderOfDeletedModelElement is introduced in 
    PlaceHolder.java that checks if deleted model element is either 
    editable model element or required model element that place holder 
    represents. Since 'Derived Base Attribute' is required model element for
    editable model element 'Attribute', it deletes its place holder file when
    'Derived Base Attribute' is disposed. 

    Moreover EditorListener.closeEditor is renamed to closeEditors and it is 
    modified to perform the same check as described in previous paragraph.

    Equivalence with required model element is done by using 
    IModelElementEditorInputFactory's getRequiredModelElement method. If it 
    returns null then it means that deleted model element was a required model 
    element of the editable model element that place holder represents.
    


This issue is promoted from branch Review-i372-03

Unit Test
---------
See design note

Code Changes
------------

com.projtech.bp.als.oal/sql/function_import.sql

com.projtech.bp.als.oal.test/src/com/projtech/bp/als/oal/test/ParseAllInDomain.java

com.projtech.bp.core/mdl/ooaofooa.bak
com.projtech.bp.core/mdl/ooaofooa.mdl

com.projtech.bp.ui.canvas/src/com/projtech/bp/ui/canvas/ModelContentOutlinePage.java

com.projtech.bp.ui.explorer/arc/create_explorer_view.inc

com.projtech.bp.ui.properties/arc/BuildPropertySource.arc

com.projtech.bp.ui.properties.test/arc/create_view_test.arc

com.projtech.bp.ui.text.test/src/com/projtech/bp/ui/text/test/activity/CloseActivityEditor.java
com.projtech.bp.ui.text.test/src/com/projtech/bp/ui/text/test/activity/OpenActivityEditor.java

com.projtech.bp.ui.text/src/com/projtech/bp/ui/text/EditorListener.java
com.projtech.bp.ui.text/src/com/projtech/bp/ui/text/PlaceHolder.java

MC-Java/referring.inc


End
---

$Log: i359.int,v $
Revision 1.1  2009/09/03 18:24:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.6  2009/01/01 23:13:40  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.5.44.1  2008/12/31 16:10:55  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.5  2005/03/10 20:31:23  babar
Job:359
Updated to describe how particular 359 requirements
are covered by implementation of 372.

Revision 1.4  2005/03/10 17:31:02  babar
Job:359
Updated after merging with 372

Revision 1.3  2005/03/02 03:56:59  greg
Job: 359
Ready for review

Revision 1.2  2005/02/25 22:20:05  greg
Job: 561
Ready for review

Revision 1.1  2005/01/13 23:24:44  greg
Job: 359
Introduce

