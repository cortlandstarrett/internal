========================================================================

File:      $RCSfile: i1876.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:20:33 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Implementation Note
Add support for association phrases to libTRANS

Abstract
--------
This note describes adding support for extracting association phrases to
the libTRANS dll.

History
-------

final i1876-033106-01.rvm

Document References
-------------------
Issue 1876

Background
----------
The libTRANS dll supplies custom string manipulation functions to generator.
There is a need for functions to extract the phrase from an association
navigation chain.

Design
------

An association phrase is specified with the following syntax: Rn.'phrase'.
It would appear in an association navigation like so:

  ->S_SIS[R43.'contains']
  
There are currently the following navigation chain parsing functions:

cf_kl, cf_rel, cf_rest
cb_kl, cb_rel, cb_rest

cf = forward from front of chain
cb = backward from end of chain
_kl = keyletters of link
_rel = association number of link
_rest = the rest of the chain

1.  Add cf_phrase parsing function

The cf_phrase parsing function returns the phrase in the first link in the
navigation chain.  If there is no phrase, the empty string is returned.

2.  Add cb_phrase parsing function

The cb_phrase parsing function returns the phrase in the last link in the
navigation chain.  If there is no phrase, the empty string is returned.

3. Update cf_rel parsing function

The cf_rel parsing function assumes that the association number is followed
by the character ']'.  The function is changed to allow for the case when 
the number is followed by a '.'.

4. Update cb_rel parsing function

The cb_rel parsing function assumes that the association number is followed
by the character ']'.  The function is changed to allow for the case when 
the number is followed by a '.'.

Implementation Comments
-----------------------

- Seven minor memory leaks were fixed.

- A comment was added to the Readme.txt for MC-Java.test regarding the
need for the libTRANS.dll file to be up-to-date.

Unit Test
---------

- For completeness, all chain parsing functions are tested.  The test
code is added to the MC-Java.test project.  Each *_test function verifies
that the parsing function returns the expected result (the second argument).
The third argument is used for identifying the test when reporting errors.

  .assign test_string0 = "->A[R1]->B[R2]"
  .assign test_string1 = "->C[R3]->D[R4.'b1 phrase']"
  .assign test_string2 = "->E[R5.'a2 phrase']->F[R6]"
  .assign test_string3 = "->G[R7.'a3 phrase']->H[R8.'b3 phrase']"

  .invoke tcf_kl_test(test_string0, "A", 1)
  .invoke tcf_kl_test(test_string1, "C", 2)
  .invoke tcf_kl_test(test_string2, "E", 3)
  .invoke tcf_kl_test(test_string3, "G", 4)
  .invoke tcb_kl_test(test_string0, "B", 5)
  .invoke tcb_kl_test(test_string1, "D", 6)
  .invoke tcb_kl_test(test_string2, "F", 7)
  .invoke tcb_kl_test(test_string3, "H", 8)

  .invoke tcf_rel_test(test_string0, "1", 9)
  .invoke tcf_rel_test(test_string1, "3", 10)
  .invoke tcf_rel_test(test_string2, "5", 11)
  .invoke tcf_rel_test(test_string3, "7", 12)
  .invoke tcb_rel_test(test_string0, "2", 13)
  .invoke tcb_rel_test(test_string1, "4", 14)
  .invoke tcb_rel_test(test_string2, "6", 15)
  .invoke tcb_rel_test(test_string3, "8", 16)

  .invoke tcf_rest_test(test_string0, "->B[R2]", 17)
  .invoke tcf_rest_test(test_string1, "->D[R4.'b1 phrase']", 18)
  .invoke tcf_rest_test(test_string2, "->F[R6]", 19)
  .invoke tcf_rest_test(test_string3, "->H[R8.'b3 phrase']", 20)
  .invoke tcb_rest_test(test_string0, "->A[R1]", 21)
  .invoke tcb_rest_test(test_string1, "->C[R3]", 22)
  .invoke tcb_rest_test(test_string2, "->E[R5.'a2 phrase']", 23)
  .invoke tcb_rest_test(test_string3, "->G[R7.'a3 phrase']", 24)

  .invoke tcf_phrase_test(test_string0, "", 25)
  .invoke tcf_phrase_test(test_string1, "", 26)
  .invoke tcf_phrase_test(test_string2, "a2 phrase", 27)
  .invoke tcf_phrase_test(test_string3, "a3 phrase", 28)
  .invoke tcb_phrase_test(test_string0, "", 29)
  .invoke tcb_phrase_test(test_string1, "b1 phrase", 30)
  .invoke tcb_phrase_test(test_string2, "", 31)
  .invoke tcb_phrase_test(test_string3, "b3 phrase", 32)

- Copy libTRANS.dll to \mgc\embedded\bridgepoint\win32\client\lib
- Clean the MC-Java.test project
R All tests pass

Code Changes
------------

/libTRANS/pt_trans.c
/libTRANS/libTRANS.dll

/MC-Java.test/arc/test_parse_chain.inc  [added]
/MC-Java.test/Delete_Check_test/color/Deletecheck_package_spec.clr
/MC-Java.test/Readme.txt

End
---

$Log: i1876.int,v $
Revision 1.1  2009/09/03 18:20:33  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:16  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.24.1  2008/12/31 16:10:24  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2006/03/31 22:18:28  greg
Job: 1876
Addressed observations

Revision 1.1  2006/03/31 19:56:52  greg
Job: 1876
Introduce
