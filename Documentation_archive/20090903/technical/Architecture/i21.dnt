========================================================================

File:      $RCSfile: i21.dnt,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:20:34 $

(c) Copyright 2003-2009 Mentor Graphics Corporation All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Project Technology, Inc. and is not for external distribution.
========================================================================

Tiger Project Design Note
Always set value datatype

Abstract
--------
The current MC-Java doesn't always set the datatype of values.
This note describes the changes so that they are always set.

History
-------

final i21-062503-01.rvm

Document References
-------------------

Bugzilla issue 21, 22, 23

Background
----------

In the current TinyJava implementation, the Value (V_VAL) class has
an attribute DT_ID that is set during the execution of the Java.arc
file (via the include of "Includes.inc").  Some of the functions that should
determine the datatype don't actually do that (in Value.arc:
gen_selection_test_values, gen_event_values, gen_transform_value,
gen_parameter_values), they just set it to zero, with a comment that
it is too hard to determine the correct datatype.

Additionally, the initial value for V_VAL.DT_ID is not generated in the
the INSERT statements generated by Fragment.arc.  

Design
------

The time to set the V_VAL.DT_ID attribute is when Fragment.arc generates
the INSERT statement for the instance.  We can then remove all setting 
of DT_ID in the Value.arc file.  It is much simpler to determine the
correct datatype id in Fragment.arc than in Value.arc

i21.1  The following functions in Fragment.arc generate a V_VAL INSERT
statement:

rval_literal_boolean
rval_literal_integer
rval_literal_real
rval_literal_string
rval_read_rcvd_evt_di
rval_read_obj_attr
rval_read_selected_attr
rval_read_transient_var
rval_transform
rval_bridge
rval_unary_op
rval_binary_op
rval_read_transform_param
rval_read_bridge_param
rval_read_synch_service_param
rval_transform_instance

Notes:

- rval_synch_service is not implemented in Fragment.arc.  Issue 23 will address that.
- rval_literal_enum is not implemented in Fragment.arc. Issue 22 will address that.
- rval_add_parens doesn't create a V_VAL INSERT statement.

i21.1.1 Each of these functions is modified to output the V_VAL INSERT statement
with the correct DT_ID.  All rval_functions have the attr_dt_id attribute added
to the output fragment.  The attr_dt_id value will be used by the 
stmt_assign_transient_var (see i21.1.2).

i21.1.2 The rval_read_transient_var needs some additional changes to 
determine the data type.  A transient variable doesn't know it's type until
it is assigned to, so we need to save the variable's datatype during assignment 
to use when it is read from.

i21.1.3 The where clause functions need to save the keyletters in 
the fragment attribute, so that when rval_read_selected_attr is called we can
use those keyletters to get the attribute type.

i21.1.4 The rval_binary_op function is changed to follow the rules of OAL
for arithmetic operations.  Namely, if either operand is of type real, then
the operation's type is real.  Otherwise, the operation's type is the same
as the type of the left operand.

i21.2  The Value.arc file is modified so that all assignments to
V_VAL.DT_ID are removed.

Work Required
-------------

i21.1  Add DT_ID to V_VAL INSERT statments. 

i21.1.1 Make changes described in the design.

i21.1.2 Handle transient variables (Fragment.arc)

i21.1.2.1 In var_declare, set attr_dt_id = "0"
i21.1.2.2 In stmt_assign_transient_var, set p_trans_var.dt_id = p_rval.dt_id
i21.1.2.3 In rval_read_transient_var, the data type is p_var.dt_id

i21.1.3 Where clause support (Fragment.arc)

i21.1.3.1 In where_begin, set attr_obj_kl = p_obj_keyletters
i21.1.3.2 In where_add_normal, set attr_obj_kl = p_where_clause.obj_kl
i21.1.3.3 In where_end, set attr_obj_kl = p_where_clause.obj_kl

i21.1.4 Change rval_binary_op to function correctly.

i21.2 Make changes described in design

End
---
$Log: i21.dnt,v $
Revision 1.1  2009/09/03 18:20:34  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:16  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.170.1  2008/12/31 16:10:24  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2003/06/25 17:22:44  greg
Job: 21
Made changes from review

Revision 1.1  2003/06/24 15:48:29  greg
Job: 21
Initial checkin

