========================================================================

File:      $RCSfile: i156.int,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:20:34 $

(c) Copyright 2004-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

MC-Java Implementation Note
Use Eclipse tracing facility

Abstract
--------

This note describes the changes to use the Eclipse tracing facility
for logging.

History
-------

final i156-072004-01.rvm

Document References
-------------------

Issue 156
Issue 177

Background
----------

MC-Java has no filters for output logging, it's either all on
or all off.  This note describes adding use of the Eclipse Run-Time
Tracing facility to allow tracing to be controlled by user input,
without requiring a recompile.  Issue 177 talked about consolidating
all tracing in core.  The code is changed so all tracing classes 
are defined in core.

Design
------

i156.1  Only generate logging classes in root package

Note that this work only consolidates the class definitions
for the different loggers.  Each package still has its own
ILogger instance.

i156.1.1 Add test to class generation

In java.arc, a test for package.is_root being true is
added around the generation of all logging classes 
(ILogger, NullLogger, SystemLogger).

i156.1.2 Add imports where needed to mechanism classes

When the mechanism classes Activepoller_c and 
masterTimer_c are generated for a package that is not the
root, import statements are generated for the root
class and ILogger class. 

i156.1.3  Update import statements in hand-written code

The following classes are changed to use the core logging classes
instead of the (now non-existent) ui.canvas logging classes:

io.sql.test/src/.../CanvasLogger.java
io.sql.test/src/.../CoreLogger.java
ui.canvas.test/src/.../TestLogger.java

i156.2  Change ILogger definition

We change the ILogger interface definition to 
add support for the TraceLogger class.

i156.2.1  Change ILogger definition

The ILogger interface is changed to the following:

public interface ILogger
{
	final static int UNKNOWN = 0;
	final static int FUNCTION = 1;
	final static int OPERATION = 2;
	final static int STATE_MACHINE = 3;
	final static int SQL = 4;
	final static int BRIDGE = 5;
	final static int MECH = 6;
	public void println(int type, String filterValue, String toPrint);
	public void println(Exception toPrint);
}

The new println() function takes the type argument, which is
one of the constants defined by the interface, and the filterValue,
which is used to filter messages when the trace facility
has filters defined.  The filterValue for functions is the function
name, for bridges is the bridge name, for operations and states is the
class name.

i156.2.2  Update all println definitions and invocations

The ILogger println definitions and invocations are changed to 
match the new defintion.  The definitions are changed in the 
following classes:  NullLogger, SystemLogger.  Both classes
(generated by java.arc) ignore the new operands.  All invocations
of the println function are changed to pass the new parameters.
These changes are in java.arc, referred_to.inc, and referring.inc.

The hand-written classes listed in i156.1.3 are also updated 
with the new parameter list.  The class ui.canvas/src/Cl_c.java
is also updated.

i156.3  Add .options files

The tracing facility in Eclipse uses the .options file to declare
the trace options that are defined by the plugin.  The core plugin
defines the following options:

com.projtech.bp.core/debug = false
com.projtech.bp.core/debug/functions = false
com.projtech.bp.core/debug/functions/filter = *
com.projtech.bp.core/debug/bridges = false
com.projtech.bp.core/debug/bridges/filter = *
com.projtech.bp.core/debug/operations = false
com.projtech.bp.core/debug/operations/filter = *
com.projtech.bp.core/debug/states = false
com.projtech.bp.core/debug/states/filter = *

Note that we will ship with all tracing disabled.
The ui.canvas plugin defines the same options, but with
the path being com.projtech.bp.ui.canvas/debug

i156.4  Generate TraceLogger class

The TraceLogger class is generated by java.arc when 
we are generating the root package that is an Eclipse plugin.
The class has a constructor that takes a string containing
the plugin path.  The constructor then reads all the options 
and stores them in data members in the class.  The default 
is for tracing to be disabled.  The println() method outputs the log
message depending on the state of the trace options.

Filters are defined as lists of class names separated by
semicolons. 

i156.5  Change logger instance creation generation

In java.arc, if we are generating an Eclipse plugin, then
an instance of TraceLogger is created, passing in the plugin's
full name.  If not, then an instance of SystemLogger is created.


Implementation Comments
-----------------------

- Proper headers were added to TestLogger.java

- Logging is added to validation functions in validate_gen.arc.

- Logging is added for bridge invocations in java.arc.

Unit Test
---------

- Rebuild all of tiger and compile.
R Tiger rebuilds and compiles without any errors.
- Execute unit tests:

OalParserTest
ParseAllInDomain
IOTest
CanvasTest
UITextTest

R All tests pass

- Start Tiger
- Import odms
R There is no logging in console
- Exit Tiger

- Modify Tiger run-time workbench tracing; change
   com.projtech.bp.core/debug and com.projtech.bp.core/debug/functions to true
- Start Tiger
- Import odms
R Lots of different function logging messages appear in console
- Exit Tiger

- Modify Tiger run-time workbench tracing; change
   com.projtech.bp.core/debug/functions/filter to Action_start
- Start Tiger
- Import odms
R 'Function entered: Action_start' appears in console, many times
- Exit Tiger

- Modify Tiger run-time workbench tracing; change
   com.projtech.bp.core/debug/functions/filter to <empty string>
- Start Tiger
- Import odms
R There is no logging in console
- Exit Tiger

- Modify Tiger run-time workbench tracing; change
   com.projtech.bp.core/debug and com.projtech.bp.core/debug/functions to false
- Start Tiger
- Import odms
R There is no logging in console
- Exit Tiger

- Repeat the previous four tests for operations, and class 'Bridge Value'
R All tests pass

- Repeat the previous four tests for states, using the ui.canvas plugin,
    and class 'Selection Tool'
- Open the DPD to see a Selection Tool event being dequeued
R All tests pass
 
- Repeat the previous four tests for states, using the ui.canvas plugin,
    and classes 'Selection Tool;Shape Tool'
- Open the DPD to see a Selection Tool event being dequeued
- Select the Subsystem tool
R Event for Shape tool is logged.
R All tests pass

- Generate odms without persistence, not an eclipse plugin
R odms generates and compiles without error
- Generate odms with persistence, not an eclipse plugin
R odms generates and compiles without error

Code Changes
------------

com.projtech.bp.als/arc/validate_gen.arc
Initial Version:   1.9   Final Version:  1.10

com.projtech.bp.core/.options
Introduced version: 1.1

com.projtech.bp.io.sql.test/src/com/projtech/bp/io/sql/test/CanvasLogger.java
Initial Version:   1.1   Final Version:  1.2

com.projtech.bp.io.sql.test/src/com/projtech/bp/io/sql/test/CoreLogger.java
Initial Version:   1.1   Final Version:  1.2

com.projtech.bp.ui.canvas/.options
Introduced version: 1.2

com.projtech.bp.ui.canvas/src/com/projtech/bp/ui/canvas/Cl_c.java
Initial Version:   1.3   Final Version:  1.4

com.projtech.bp.ui.canvas.test/src/com/projtech/bp/ui/canvas/test/TestLogger.java
Initial Version:   1.2   Final Version:  1.3

MC-Java/java.arc
Initial Version:   1.14  Final Version:  1.16

MC-Java/referred_to.inc
Initial Version:   1.4   Final Version:  1.5

MC-Java/referring.inc
Initial Version:   1.6   Final Version:  1.7

End
---
$Log: i156.int,v $
Revision 1.1  2009/09/03 18:20:34  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.6  2009/01/01 23:13:16  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.5.156.1  2008/12/31 16:10:23  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.5  2004/07/27 14:39:36  greg
Job: 156
Update version of java.arc

Revision 1.4  2004/07/21 00:52:24  greg
Job: 156
Made review changes

Revision 1.3  2004/07/20 12:54:32  greg
Job: 156
Added Cl_c.java

Revision 1.2  2004/07/20 12:49:56  greg
Job: 156
Introduction

Revision 1.1  2004/07/20 00:14:09  greg
Job: 156
Introduction


