========================================================================

File:      $RCSfile: i437.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:26:28 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Analysis Note
License Management System for BridgePoint 7.0


Abstract
--------

This document describes issues that need to be addressed regarding adding
and configuring license management to the BridgePoint 7.0 release.

History
-------

update: i437-021505-01.rvm
final:  i437-022405-01.rvm

Document References
-------------------

[1] Requirements for BridgePoint 7.0 License Manager
    CVS-Tiger://Documentation/external/requirements/SRS_license.doc
    
[2] Functional Specification for MGLS
    http://devnet.wv.mentorg.com/assets/licensing/lsunix/fs.doc

[3] Nucleus EDGE Platform Requirements
    http://svr-alm-eng-04/repos/edge/documentation/specifications
    /nucleus edge framework.doc
       
[4] License Change Request Template
    http://devnet.wv.mentorg.com/release/forms/Licchg.html
    
[5] ClearQuest Defect Reporting System
    http://devnet.wv.mentorg.com/env/change_mgmt/access.html

[6] Exact Access information and policy
     http://devnet.wv.mentorg.com/assets/licensing/lspc/exact.html
                 
Analysis
--------

The Mentor Graphics Licensing System (MGLS) [2] is to be incorporated into the
Eclipse-based BridgePoint 7.0 Model Builder.  In addition, as part of the
BridgePoint 7.0 release, the BridgePoint 6.1 Model Debugger and gen_file
applications shall be be modified to use the Mentor Graphics Licensing System
in place of the Elan license manager. 

Reference [1] enumerates the requirements for this issue.  This section is a
restatement of the requirements with further analysis to map them into work
requirements for the engineering team.  This section will also address 
fuctionality not explicitly mentioned in the requirements document; for example
the '-e' command line option of the gen_file application.

LICN-1  The license manager software to be used in BridgePoint 7.0 will be the
        Mentor Graphics Licensing System (MGLS) [2].

        For the Model Builder, requirement LICN-1 is qualified by requirements
        LICN-2, LICN-5, LICN-9, LICN-14 and LICN-15.  For the Model Debugger,
        requirement LICN-1 is qualified by requirements LICN-3, LICN-5, LICN-10,
        LICN-11 LICN-16 and LICN-17.  For the gen_file application, requirement
        LICN-1 is qualified by LICN-4, LICN-5, LICN-12, LICN-13, LICN-18 and
        LICN-19.

LICN-2  The Eclipse-based Model Builder component will use the
        com.mentor.nucleus.product plugin as described in chapter 2.1 of the
        Nucleus EDGE Platform Requirements [3].

LICN-3  As part of the update to BridgePoint 7.0, the BridgePoint 6.1 Model
        Debugger must implement the Mentor Graphics Licensing System (MGLS) [2].

LICN-4  As part of the update to BridgePoint 7.0, the BridgePoint 6.1 Generator
        gen_file application must implement the Mentor Graphics Licensing System
        (MGLS) [2].

LICN-5  Exact Access [6] shall be implemented in all products using MGLS.

LICN-6  The atomic and composite license names to be used are:
       
        Atomic:
         xtumlbld
         xtumlgnrt
         xtumldbg
         xtumlmc3020
         xtumlmc2020

        Composite: 
         bridgepntc_c:
           xtumlbld
           xtumlgnrt
           xtumlmc3020
           xtumldbg

         bridgepntcpp_c:
           xtumlbld
           xtumlgnrt
           xtumlmc2020
           xtumldbg

         bridgepntuv_c:
           xtumlbld
           xtumldbg

        Requirement LICN-6 is further qualified by requirements LICN-7 and
        LICN-8.

        Atomic licenses represent the basic units of license controlled
        functionality.  Composite licenses are sets of one or more atomic
        licenses.  Each license name is mapped to a unique number called an
        application id.  When an application requests a license it simply passes
        its application id to the license server.  It is up to the server to
        determine whether to serve an atomic or composite key.
        
LICN-7  The following atomic licenses shall be added to mentorall_s: xtumlbld,
        xtumldbg, xtumlmc3020, xtumlmc2020.  

        The license mentorall_s is a station license.  It is essentially
        identical to a composite license.  Mentorall_s licenses are distributed
        to Mentor employees such as AE's that need access to all Mentor
        products.  The license xtumlgnrt is not included in mentorall_s because
        due to royalty agreements with ObjectStore it is necessary to track and
        pay royalties for all users (even internal) of products containing the
        database server.  Including xtumlgnrt in mentorall_s would make that
        task difficult, if not impossible.
        
LICN-8  The following atomic licenses shall be added to mgc_s: xtumlbld and
        xtumldbg.

        The license mgc_s contains products that are typically sold at reduced
        rates to organizations such as universities.  It is corporate policy
        that no products containing third party royalty based software shall be
        added to the mgc_s station license.  
        
LICN-9  The Model Builder will use the default policy of the EDGE product plugin
        [3] for handling the asynchronous communications needed to obtain a
        license.
        
        Obtaining a license is an asynchronous process in that it always takes
        at least two function calls.  One calls to request a license.  Another
        to confirm that the request has been fulfilled.  The EDGE plugin
        abstracts this away from client applications.

LICN-10 The Model Debugger shall return as soon as possible after completing the
        asynchronous communications necessary to obtain a license.

LICN-11 The Model Debugger shall pause no longer than 4 seconds in order to
        complete the asynchronous communications needed to obtain a license.
        After pausing 4 seconds to obtain a license the Model Debugger shall
        fail to obtain a license.

        As described in paragraph 2 of LICN-9, obtaining a license is an
        asynchronous process.  Because of this the Model Debugger must include
        functionality to wait for a queued license request to resolve into a
        confirmed request.
        
LICN-12 The Generator application gen_file shall return as soon as possible
        after completing the asynchronous communications necessary to obtain a
        license.

LICN-13 The gen_file application will pause no longer than 4 seconds in order
        to complete the asynchronous communications needed to obtain a
        license.  After pausing 4 seconds to obtain a license the gen_file
        application shall fail to obtain a license.

LICN-14 The Model Builder will check for a license each time it accesses the
        BridgePoint core plugin.
        
LICN-15 If the Model Builder does not hold a license, then it shall stop
        immediately.  This shall completely disable all functionality of the
        Model Builder.  For example, if Eclipse was shutdown while Canvas
        Editors were still open, the next time Eclipse started; if a license is
        not available the Canvas Editors would also not be available.

LICN-16 The Model Debugger will check for a license each time it is started.

LICN-17 When the Model Debugger fails to obtain a license it shall display a
        dialog box with a failure message and then stop.

        This is the identical behavior of the current Model Debugger when it
        fails to obtain a license from the Elan license server.
        
LICN-18 The Generator application gen_file will check for a license each time it
        is started.
        
LICN-19 When the gen_file application fails to obtain a license it will write
        the string “SORRY: Failed to get license from License Manager” to the
        console and stop.

        This is the identical behavior of the current gen_file application when
        it fails to obtain a license from the Elan license server.

Functionality not explicitly mentioned in the requirements document.

The gen_file '-e' command line option.
        The existing gen_file application supports a '-e' command line option.
        The purpose of this option is to allow the user to specify to gen_file
        the first feature code it should use when querying the Elan license
        manager for a license.  The Mentor Graphics License Manager works in a
        fundamentally different way.  With MGLS the client only needs to query
        the license manager with its atomic license name or id.  It is up to
        the server to decide which license to serve, atomic or composite,
        floating or node-locked, depending on what keys it has and the order
        they are listed in the license file.  The gen_file application shall 
        continue to accept the '-e' option, even though from this point on it
        shall be treated as a no-op.  

Work Required
-------------

i437.1 (LICN-1 as it applies to the Model Builder)
     Modify the BridgePoint 7.0 Model Builder to implement the Mentor Graphics
     Licensing System via the EDGE framework.
         
    .1.1 (LICN-2, LICN-5 as it applies to the Model Builder, LICN-9)
     Register the Model Builder as an extension of the Nucleus product plugin
     licensing extension point.  The extension 'id' element shall contain the
     Model Builder application id prepended with a '1' (to indicate to the EDGE
     plugin that it will control licensing).  Modify the appropriate element to
     pass the Model Builder's build date to the Nucleus plugin.
         
    .1.2 (LICN-14, LICN-15) 
     Add a check for a valid license in the BridgePoint core plugin getDefault()
     method.  If no valid license was obtained the method shall return NULL.

i437.2 (LICN-1 as it applies to the Model Debugger)
     Modify the BridgePoint Model Debugger to implement the Mentor Graphics
     Licensing System.
         
    .2.1 (LICN-3)
     Modify the Model Debugger license classes to implement the MGLS interface
     in place of the Elan interface.
    
    .2.1.1 (LICN-16)
    The modifications shall be done such that the Model Debugger checks for a
    valid license each time it starts.
    
    .2.1.2 (LICN-5 as it applies to the Model Debugger)
    The Model Debugger shall use the MGLS API calls that support Exact Access.
          
    .2.1.3 (LICN-10)
    The asynchronous communications necessary to obtain a license shall be done
    in such a way that the application may proceed as soon as possible after
    obtaining a valid license. 
    
    .2.1.4 (LICN-11)
    In some situations it is possible that a call to MGLS to validate a license
    will return an 'in queue' message instead of a 'license valid' message.  In
    those situations the Model Debugger may pause and occasionally poll MGLS
    while waiting for the message to resolve to 'license valid'.  The Model
    Debugger shall pause for no longer than 4 seconds.  After 4 seconds the
    Model Debugger shall proceed as if the license query has failed.

    .2.1.5 (LICN-16)
    The behavior when a Model Debugger fails to obtain a license shall be
    identical to the previous release of the Model Debugger.
     
i437.3 (LICN-1 as it applies to the Generator)
    Modify the BridgePoint Generator to implement the Mentor Graphics Licensing
    System.

    .3.1 (LICN-4)
    Modify the BridgePoint license classes to implement the MGLS interface
    in place of the Elan interface.

    .3.1.1 gen_file '-e' option
    The modifications shall be done such that gen_file continues to accept
    the '-e' command line option.  It shall treat it as a no-op.
     
    .3.1.2 (LICN-18)
    The modifications shall be done such that gen_file checks for a valid
    license each time it starts.

    .3.1.3 (LICN-5 as it applies to the Generator)
    The gen_file application shall use the MGLS API calls that support Exact
    Access.
     
    .3.1.4 (LICN-12)
    The asynchronous communications necessary to obtain a license shall be done
    in such a way that the application may proceed as soon as possible after
    obtaining a valid license. 
    
    .3.1.5 (LICN-13)  
    In some situations it is possible that a call to MGLS to validate a license
    will return an 'in queue' message instead of a 'license valid' message.  In
    those situations gen_file may pause and occasionally poll MGLS while waiting
    for the message to resolve to 'license valid'.  gen_file shall pause for no
    longer than 4 seconds.  After 4 seconds gen_file shall proceed as if the
    license query has failed.

    .3.1.6 (LICN-17)
     The behavior when gen_file fails to obtain a license shall be identical to
     the previous release of gen_file.

i437.4
     Obtain license names. (LICN-6, as qualified by LICN-7 and LICN-8) 

    .4.1
     Complete a License Change Request Template [4] to request the license names
     listed in paragraph LICN-5.
         
    .4.2
     Submit the license change request by creating a ClearQuest [5] defect
     report.
            
Acceptance Test
---------------

Testing shall be accomplished in 3 phases, one for each product, the Model
Builder, the Model Debugger, and the gen_file application.

Until testing with WinRunner is available, it may not be possible to completely
automate the Model Builder testing.  Since most of the license functionality
will be supplied by the EDGE Platform plugin, testing shall consist of:
1) Assuring that the plugin is being called from the BridgePoint core plugin
getDefault() method.
2) That Model Builder shows the correct behavior if it successfully obtains a
license.
3) That Model Builder shows the correct behavior if it fails to get a license.

If a license is available, testing of the Model Debugger shall be done with
WinRunner.  If it is not available, manual testing is required.  The testing
shall consist of:
1) Assuring that Model Debugger calls MGLS to checkout a valid license each time
it starts.
2) That Model Debugger shows the correct behavior if it successfully obtains a
license.
3) That Model Debugger shows the correct behavior if it must queue for a
license.
4) That Model Debugger shows the correct behavior if it fails to obtain a
license.

If possible testing of the gen_file application shall be automated. If it is not
possible, manual testing is required.  The testing shall consist of:
1) Assuring that gen_file calls MGLS to checkout a valid license each time it
starts.
2) That gen_file shows the correct behavior if it successfully obtains a
license.
3) That gen_file shows the correct behavior if it must queue for a license.
4) That gen_file shows the correct behavior if it fails to obtain a license.
5) That gen_file will accept and then continue to run normally if it is passed
the '-e' command line option.

End
---

$Log: i437.ant,v $
Revision 1.1  2009/09/03 18:26:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.9  2009/01/01 23:13:25  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.8.44.1  2008/12/31 16:10:34  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.8  2005/03/03 00:23:39  pablo
Job: 473
incremental checkin
Update per review observations

Revision 1.7  2005/02/23 22:03:30  pablo
Job: 437
Address review observations, add analysis of
gen_file '-e' command line option

Revision 1.6  2005/02/16 23:56:35  pablo
Job: 437
interim checkin, working on review observations

Revision 1.5  2005/02/15 00:23:48  pablo
Job: 437
Update the ant to reflect the final version of the
SRS.

Revision 1.4  2004/10/12 22:28:44  pablo
Job: 437
incremental checkin

Revision 1.3  2004/10/06 15:34:45  pablo
Job: 437
incremental checkin

Revision 1.2  2004/10/05 20:27:56  pablo
Job: 437
incremental checkin

Revision 1.1  2004/10/01 23:13:01  pablo
Job: 437
Introduce first rough draft of analysis note.

