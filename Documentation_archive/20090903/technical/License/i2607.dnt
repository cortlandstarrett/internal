========================================================================

File:      $RCSfile: i2607.dnt,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:26:28 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Design Note
Licensing: unconditional check-out

1. Abstract
-----------
This note describes the solution to the issue of unconditional license
check-out of licenses during a run of BridgePoint.

2. History
----------
Documentation/internal/review_minutes/R1_4_2/i2607-122206-01.rvm
Documentation/internal/review_minutes/R1_4_2/i2607-010307.rvm

3. Document References
----------------------
[1] Bug 2607.  http://phoenix.projtech.com/bugzilla/show_bug.cgi?id=2607

4. Background
-------------
When BridgePoint starts, the model compiler plugins check out the model compiler
licenses.  This is fine for a local license file configuration, but when users
are trying to share floating licenses on a license server, this functionality
makes shared use of the model compilers very difficult.  This note describes how
this issue will be solved.

5. Analysis
-----------
5.1     The model compiler plugins, the Model Builder, and Model Verifier
        currently rely upon the EDGE FlexLM license manager interface provided
        by the com.mentor.nucleus.product package.
5.1.1   This package provides the license dialog found at
        "Help > License Information..."
5.1.2   This package automatically checks the license availability for any
        Eclipse feature that extends com.mentor.nucleus.product.nucleusProduct.
5.1.3   The tools extend this interface with the information in their
        ".nucleusproduct" files.

5.2     License managers
5.2.1   Mentor Corporate publishes a Java license interface at:
        http://devnet.wv.mentorg.com/assets/licensing/
5.2.2   Matt Ballance in the SLE group looked for the code for this plugin, but
        was unable to find it in ClearCase.  The location listed in the
        documentation does not exist.
5.2.3   Neither SLE, nor ESD, use this license plugin from Mentor Corporate.
5.2.4   All currently available Java license plugins are JNI-based wrappers
        using their own license access implementations for the backend DLLs.

5.3     The SLE License Manager
5.3.1   This is the license manager currently in use by the Model Express team
        in SLE
5.3.2   This license manager does not provide a license information dialog to
        view license status in the Eclipse UI.
5.3.3   This license manager does not, in my opinion, provide adequate security.
5.3.3.1 All that is required to circumvent the license check would be to create
        a plugin named com.mentor.sx.feature_mgr, with class FeatureMgrPlugin,
        that contains a function initHeap(id) that just returns true.  Rip ours
        out, put this in and all license checks are averted.

5.4     The EDGE License Manager
5.4.1   This LM provides a "License Information" dialog to the Eclipse UI.
5.4.1.1 This dialog simply "queries" the licenses, it does not check them out
        for the duration of the BP application.
5.4.1.2 This LM exposes a "queryLicense()" function that other plugins can use.

5.5     Model Compiler Licensing
5.5.1   When the MC plugins start, they attempt to check out the corresponding
        source and binary licenses.  The current implementation checks the
        licenses out for the duration of the application.
5.5.2   The model compiler license checks are only used to determine if the
        source or binary MC should be called.
5.5.3   Actual use of the specific source or binary license is enforced by the
        generator EXE.
5.5.3.1 The generator EXE does not use the EDGE LM.  It has its own internal
        license access code.
5.5.3.2 The generator used to have a timer associated with its locking of the
        license at some point in the past, but we do not want to do this now.

5.6     BP Product Licensing
5.6.1   The other BP products, such as Builder and Verifier, rely on the license
        manager plugin to actually enforce the licensing scheme.  That is, they
        need to use the EDGE LM to "check out" the appropriate license while
        they are in use.

5.7     License Sharing
5.7.1   Model Builder should not be usable in a "shared" environment.  The
        Builder license should be checked out for the duration of the
        BridgePoint application.
5.7.2   The Model Verifier and Model Compiler licenses should be "shareable".
        These tools should only lock their respective licenses while they are
        running.

6. Design
---------
6.1     Design Options
6.1.1   One option is to enhance and extend the SLE license manager.
6.1.1.1 A function would need to be added to "check availability" of a license.
        This function would attempt to check out a license, but then check it
        back in.  Thereby, not locking its use for the entire run of the
        application.
6.1.1.2 The mechanism to check out a license would need to be extended to
        provide addtional security to the license manager.  Most likely, by
        implementing some sort of "cryptography" for the license checkout
        function.  Instead of simply returning true or false, this function
        could return an integer that is the XOR of the app ID with a secret
        number, or some such.  This would make it much more difficult for a
        hacker to bypass the security.
6.1.1.3 The SLE LM has no "License Information" dialog, so we would need to add
        it, or do without.
6.1.2   A second option is to stick with the ESD license manager.
6.1.2.1 The Builder license managment will not change.
6.1.2.2 The Verifier license management will change to use the EDGE LM
        "queryLicense()" functionality and only lock the license while the
        Verifier is running.
6.1.2.3 The MC plugins will change to use the EDGE LM "queryLicense()" funtion
        to check for, but not check out, model compiler licenses.

6.2     Conclusion
6.2.1   The option we will implement is option two, as detailed in 6.1.2.  The
        reasons are as follows:
6.2.1.1 The license dialog provided by the ESD license manager is nice.  We
        would lose that if we moved solely to the SLE license manager.
6.2.1.2 We have the source code for the ESD plugin. Therefore, we can continue
        to use the ESD-delivered (existing) binary plugin in the short term, but
        we have the ability to fork and own our own version in the future if we
        want to untie ourselves from the existing plugin.

7. Design Comments
------------------
None.

8. Work Required
----------------
8.1     Remove the license checkout from both the MC-3020 and MC-2020
        ModelCompiler.java classes.  Change to use the "queryLicense()" funtion.
8.2     Modify Model Verifier to only lock its license while verifier is
        running.
8.3     There is a call in the Getting Started demo to check-out the license.
        This will need to call queryLicense() instead of what it is currently
        doing.

9. Unit Test
------------
The following is a manual test procedure.

9.1     Configure the license server to have one MC-3020 license, one MC-2020
        license, and one Model Verifier license.
9.2     Configure two BridgePoint development machines (hereafter A & B) to get
        licenses from the license server.
9.3     Start BP on machine A
        _R - The License Information dialog shows MB, Verifier, and both MCs OK
        _R - A model generates OK using MC-3020
        _R - A model generates OK using MC-2020
        _R - The eclipse log does not indicate any license errors
9.4     Start BP on machine B
        _R - The License Information dialog shows MB, Verifier, and both MCs OK
        _R - A model generates OK using MC-3020
        _R - A model generates OK using MC-2020
        _R - The eclipse log does not indicate any license errors
9.5     Try to generate code on both machines at the same time
        _R - The code generation on one of the machines should fail due to no
             license availability
9.6     Try to use Model Verifier on both machines at the same time
        _  - Open the MV perspective on both machines
        _R - Both open fine
        _  - Begin executing a model on machine A
        _R - It begins executing
        _  - Begin executing a model on machine B
        _R - MV will complain that it cannot acquire a license
        _  - Stop executing a model on machine A
        _  - Begin executing a model on machine B
        _R - MV will complain that it cannot acquire a license
        _  - Exit BP on machine A
        _  - Begin executing a model on machine B
        _R - It will begin executing

End
---

$Log: i2607.dnt,v $
Revision 1.1  2009/09/03 18:26:28  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.5  2009/01/01 23:13:25  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.4.14.1  2008/12/31 16:10:34  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.4  2007/01/04 13:54:23  kbrown
Job:2607
Completed review minutes.

Revision 1.3  2007/01/02 20:33:05  kbrown
Job:2607
Completed update based on first review.

Revision 1.2  2006/12/22 18:41:10  kbrown
Job:2607
Completed design note.

Revision 1.1  2006/12/22 14:03:11  kbrown
Job:2607
Partially complete design note.

