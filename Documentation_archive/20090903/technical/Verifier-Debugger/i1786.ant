========================================================================

File:      $RCSfile: i1786.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:20:47 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Analysis Note
Add java EE's to Model Verifier

Abstract
--------
This note describes the alternative strategies for allowing the user to supply a
realized class that Verifier can use when a call is made to a modeled External
Entity (EE).

History
-------
  update - i1786-033106-01.rvm

Document References
-------------------
[1] Bugzilla Issue 1786
[2] Bugzilla Issue 1702

Background
----------
Incorporating Timer support into Model Verifier[2] requires that we support a
Time EE. Later we'll need to output success or failure data to a Logging EE, so
we have at least two cases where we need external entities. The user will
appreciate the ability to plug in a realized java class to implement or at least
mimic the EE.

Analysis
--------
We have some requirements to meet:

- The realized EE cannot be built directly into Model Verifier, otherwise the
  user cannot provide their own EE's.

- Supporting a realized EE cannot break support for EE's wired to other domains
  or EE's with OAL in the bridge. So EE's shall be resolved (Using name binding,
  see next requirement) in the following order of preference:
  
  - OAL
  - Modeled Domain and Function in the simulation
  - Realized user supplied Class and Method
  - Realized Mentor supplied Class and Method
  
  The log shall contain an entry to inform the user which resolution was used.
  Note that the Mentor supplied class can be overridden by a user supplied
  class.

- To avoid complex wiring UI, the simplified name based binding standard must be
  used, where there is a direct mapping between:

  - the EE name and the supplied class name
  - the Bridge name and the name of a method of the supplied class.
  - the Bridge Parameter type and the type of an argument to a method of the
    supplied class. Types shall be matched in order of appearance in the
    signature of the Bridge and Method.
  - The argument types shall be converted as required:
    - integer maps to int
    - boolean maps to bool
    - real maps to float
    - inst<event>, inst_ref<Timer> etc. map to Object
    etc.

- The classes shall be looked for in a well known place in the users workspace
  and (for the Mentor classes) in the core plugin. The exact required location
  shall be defined as part of the design.

Work Required
-------------
  - Have Eclipse load a class into the VM to be run on the Model Verifier
    threads.
  - Add a new External Entity to model verifier to allow the model to load
    classes as required.
  - Add a realized java class to implement the above EE.
  - Add new OAL to the Bridge Invocation and Bridge Value classes that uses the
    external entity to load the required class.

Acceptance Test
---------------
_- Define an EE with a bridge with multiple arguments, that returns a boolean.
_- Create a class with the same name as the EE that implements a public method
   with the same name as the bridge. The method shall have the same number of
   same typed arguments.
_- Have the method return true if all the arguments are some pre-specified
   fixed literal value.
_- Create a model function that invokes the bridge with the expected values and
   with different values.
_- Confirm that the bridge returns true in the first case and false otherwise.

End
---

$Log: i1786.ant,v $
Revision 1.1  2009/09/03 18:20:47  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.5  2009/01/01 23:13:15  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.4.24.1  2008/12/31 16:10:22  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.4  2006/04/03 22:40:44  campbell
Job: 1786
Updated linking preferences after discussion with WGT and JRW.

Revision 1.3  2006/03/31 18:28:54  campbell
Job: 1786
Address review issues.

Revision 1.2  2006/03/01 21:53:57  campbell
Job: 1786
Extended Analysis section. Added Work required and test sections.

Revision 1.1  2006/03/01 18:01:07  campbell
Job: 1786
Introduced.

