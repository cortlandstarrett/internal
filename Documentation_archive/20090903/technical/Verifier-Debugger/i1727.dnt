========================================================================

File:      $RCSfile: i1727.dnt,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:20:48 $

(c) Copyright 2006-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Design Note
Re-work Value Context(Add relationship from Value to Stack Frame)

Abstract
--------
This note describes the changes to add a Stack Frame context to the Value class. 

History
-------
update i1727-031606-01.rvm
final i1727-032306-01.rvm

Document References
-------------------
[1] Bugzilla issue 1727

Background
----------
In the Model Verifier currently values are retrieved by searching values in the 
top stack frame. This will not be sufficient when the user is allowed to change 
the debugging context to be something other than the top stack frame. 

Analysis
--------
One proposed fix for the issue described in the background section is to add a 
relationship from Value to Stack Frame.  During the previous review of this 
document it was deteremined that this approach would not work.

A new approach is to add the ability to specify which stack frame a value should
use in the evaluation of itself. This will allow a user to select any stack 
frame and have the expression evaluator determine the correct value of any
relevant expressions for the new context(stack frame). Many of the execute 
operations will also need to be updated to have a stack frame parameter as well.
This will allow the execute operations to be able to retrieve values by passing
in a correct stack frame as needed. This also allows the execute operations to
stop assuming they are operating in the top stack frame of the one and only
stack.

Design
------
1. Provide a way to specify a stack frame id when requesting a value.

Remove the current way to retrieve a value via a derived attribute. Replace this
with an operation that accepts a stack frame id. With this change all other code
that used the derived attribute will need to be updated to use the new 
operation. 

2. Modify execute operations to take stack frame ids as needed.

Many of the modeled OAL statements now have execute operations which define the 
interpreted execution of the OAL statements. Each of these operations will need 
to be reviewed to determine if a stack frame id is needed within the operation. 
Then the operations should be modified as needed. 

Design Comments
---------------
- Body.Body.deleteStackFrame also needed to be modified to take a stack id 
parameter.
- Some of the Verifier Test model test failed when I tested them after 
completing work for this issue. I then discovered that the tests failed before
I made any changes(not cause by my work for this issue...). I uncovered and 
corrected many bugs in the verifier execution engine. They are as follows.
  -- some code was overwritten in a merge from HEAD to verifier head. This was 
corrected by Greg R. 
  -- local selected references were not being created in the correct block.
  -- Attribute Values were not being created for Attributes that were 
  referential attributes. Fixed in Instance Access.Create.
  -- "any" cardinality was not being handled correctly in the execute operation
  of the select related where class.
  -- In the execute operation of the assign to attribute class, rvalues needed
  to be retrieved before an Attribute Value instance was created(if the 
  Attribute Value didn't already exist).
  -- Needed to update the error values used when there was a problem retrieving
  an attribute value(in getValue).
  -- Attribute Value.getValue needed to be updated to search for referential 
  attribute values if the Attribute was a referential.  

Work Required
-------------
1. Provide a way to specify a stack frame id when requesting a value.

Add a Value:Value.getValue(stack_frame_id) operation. Copy code from the 
Value:Value.Value derived attribute into the added operation. Modify the code 
as needed, possibly adding a new attibute to the Value:Value class which will
store the id. Delete the Value:Value.Value derived attribute. Parsing all 
activities at this point should reveal the places in code that will have to be
updated due to this change. Correct the parse errors. 

2. Modify execute operations to take stack frame ids as needed.

The first step will be to modify the Body:Body.createStackFrame to return the 
stack frame id of the created stack frame. This id can then be passed into the 
Body:Body.execute operation. Now all existing execute operations for OAL 
statements need to be reviewed to determine if a stack frame id needs to be
passed in as a parameter. If so the operation and the code which calls the 
operation will need to be updated accordingly.

Also, the Body:Body.createStackFrame operation should be modified to take a 
stack id parameter. This will allow the stack frame to be pushed onto the 
correct stack.

Unit Test
---------
Run the existing Verifier Test Model tests(informal tests) since JUnit testing
is not ready yet.

End
---

$Log: i1727.dnt,v $
Revision 1.1  2009/09/03 18:20:48  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.7  2009/01/01 23:13:15  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.6.24.1  2008/12/31 16:10:21  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.6  2006/04/18 11:53:10  jluebker
Job: 1727
Add some initial Design comments

Revision 1.5  2006/03/23 18:48:58  jluebker
Job: 1727
Updated history section. Final review minutes document added.

Revision 1.4  2006/03/23 18:45:43  jluebker
Job: 1727
Updated design note per i1727-032306-01.rvm

Revision 1.3  2006/03/21 22:30:45  jluebker
Job: 1272
New design described.

Revision 1.2  2006/03/20 20:20:49  jluebker
Job: 1727

Added a review meeting history entry.

Revision 1.1  2006/03/14 20:01:36  jluebker
Job: 1727

Introduced.

