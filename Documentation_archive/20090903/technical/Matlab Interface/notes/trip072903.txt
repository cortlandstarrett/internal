========================================================================
File:      $RCSfile: trip072903.txt,v $
Version:   $Revision: 1.1 $
Modified   $Date: 2009/09/03 18:28:53 $
========================================================================
Subject: MATLAB Integration
Trip Date: July 29, 2003
Who: PT (WGT,DCM), LMCO (Gary Shubert,Harry Mannich (for an hour in
     the afternoon)

Note: some numbers and letters that appear below reference a printed
hand-out provided by Gary.  The handout is in the LM file.

AST - New Vehicle Programs
PAD - currently underway - OOA in a few weeks (PAD Abort Demonstrator)
      (launch pad)
OSP - Orbital Space Plane - accelerate this program.
  o System design review this year
  o RFP next year Jan time frame
  o Need integration into product next year - end of next year is o.k.
  o start modeling Nov/Dec 2004
  o can start modeling prior to MATLAB - late 04, early 05
  o funding better since sooner
 
Harry Mannich (MATLAB expert).  System analyst guy.  Guidance analysis
along with the BP models for this.  Very familiar w/ MATLAB.

page 1) 
If developed like the shuttle, $2B - $9M per flight for maintenance.
Want a better way that is less expensive.  Want a level of test that
is more significant than what is being done today.  Need an automated
test with auto code generation.

EELV (Evolved, Expendable Launch Vehicle) - 98-99% code generation,
Atlas - 12 folks currently maintaining this code.

Matlab -> Ada in transformer
m files -> manual to Ada in transformer
80-90% of the code is in the transformer

Data Spec, Transformer Spec, OAL
Arch: Main program procedure, FSM: Table lookup, Ada task - task entry
      for each state. 

Hand-written ADA for m-files put in transformers. 
Packages: OIM->structure

In future: will support both languages - Ada and C++
Use case tool with language independence - some kind of OAL - hybrid
of Matlab and OAL?

Develop m-files for algorithms:
  - in Matlab
  - w/ Simulink

Rqmt: programming language independent w/ SW Eng link to MATLAB files

Translation of m-file to C++/Ada in 2004 IRAD plan for phase II of
product.

m-file is c-like in structure

requests for OAL: 
  - add more control structures
  - add built-in functions

- predefined types are used in models
- to be able to use hybrid OAL in SC - that would be great.

- provide feasibility of OAL in MV & GEN
- If mandated C++, PT's C++ may look better

Code Generator:
  - export of SQL from BP
  - filter
  - convert to ASCII
  - Oracle DB
  - code gen works off of Oracle DB - Embedded SQL
  - OAL - parse it
  - translation - to Ada, C++, or both

d) want reusable (making compatible to OOA) MATLAB models that all of
   LM uses for rocket engines, flight control.  Work with OOA modeler
   to make reusable domain.
e) minimum 20yr programs - C++, ADA
d) TVEC - SPC - Requirements in interpretable form, generates inputs
   and expected outputs.  Includes statistical output for focus of
   test.  Branching analysis.  
   MATLAB integration with TVEC.  Matlab model serves as a truth model
   for the generated code.

ARINC Apex 653 Executive scheduler that does the scheduling 
 SS<<----->Partition - a partition contains 1 or more subsystems

5) Translating m-file to code - need to remove these steps (manual
   steps). 

6)a) - feasibility, recommendation, research, prototype
  b) - funding

7) LDRA - test tool - Ada/C++.  Automated test execution with drivers
   and reporting

8) 2004 activity - based on what OAL looks like.  Maybe exchange
   technology as part of agreement.  Would like to offload code
   generation on PT.

9) 40-50% of time in test.

Nits:
  - establish a common user id, to have multiple SS's
  - connectivity between different domains
  - domain chart

Functional requirement definition (decompose functionality) from
system level specs (SRS) (stable flight for vehicle)

Text statements -> enter into MATLAB/Simulink env.  Interpretable
form.  SCR (SW cost reduction).  Manual research labs.  Rest modeled
-> TVEC.

Interpretable form of requirements specification:
     ->OOA
RQMT          {two interpretable forms}
     ->Test        

TVEC reports dead paths, incompatible requirements

Requirement Specification - text form with interpretable models in
MATLAB.

MATLAB -> Test
|
V
process that OOA models tie to

OOA->SS's - prelim SC, control logic in SC & processes - peer review,
code gen, start test sequences.

Modeling requirements - Use Case, Activity Diagram

Doors

Add-on: support for ARINC 653 API.  Simulate API Model (POSIX,
ARINC).  Describes how processes do inter process communication.
Platform calls.

  - part set of processes in order at some frequency
  - part thread

Doors & BP link - traceability at LMCO.

Requirement -> SS:CL:TFR Model Manually done
               Testcase   Test
Prefer not to have in model unless it is automatically updated.

Requirements change, look at report of all the Model Elements that
have changed - generate impact assessment report.

Templates for each of the canvases.  Would like consistency with in
the models too.  Wizards.

Morrison, CO - The Fort, Morrison Inn - good Mexican food.

LMCO: Diff/Merge is important to prove that something did not
change. (This is another good point for having this feature that I had
not appreciated)

MATLAB/Simulink - Ada->m-file for simulation of the code.

11) Today: MATLAB - m file, BP transformer w/ Ada
    disconnected but same thing
    
    Future: All m-file - translate to TVEC and to Ada/C++ from transformer

Now: m-files  - handed off to BP modeler to write in Ada/C++

Goal: eliminate 2 step process

Link from BP to MATLAB so we have 1 source for it.  
       ->MATLAB
m-file/
      \-> BP

MATLAB generates code for m-files.  LMCO will take m-file, parse and
generate code for it.

----------------

parameter list - inputs/outputs to module.

OOA design - data structures -> m files

today: translate model - well known name, code conforms to name.
tomorrow: parameterize concepts from OOA to Matlab m files
OOA concepts -> MATLAB concepts (data types, sets)

Hybrid: comment delimiter to MATLAB for BPAL

MATLAB
  - matrix data types - pointers to doubles

basic (name, dimension, core data type) w/ grouping (structure)

BP => Translate => M-file

For every instance of an object, initialize all elements

Requirement for Phase II: Take m-file data out for export (location of
m-file)

class init object -> ada -> filter -> m file -> simulation
think about initial values
initialization

- vector & matricies support, indexed structure - 1 dim, 2 dim
- passing of instances

12) PEI's - keep same set for both paths: code gen + MATLAB
13) Mapping Table

OOA of m-file language

==================

Description:
Action_Semantics: -> m-file - URL to file

Phase I report - 
pulldown MATLAB functions inside of domain to get access to another
domain.
  - also ARINC

estimate on LMCO contribution.