========================================================================

File:      $RCSfile: phase_1_report.ant,v $
Version:   $Revision: 1.1 $
Modified   $Date: 2009/09/03 18:25:39 $

(c) Copyright 2003-2009 Mentor Graphics Corporation All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Project Technology, Inc. and is not for external distribution.
========================================================================


Matlab/BridgePoint integration - Phase I report

Abstract
--------
This document defines a set of possible integrations that could be
implemented between the Project Technology BridgePoint product and the
Mathworks product, Matlab.

Background
----------
The demonstration software accompanying this report provides proof that
an electronic integration between MATLAB and BridgePoint is feasible.
This report provides Lockheed Martin with a "shopping list" from which
they can select the integration(s) they want to see implemented. The
selected features will then be integrated into the BridgePoint tool
suite during 2004 and the first part of 2005.

References
----------
[1]  bp.core/doc/internal/technical/Matlab Interface/
                                               phase_2_matlab_editor.ant
[2]  bp.core/doc/internal/technical/Matlab Interface/
                                          phase_2_mc2020_integration.ant
[3]  bp.core/doc/internal/technical/Matlab Interface/
                                                   m-file_translator.ant
[4]  bp.core/doc/internal/technical/Matlab Interface/
                                           instance_handle_arguments.ant
[5]  bp.core/doc/internal/technical/Matlab Interface/
                                                enhanced_data_typing.ant
[6]  bp.core/doc/internal/technical/Matlab Interface/arrays.ant
[7]  bp.core/doc/internal/technical/Matlab Interface/
                                                  embedded_languages.ant
[8]  bp.core/doc/internal/technical/Matlab Interface/active_x.ant
[9]  bp.core/doc/internal/technical/Matlab Interface/command_window.ant

Analysis
--------
The following enhancements are put forward for consideration:-

-   Product strength feature set equivalent to demonstration software
    functionality (less the architecture and command window work which
    are broken out as separate work items)[1].
-   Product strength integration between the Project Technology MC-2020
    off the shelf model compiler and the Mathworks Matlab C++ code
    generator[2].
-   Use PT's new rapid parser and langugage metamodel development
    technology to accelerate the development of an m-file to Ada code
    generator[3].
-   Enhance the BridgePoint OAL to support instance references and
    instance reference sets passed as parameters[4].
-   Enhance BridgePoint to support user-defined compound data types
    and enhance the OAL to support associated assignment syntaxes[5].
-   Enhance BridgePoint to support array declaration and enhance the
    OAL to support associated assignment syntaxes[6].
-   Support optional editing of Ada and/or C++ source in all places
    where action semantics may be entered currently[7].
-   Fully embedding the Matlab interface within the BridgePoint tool
    interface[8].
-   Product strength Matlab command window embedded within the Bridge-
    Point interface[9].

Not all of the above enhancements are directly related to Matlab
integration support. Some are included because of their percieved value
to the Lockheed Martin mode of use of the BridgePoint tool. Each
reference in the above list is a pointer to a document that provides
both details and estimated costs for each proposed enhancement.

IMPORTANT NOTE
--------------
All of the above proposals affecting action language syntax assume that
either:

- The tiger proposal for populating the processing subsystems directly
  is implemented, or
- The parser built into generator is modified to parse for the modified
  syntaxes.

Which of these two implementations are deployed depends on what products
are to work with the tool. MC-2020 for example, depends on the parser
built into generator. Therefore if MC-2020 is to work with Tiger syntax
enhancements, generator must be updated.

The relevant proposals are; instance handle arguments[4], enhanced data
typing[5] and arrays[6].

End
---

$Log: phase_1_report.ant,v $
Revision 1.1  2009/09/03 18:25:39  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.7  2009/01/01 23:13:49  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.6.166.1  2008/12/31 16:11:04  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.6  2003/12/01 16:20:17  campbell
Job: 91
Updated for review comments. Added note about updating generator
for MC-2020.

Revision 1.5  2003/11/20 20:12:12  campbell
Job: 91
Introduced new analysis notes for all proposed work items.

Revision 1.4  2003/11/18 21:50:19  campbell
Job: 91
Broke out Command window into separate project.

Revision 1.3  2003/11/12 21:16:45  campbell
Job: 91
Removed integrations with Model Debugger and Model Verifier
again.

Revision 1.2  2003/11/12 21:14:58  campbell
Job: 91
Broke out mc-2020 integration work into separate work item.
Added integrations with Model Debugger and Model Verifier.

Revision 1.1  2003/11/12 16:11:31  campbell
Job: 91
Introduced.
