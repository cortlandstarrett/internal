========================================================================

File:      $RCSfile: matlab_interface.ant,v $
Version:   $Revision: 1.1 $
Modified   $Date: 2009/09/03 18:25:39 $

(c) Copyright 2003-2009 Mentor Graphics Corporation All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Project Technology, Inc. and is not for external distribution.
========================================================================

Tiger Pre-Project Analysis Note
Matlab Interface

Abstract
--------
This document discusses how integration with Matlab will be implemented
for the Lockheed Martin demonstration of the Eclipse based toolsuite.

History
-------

Document Reference
------------------
[1] bp.core/doc/internal/technical/Matlab Interface/phaseI_demo.txt

Background
----------
Lockheed Martin has a requirement to run BridgePoint in close
integration with the Mathworks Matlab product. This note describes how
this will be supported in Tiger. There are two aspects to this work,
a short term demonstration product and a longer term product development
proposal. This document refines the requirements for the demonstration
product.

Analysis
--------
The basic requirements are defined elsewhere[1].

This demonstration product is built on top of the Tiger BridgePoint
Builder replacement project deliverables. Wherever possible, work
products from HEAD are used. In all other cases, work products are
taken from Branch ML-1. This meets requirement 1 of [1].

The Eclipse logo is replaced with the BridgePoint logo in all
places. The name 'Eclipse' is replaced with 'BridgePoint' in
all places. The Eclipse splash screen is replaced with a Bridge-
Point equivalent. This meets requirement 2 of [1].

The following is proposed for the user experience:

  - The user creates a new model element containing action language
    using standard techniques proposed for Tiger (e.g. right click,
    select 'New >').
  - On bringing up the context menu (right click on Windows) on this
    new element, 'Open With >' contains a list of all the plugins
    registered as action editors.
  - If the user invokes the standard Eclipse open behavior (e.g. right
    click, select 'Open' or double click), the default editor specified
    in the user preferences is launched (see 'User Preferences' below).
  - The user can change the above default to be any of the registered
    action editors. The initial default editor is the BridgePoint
    OAL editor.
  - After the user has selected an editor for the first time:
    - The standard Eclipse open behavior brings up either:
      - the last selected editor.
      - the first selected editor.
      which is defined by the user preference, 'Always use default
      editor on open'.
    - The 'Open With >' sub menu contents are reduced to show only the
      editors that are registered in the plugin as compatible with the
      first selected editor.
  - A user preference, 'Restrict Visible Action Language Editors' is
    provided. When unchecked, this allows the user to edit any action
    with any editor.
  - There are a total of three registered action editors for the
    demonstration product:
    - The BridgePoint OAL editor.
    - The Internal Matlab (BridgePoint) editor.
    - The External Matlab (Mathworks proprietary) editor.
    The two new editors meet requirement 4 of [1].
  - When either of the Matlab editors is opened, the attribute 
    containing the action semantics is scanned for a valid path. The
    possible behaviors are:
    - If the path is valid, either open the contents in an Eclipse
      editor (Native editor), or launch the matlab editor using ActiveX
      protocol (External editor).
    - If the path is invalid or no path is found, present a file chooser
      to the user to locate the m-file to be used to represent these
      action semantics (the path last visited is remembered, even
      between tool invocations). This meets requirement 3 of [1].
  - Both Matlab editors insert the path to the m-file to be edited in an
    action language comment into the top of the action semantics 
    attribute. This meets requirement 5 of [1]. The string for the
    comment is a user preference (on the Matlab page) and can be changed
    from the default value of '//'.
  - Both Matlab editors scan the Matlab file (when found) for a function
    signature. This signature is used to set the name of the model
    element and to determine the number, name and type of the arguments.
    This information is used to set the name and type of corresponding
    parameter model elements.
  
Changes to MC-2020 to support the requirement
The specification below meets requirements 6 and 9 of [1].
  - MC-2020 scans for action semantic instances that are marked as m-
    files. Normal action language processing is not carried out for
    action semantics marked in this way. Instead, new support functions
    and scripts are developed to take the path stored in the action
    semantics attribute (see above) and pass the path (or pipe its 
    contents as required) to the Matlab code generator.
  - MC-2020 generates wrapper functions which call the Matlab generated
    functions.
  - MC-2020 behavior is modified as necessary to produce a single executable
    from the sum of the Matlab and BridgePoint generated source files.
  - It is assumed the Matlab code generator places the resultant files in
    a well known place. If some other mechanism is used, such as a UNIX
    style pipe, then the MC-2020 support functions perform whatever 
    accommodation is needed for integration.
  - An interface that mimics the Matlab code generator is provided,
    with the goal that this can be seamlessly replaced with the functional
    tool.
  - Procedures are available that allow the Tiger user to emit a sql file
    to a place and in a format compatible with MC-2020s expectations.
  - The above required MC-2020 extensions do not prevent the architecture
    from simultaneously supporting both Matlab and Model Debugger.

Demonstration Model
The specification below meets requirement 7 of [1]. The model shall:
  - Perform some task of recognizable use to the audience.
  - Avoid the use of matrices and compound data types.
  - Use the Matlab functions specified by Lockheed Martin.

Console Window
The console window uses ActiveX to communicate with a copy of Matlab
running in the background. Characters typed by the user are buffered
by the demonstration product. Each time the user types 'Enter', the
typed characters are sent to the Matlab session using the ActiveX
"Execute" protocol. The protocol returns a string result. This is
printed to the console display to give the illusion of running a Matlab
session inside Eclipse. The delete key erases characters from the
buffer as expected. Cursor keys are ignored, nor is there any support
for tab command completion as found in the native Matlab environment.
This meets requirement 8 of [1].

User Preferences
All user preferences specified above are contributed to the BridgePoint 
| Editors preference page unless otherwise specified. That is, there
will be a sub tree under the 'BridgePoint|Editors' preference entry
called 'Matlab'. The 'Editors' sub tree item will select a single page
with fields for most of the items specified above (the remainder will
be shown on a page selected by a 'Matlab' subtree item). Boolean items
will be shown as a checkbox, sting items as a text field and items
consisting of a set of possible values known at startup will be shown
as dropdown list.

End
---

$Log: matlab_interface.ant,v $
Revision 1.1  2009/09/03 18:25:39  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.7  2009/01/01 23:13:49  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.6.166.1  2008/12/31 16:11:04  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.6  2003/10/21 20:17:37  campbell
Job: 91
Corrected proposed Preference page layout.

Revision 1.5  2003/10/20 22:40:32  campbell
Job: 91
Fix (informal) review observations and spelling errors.

Revision 1.4  2003/10/20 19:33:35  campbell
Job: 91
Completely rewritten to specify the analysis of the requirements
as provided by the customer. Old document moved to:
bp.core/doc/internal/technical/Matlab Interface/
                                                  matlab_interface_prototype.dnt

Revision 1.3  2003/09/29 23:39:14  campbell
Job: 91
Added reference to Builder.

Revision 1.2  2003/09/29 19:08:28  campbell
Job: 91
Added sample Java code appendix.
