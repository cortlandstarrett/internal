========================================================================

File:      $RCSfile: i1035.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:28:17 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Analysis Note

Tiger wizards and dialogs tests

Abstract
--------
This note describes the requirements for some of the Tiger wizards and dialogs
system tests.

History
-------

Document References
-------------------
[1] Issue 1035

Background
----------
There are no system tests for the various wizards and dialogs of Tiger.

Analysis
--------
Each wizard or dialog that Tiger has shall have all paths and options tested.
Each wizard and dialog that this note covers is listed below.

New xtUML Project Wizard
New xtUML Model Wizard
BridgePoint 6.1 SQL Export Wizard
Nucleus BridgePoint Model Export Wizard
Model Explorer Delete Dialog
Formalize Wizard (Covers wizards for all associations)

For each wizard and dialog a system test shall be implemented using WinRunner.

Work Required
-------------

1. New xtUML Project Wizard

For each project created below verify that the following exists in the Resource
Navigator:

.externalToolBuilders/MC-3020 Model Compiler.launch
gen/bridge.mark
   /datatype.mark
   /registry.mark
   /sys_user_co.c
   /sys_user_co.h
   /system.mark
models/
src/
.project
.xpj

Description: Tests all bad project names and the default path.

_- Select File > New > Project...
_R The Nucleus BridgePoint entry exists
_- Expand the Nucleus BridgePoint entry
_R The xtUML Project entry exists
_- Select the above entry and click next
_R The xtUML new project wizard is displayed
_R The page has the title: New xtUML Project
_R Next is disabled
_R Finish is disabled
_- Enter the following for the name in the project name field
  _- /
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- \
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- |
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- <
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- >
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- ?
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- :
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled
  _- "
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled  
  _- *
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled  
  _- .
  _R An error is given in the top of the page
  _R Finish is disabled
  _R Next is disabled  
_- Check that no files are created in the expected directory
_R No files have been created
_- Enter a name for the project in the Project name field using alphabetical
   characters
_R Next is enabled
_R Finish is enabled
_- Click Finish
_R The project is created and exists in the Model Explorer tree

Description: Tests all pages of the new project wizard and functionality of the
             available buttons.

_- Select File > New > Project...
_R The Nucleus BridgePoint entry exists
_- Expand the Nucleus BridgePoint entry
_R The xtUML Project entry exists
_- Select the above entry and click next
_R The xtUML new project wizard is displayed
_R The page has the title: New xtUML Project
_- Enter a name for the project in the Project name field using alphabetical
   characters
_R Next is enabled   
_R Finish is enabled
_- Click Next
_- Check that no files are created in the expected directory
_R No files have been created
_R The EDGE Project Structure page is displayed
_R The Create From Template button is selected
_R The Toolset is Minimalist GNU Win32 Tools
_R The Project Type is Win32 Console Application
_R Back is enabled
_R Next is enabled
_R Finish is enabled
_- Click Back
_R The xtUML Project page is displayed
_- Click Next
_- Click Next
_R The EDGE Project References page is displayed
_R All projects in the workspace are listed in the Referenced projects list
_R Back is enabled
_R Finish is enabled
_- Check that no files are created in the expected directory
_R No files have been created
_- Click Finish
_R The project is created and exists in the Model Explorer tree

Description: Tests a different location for the project

_- Select File > New > Project...
_R The Nucleus BridgePoint entry exists
_- Expand the Nucleus BridgePoint entry
_R The xtUML Project entry exists
_- Select the above entry and click next
_R The xtUML new project wizard is displayed
_R The page has the title: New xtUML Project
_- Enter a name for the project in the Project name field using alphabetical
   characters
_- Deselect the Use default box
_R The Directory field is editable
_R The Browse button is enabled
_- Enter a directory which is outside of the workspace path
_R Next is enabled
_R Finish is enabled
_- Click Finish
_R The project is created and exists in the Model Explorer tree

2. New xtUML Domain Wizard

For each domain that is created perform the following tests:
_- Open the domain
_R The Domain Package Diagram is displayed
_- Create a new subsystem
_R The new subsystem is created
_- Open the new subsystem
_R The new subsystem is displayed
_- Create a new class
_R The new class is created
_- Open the Description Editor for the class
_R The Description Editor is opened
_- Add some text and save
_- Close the Description Editor
_- Open the Description Editor for the class
_R The saved text exists
_- Open the Domain Package Diagram
_- Create a new function package
_- Add a function to the Function package
_- Open the Activity Editor for the function
_- Add the following action language: 'create object instance test of KEY;'
_- Save the Activity Editor
_R There are no parse errors
_- Close the Activity Editor
_- Open the Activity Editor for the function
_R The saved activity exists

Description: Tests that wizard will not complete when no projects exist in
workspace.

_- Select File > New > Other...
_R The Nucleus BridgePoint entry exists
_- Expand the entry
_R The new xtUML Model entry exists
_R The new xtUML Project entry exists
_- Select the new xtUML Model entry
_- Click Next
_R The new xtUML Model wizard is displayed
_R The wizard has the title: New xtUML Model
_R Finish is disabled

Note: The following tests require one xtUML project to exist in the workspace.

Description: Tests that the defaults of the wizard work.  Also tests invalid
characters.

_- Select File > New > Other...
_R The Nucleus BridgePoint entry exists
_- Expand the entry
_R The new xtUML Model entry exists
_R The new xtUML Project entry exists
_- Select the new xtUML Model entry
_- Click Next
_R The new xtUML Model wizard is displayed
_R The wizard has the title: New xtUML Model
_R The existing project is selected in the Project name pull down menu
_- Enter the following for the name in the Model name field
  _- /
  _R An error is given in the top of the page
  _R Finish is disabled
  _- \
  _R An error is given in the top of the page
  _R Finish is disabled
  _- |
  _R An error is given in the top of the page
  _R Finish is disabled
  _- <
  _R An error is given in the top of the page
  _R Finish is disabled
  _- >
  _R An error is given in the top of the page
  _R Finish is disabled
  _- ?
  _R An error is given in the top of the page
  _R Finish is disabled
  _- :
  _R An error is given in the top of the page
  _R Finish is disabled
  _- "
  _R An error is given in the top of the page
  _R Finish is disabled
  _- *
  _R An error is given in the top of the page
  _R Finish is disabled
  _- .
  _R An error is given in the top of the page
  _R Finish is disabled
_- Check that no model file has been created in the expected directory
_R No model file has been created
_- Enter a model name with alphabetical characters in the Model name field
_R Finish is enabled
_- Click Finish
_R The model is created in the selected project
_R The model contains the following
  _R Domain named according to model name entered
  _R Datatypes package
  _R External Entities package

Description: Tests the following:

No project is entered in the Project name pull down menu when no project is
selected.
An existing project is available in the pull down menu.
An non-existant model gives an error.
An import file can be used.

_- Unselect all existing projects in the workspace
_- Select File > New > Other...
_R The Nucleus BridgePoint entry exists
_- Expand the entry
_R The new xtUML Model entry exists
_R The new xtUML Project entry exists
_- Select the new xtUML Model entry
_- Click Next
_R The new xtUML Model wizard is displayed
_R The wizard has the title: New xtUML Model
_R No project is selected in the Project name pull down menu
_- Select the project in the Project name pull down menu
_- Enter a model name with alphabetical characters in the Model name field
_R Finish is enabled
_- Check the Use import file box
_R The Import file field is available
_- Enter the location of a non-existant model file
_R An error is displayed
_R Finish is disabled
_- Check that no model file has been created in the expected directory
_R No model file has been created
_- Enter the location of an existing model file
_R Finish is enabled
_- Click finish
_R A model is created in the project with the given name
_R The existing model contents exist in the new model

Description: Tests the parse on import option.

_- Select File > New > Other...
_R The Nucleus BridgePoint entry exists
_- Expand the entry
_R The new xtUML Model entry exists
_R The new xtUML Project entry exists
_- Select the new xtUML Model entry
_- Click Next
_R The new xtUML Model wizard is displayed
_R The wizard has the title: New xtUML Model
_- Select an existing project in the Project name pull down menu
_- Enter a model name with alphabetical characters in the Model name field
_R Finish is enabled
_- Check the Use import file box
_R The Import file field is available
_- Enter the location of an existing model file
_R Finish is enabled
_- Check the Parse on import box
_- Click Finish
_R The model is parsed during import
_R A model is created in the project with the given name
_R The existing model contents exist in the new model

Description: Tests that model name must be unique.

_- Select File > New > Other...
_R The Nucleus BridgePoint entry exists
_- Expand the entry
_R The new xtUML Model entry exists
_R The new xtUML Project entry exists
_- Select the new xtUML Model entry
_- Click Next
_R The new xtUML Model wizard is displayed
_R The wizard has the title: New xtUML Model
_- Select an existing project in the Project name pull down menu
_- Enter a model name of an existing model in the project in the Model name
   field
_R Finish is disabled
_R An error is displayed at the top of the wizard
_- Check that no model file has been created in the expected directory
_R No model file has been created
_- Click Cancel

3. BridgePoint 6.1 SQL Export Wizard

All exported models shall have the following tested.

_- Import the file into BridgePoint 6.1
_R All contents of the model exist in BridgePoint 6.1

Note: The following tests require one model to exist in the workspace.

Description: Tests that, with no model or project selected, the only model in
the workspace is auto selected.

_- Select File > Export
_R The BridgePoint 6.1 SQL entry exists
_- Select the above entry
_- Click Next
_R The BridgePoint 6.1 SQL wizard is displayed
_R The existing project/model is entered in the Project/Model field
_- Enter an absolute path for the export in a directory which exists
_- Click Finish
_R The file is created at the specified location

Description: Tests that a warning is given when about to overwrite an existing
model.

_- Select File > Export
_R The BridgePoint 6.1 SQL entry exists
_- Select the above entry
_- Click Next
_R The BridgePoint 6.1 SQL wizard is displayed
_- Verify that the Overwrite existing files without warning is not selected
_- Enter the location of an existing sql file
_- Click Finish
_R The Confirm Replace dialog is displayed
_- Click No
_R The BridgePoint 6.1 SQL wizard is displayed
_- Enter the location of an existing sql file
_- Click Finish
_R The Confirm Replace dialog is displayed
_- Click Yes
_R The existing sql file is overwritten

Description: Tests that a file is overwritten when a sql file already exists
with Overwrite existing files without warning being selected.

_- Select File > Export
_R The BridgePoint 6.1 SQL entry exists
_- Select the above entry
_- Click Next
_R The BridgePoint 6.1 SQL wizard is displayed
_- Check the Overwrite existing files without warning option
_- Click Finish
_R The existing sql file is overwritten

Note: The following tests require two models to exist in the workspace.

Description: Tests that all project/model combinations are available and tests
dialog for creating non-existant locations.

_- Deselect everything in the workspace
_- Select File > Export
_R The BridgePoint 6.1 SQL entry exists
_- Select the above entry
_- Click Next
_R The BridgePoint 6.1 SQL wizard is displayed
_R No project/model combinations are selected in the Project/Model pull down
   menu
_- Select the Project/Model pull down menu
_R All project/model combinations are displayed in the pull down menu
_- Select any of the combinations
_- Enter an absolute path for the export in a directory which does not exist
_- Click Finish
_R The directory creation dialog is shown
_- Click No
_R The BridgePoint 6.1 SQL wizard is displayed
_- Click Finish
_R The directory creation dialog is shown
_- Click Yes
_R The file is created at the specified location

4. Nucleus BridgePoint Model Export Wizard

All exported models shall have the following tested.

_- Import the file into Tiger
_R All contents of the model exist in the Model Explorer tree

Note: The following tests require one model to exist in the workspace.

Description: Tests that, with no model or project selected, the only model in
the workspace is auto selected.

_- Select File > Export
_R The Nucleus BridgePoint Model entry exists
_- Select the above entry
_- Click Next
_R The Nucleus BridgePoint Model wizard is displayed
_R The existing project/model is entered in the Project/Model field
_- Enter an absolute path for the export in a directory which exists
_- Click Finish
_R The file is created at the specified location

Description: Tests that a warning is given when about to overwrite an existing
model.

_- Select File > Export
_R The Nucleus BridgePoint Model entry exists
_- Select the above entry
_- Click Next
_R The Nucleus BridgePoint Model wizard is displayed
_- Verify that the Overwrite existing files without warning is not selected
_- Enter the location of an existing xtuml file
_- Click Finish
_R The Confirm Replace dialog is displayed
_- Click No
_R The Nucleus BridgePoint Model wizard is displayed
_- Enter the location of an existing xtuml file
_- Click Finish
_R The Confirm Replace dialog is displayed
_- Click Yes
_R The existing xtuml file is overwritten

Description: Tests that a file is overwritten when an xtuml file already exists
with Overwrite existing files without warning being selected.

_- Select File > Export
_R The Nucleus BridgePoint Model entry exists
_- Select the above entry
_- Click Next
_R The Nucleus BridgePoint Model wizard is displayed
_- Check the Overwrite existing files without warning option
_- Click Finish
_R The existing xtuml file is overwritten

Description: Tests the export graphics option.

_- Select File > Export
_R The Nucleus BridgePoint Model entry exists
_- Select the above entry
_- Click Next
_R The Nucleus BridgePoint Model wizard is displayed
_R The existing project/model is entered in the Project/Model field
_- Select the Export graphics box
_- Enter an absolute path for the export in a directory which exists
_- Click Finish
_R The file is created at the specified location
_- Import the exported file into Tiger
_- Double click the Domain in the Model Explorer tree
_R Nothing exists on the Domain Package Diagram

Note: The following tests require two models to exist in the workspace.

Description: Tests that all project/model combinations are available and tests
dialog for creating non-existant locations.

_- Deselect everything in the workspace
_- Select File > Export
_R The Nucleus BridgePoint Model entry exists
_- Select the above entry
_- Click Next
_R The Nucleus BridgePoint Model wizard is displayed
_R No project/model combinations are selected in the Project/Model pull down
   menu
_- Select the Project/Model pull down menu
_R All project/model combinations are displayed in the pull down menu
_- Select any of the combinations
_- Enter an absolute path for the export in a directory which does not exist
_- Click Finish
_R The directory creation dialog is shown
_- Click No
_R The Nucleus BridgePoint Model wizard is displayed
_- Click Finish
_R The directory creation dialog is shown
_- Click Yes
_R The file is created at the specified location

5. Model Explorer Delete Dialog

Note: These tests require at least two projects to exist in the workspace.

Description: Tests the delete confirmation dialog.

_- Right click on an existing project in the Model Explorer
_- Select Delete
_R The deletion confirmation dialog is displayed
_- Check the Do not delete contents box
_- Click Yes
_R The project is removed from the workspace
_R The contents of the project exist on the filesystem
_- Right click on an existing project in the Model Explorer
_- Select Delete
_R The deletion confirmation dialog is displayed
_- Check the Also delete contents box
_- Click Yes
_R The project is removed from the workspace
_R The contents of the project are removed from the filesystem

Description: Tests that contents that were not deleted can be revived by
creating a new project with the same name.

_- Select File > New > Project...
_- Select Simple > Project
_- Enter the name of the test project deleted above, which did not have
   its contents removed.
_R The contents of the original project exist in the new project.

6. Formalize Wizards

6.1 Simple Association Wizard

Note: The following test requires two classes connected with a simple
association and one non-identifying attribute in one of the classes.

(The classes are referred to as A and B, A being the class which contains the
non-identifying attribute)

Description: Tests that the Formalize entry does not exist when there are no
identifying attributes.  Tests the defaults of the wizard.

_- Right click on a simple association between two classes
_R The Formalize entry does not exists
_- Right click on the attribute in Model Explorer
_- Select Add to identifier
_- Click Finish
_- Right click on the simple association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R The Class field is pre-filled with class A
_R Next is enabled
_R Finish is enabled
_- Click Next
_R The Class field is pre-filled with identifier 1
_R Back is enabled
_R Finish is enabled
_- Click Back
_R The previous page is displayed
_- Click Finish
_R The association is formalized placing the referential attribute in class B
_- Right click on the simple association and select Unformalize
_R The referential attribute is removed from class B
_- Right click on the simple association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R The Class field is pre-filled with class A
_R Next is enabled
_R Finish is enabled
_- Click Next
_R The Class field is pre-filled with identifier 1
_R Back is enabled
_R Finish is enabled
_- Click Finish
_R The association is formalized placing the referential attribute in class B

Description: Tests that identifier field is not pre-filled when more than one
identifier.  Also tests that the correct attribute is displayed.

_- Add a new attribute to class A
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 2
_- Click Finish
_- Add a new attribute to class A
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 3
_- Click Finish
_- Right click on the simple association and select Unformalize
_- Right click on the simple association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R The Class field is pre-filled with class A
_R Next is enabled
_R Finish is enabled
_- Click Next
_R The Class field is not pre-filled with an identifier
_R Finish is disabled
_- Open the Class pull down menu
_R Identifiers 1-3 exist
_- Select identifier 2
_R Finish is enabled
_- Click Finish
_R The referential attribute with identifier 2 is displayed class B
_- Right click on the simple association and select Unformalize
_- Right click on the simple association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R The Class field is pre-filled with class A
_R Next is enabled
_R Finish is enabled
_- Click Next
_R The Class field is not pre-filled with an identifier
_R Finish is disabled
_- Open the Class pull down menu
_R Identifiers 1-3 exist
_- Select identifier 3
_R Finish is enabled
_- Click Finish
_R The referential attribute with identifier 3 is displayed in class B

Description: Tests that when more than one identifier exists in an association
the Class field is not pre-filled.

_- Right click on the simple association and select Unformalize
_- Add a new attribute to class B
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 1
_- Click Finish
_- Right click on the simple association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R The Class field is not pre-filled with any class
_R Next is disabled
_R Finish is disabled
_R Both classes exist in the Class pull down menu
_- Select the other class from the Class pull down menu
_R Next is enabled
_R Finish is enabled
_- Click Finish
_R The referential attribute is displayed in class A

Description: Tests that when simple association is reflexive two classes exist
in the Class field.

_- Add a reflexive association to class B
_- Right click on the association
_R Formalize item is available
_- Select Formalize
_R No class is listed in Class field
_- Open the Class field pull down menu
_R class B is listed twice
_- Select first instance of class B
_R Finish is enabled
_- Click Finish
_R A second referential attribute is added to class B

Description: Tests multiple attributes in the same identifier.

_- Right click on the simple association and select Unformalize
_- For each attribute in class A
  _- Right click on the new attribute and select Add to identifier
  _- Select identifier 1
  _- Click Finish
_- Right click on the simple association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R Next is enabled
_- Click Next
_- Select identifier 1 from pull down menu
_- Click Finish
_R All three referential attributes are displayed in class B

6.2 Subtype/Supertype Associations

Note: The following tests require one supertype class and two subtype classes
connected with a subtype/supertype association.  The supertype class must have
one non-identifying attribute

Description: Tests that Formalize item is disabled when no identifying
attribute.  Also tests the defualts of the wizard.

_- Right click on the subtype/supertype association
_R The Formailze item is not available
_- Right click on the attribute in Model Explorer
_- Select Add to identifier
_- Click Finish
_- Right click on the subtype/supertype association
_R The Formailze item is available
_- Select Formalize
_R The Formalize wizard is displayed
_R The Identifier field is pre-filled
_R Finish is enabled
_- Click Finish
_R The referential attribute is displayed in both subtype classes
_- Right click on the association and select Unformalize
_- Add a new attribute to the supertype
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 2
_- Click Finish
_- Add a new attribute to the supertype
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 3
_- Click Finish
_- Right click on the subtype/supertype association
_R The Formailze item is available
_- Select Formalize
_R The Formalize wizard is displayed
_- Select the Identifier pull down menu
_R The menu contains the three identifiers
_- Click Finish
_R The referential attribute is displayed in both subtype classes

Description: Tests multiple attributes in the same identifier.

_- Add a new attribute to the supertype class
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 1
_- Click Finish
_- Add a new attribute to the supertype class
_- Give the attribute a unique name
_- Right click on the new attribute and select Add to identifier
_- Select identifier 1
_- Right click on the subtype/supertype association and select Unformalize
_- Right click on the supertype association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_R Identifier 1 is selected
_R Finish is enabled
_- Click Finish
_R All three referential attributes are displayed in the subtype classes

6.3 Linked Association Formalize Wizard

Note: These tests require three classes to exist, referred to as A,B and C.

Description:
Tests that Formalize is unavailable in the following cases:

No attributes in either class.
No identifying attributes in either class.
One class with an identifying attribute.

Also tests the defaults of the wizard.

_- Right click on the linked association
_R The Formalize item does not exist
_- Add a new attribute to class A
_- Give the attribute a unique name
_- Click Finish
_- Add a new attribute to class B
_- Give the attribute a unique name
_- Click Finish
_- Right click on the linked association
_R The Formalize item does not exist
_- Right click on the attribute in A in Model Explorer
_- Select Add to identifier
_- Click Finish
_- Right click on the linked association
_R The Formalize item does not exist
_- Right click on the attribute in B in Model Explorer
_- Select Add to identifier
_- Click Finish
_- Right click on the linked association
_R The Formalize item exists
_- Select Formalize
_R The Formalize wizard is displayed
_R The Identifier fields for each class are filled
_R Finish is enabled
_- Click Finish
_R The referential attributes from both classes are placed in class C
_- Right click on the association and select Unformalize
_- Perform the following for both classes A and B
  _- Add a new attribute to the class
  _- Give the attribute a unique name
  _- Right click on the new attribute and select Add to identifier
  _- Select identifier 2
  _- Click Finish
  _- Add a new attribute to the class
  _- Give the attribute a unique name
  _- Right click on the new attribute and select Add to identifier
  _- Select identifier 3
  _- Click Finish
_- Right click on the linked association
_R The Formalize item exists
_- Select Formalize
_R The Formalize wizard is displayed
_R The Identifier fields for each class contains all three identifiers
_R Finish is enabled
_- Click Finish
_R The referential attributes from both classes are placed in class C

Description: Tests multiple attributes in the same identifier.

_- Right click on the linked association and select Unformalize
_- For each attribute in classes A and B
  _- Right click on the new attribute and select Add to identifier
  _- Select identifier 1
  _- Click Finish
_- Right click on the linked association
_R The Formalize entry exists
_- Select the entry
_R The Formalize Wizard is displayed
_- Select identifier 1 from pull down menu
_R Finish is enabled
_- Click Finish
_R All six referential attributes are displayed in class C

Acceptance Test
---------------
The acceptance test is 100% code coverage.

End
---

$Log: i1035.ant,v $
Revision 1.1  2009/09/03 18:28:17  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.2  2009/01/01 23:13:39  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.1.30.1  2008/12/31 16:10:53  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.1  2005/06/28 21:01:50  tlondon
Job: 1035

Renaming

Revision 1.2  2005/06/10 22:02:07  tlondon
Job: 1035

Completed according to review minutes

Revision 1.1  2005/06/10 19:16:32  tlondon
Job: 1035

Initial

