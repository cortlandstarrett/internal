========================================================================

File:      $RCSfile: i1000.ant,v $
Version:   $Revision: 1.1 $
Modified:  $Date: 2009/09/03 18:28:17 $

(c) Copyright 2005-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

Tiger Project Analysis Note
Properties tests

Abstract
--------
This note lays out the necessary tests needed for the properties view.

History
-------

Document References
-------------------
[1] Issue 1000

Background
----------
Currently there are only junit tests in place for the properties view.  The
philosophy for system tests is to test all accessible user inputs.  The current
unit tests do not apply this philosophy.


Analysis
--------
All elements in the Nucleus BridgePoint tool, which have a properties adapter,
must have all of their available properties tested.  Each available property
must also have all of its possible values changed and verified.  Each element
and its available properties will be determined from an archetype which
resembles the archetype used to create the properties code.  The archetype shall
describe the type of property and the possible values of that property.

Work Required
-------------
1. Create archetype to generate list of available properties

The archetype shall use the ooaofooa_heirarchy to determine all of the elements
of the core model.  For each element's attributes an entry will be added. If the
attribute is derived or read-only the archetype shall state that the value will
only be verified.  Since the following types of attributes are not visible in
the properties they will be excluded from the generated list:

unique_id
same_as<Base_Attribute>

The archetype will state the following for the possible values:

boolean - true,false
string - A-Z a-z 0-9 !@#$%^&*()-_=+{}[]|\"';:?/><,.
integer - Either Integer.MIN_VALUE - Integer.MAX_VALUE or if available
		  ${attr.Descrip:min_value} - ${attr.Descrip:max_value} 
enumeration - all available values in the enumeration (integer enumerations are
			  special cased, the values are determined from the description)
			  
2. Create test model

A test model needs to be created which will contain an element for all possible
properties in all scenarios.

3. Add system test for properties

A test shall be added using WinRunner which shall test all of the elements
listed by the archetype created in 1.

Acceptance Test
---------------
The acceptance test shall be 100% properties code coverage.

End
---

$Log: i1000.ant,v $
Revision 1.1  2009/09/03 18:28:17  rmulvey
job:dts0100616734
Archive documentation and other development notes following the R3_0_0 release.  These are being archived under Documentation/internal/technical/archive/20090903

Revision 1.3  2009/01/01 23:13:39  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.30.1  2008/12/31 16:10:53  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2005/06/08 17:37:02  tlondon
Job: 1000

Added archetype specification

Revision 1.1  2005/06/01 18:52:08  tlondon
Job: 1000

Initial

