========================================================================

File:      $RCSfile$
Version:   $Revision$
Modified:  $Date$

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Baby-step promotion 1: Implement UML 2.0 Component diagrams in BridgePoint

1. Abstract
-----------
During the process of adding support for formal modeling of components [2], 
several intermedate promotions are planned.  This is the first.

2. History
----------
The goal of this baby-step promotion is to capture the meta-model changes 
needed to complete the formalization of component diagrams with minimal impact 
on current component diagram behavior.

3. Document References
----------------------
[1] Bugzilla item 2938
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=2938
[2] Bugzilla item 1687
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=1687
[3] <CVS>/Documentation/internal/technical/notes/i1687.ant
[4] <CVS>/Documentation/internal/technical/notes/i1687.dnt
[5] <CVS>/Documentation/internal/technical/notes/i2924.ant
    Add new OAL syntax for Components

4. Background
-------------
See [2], [3], [4], and [5]

5. Design
---------
5.1 Add support for formalization to the Component SS
5.1.1 Introduce Interface Reference (C_IR)
5.1.1 Introduce Delegation (C_DG)
5.1.2 Introduce Ports (C_PO)
5.1.3 Introduce the Component Packaging SS
5.1.4 Introduce the Component Nesting SS
5.2 Update OAL to account for the meta-model changes.
5.3 Update PEI data to account for the meta-model changes

6. Implementation Comments
--------------------------

7. Unit Test
------------
_- Draw one of each of the elements (Comp Diagram, Comp, Interface Diag, Interface)
_R All elements are displayed correctly

_- For each of the elements delete from ME
_R Graphics removed

_- For each Deleted element undo the deletion
_R The element's graphics are restored
    
_- Delete an element on the system package
_R The element's graphics are removed

x_ Formalization tests
_- Create a new project and model named CompTest1
_- Create an interface diagram (IntrfDiag1)
_- Create an interface (Interface1)
_- Create a component diagram (CompDiag1)
_- Create a component (Comp1) with a provided interface
_- Right click on the provided interface
_R The Formalize... menu entry is available
_- Click the Formalize... menu entry
_R The Formalize wizard is displayed
_R There is one entry in the list box (IntrfDiag1)
_- Choose IntrfDiag1
_- Click Next
_R A list of interfaces is shown
_- There is only 1 interface in the list box (Interface1)
_- Click Finish
_- Right click on the provided interface
_R The Unformalize menu entry is shown

- Continueing from the same model (CompTest1)
_- Create a new Component Diagram (CompDiag2)
_- Create 2 new components in this diagram (Comp2, and Comp3)
_- Draw a provided interface from Comp2 and a required interface from Comp3 so they connect
_- Right click on the provided interface
_R The Formalize... menu entry is available.  Select it. (the list box shows 1 entry - IntrfDiag1)
_- select cancel
_- Right click on the required interface
_R The Formalize... menu entry is available.  Select it. (the list box shows 1 entry - IntrfDiag1)
_- Choose the IntrfDiag1
_- Select Next
_- The interface list box shows 1 entry (Interface 1)
_- Click Finish
_R On the canvas the Provided interface is now named "Interface1"
_R Both the provided and required interfaces are formalized
_- Right click on the required interface
x_R The Unformalize menu entry is shown
_- Select the Unformalize menu entry
_R The original name of the provided interface is shown (Unnamed Interface)
_R Both the provided interface and required interfaces are unformalized


-- Continueing with the same model  (CompTest1) - Formalize Used Components
_- Formalize the Interface in CompDiag2 between Comp2 and Comp3
_- Create a new component diagram (Compdiag3)
_- Create 2 new used components in CompDiag3 
_- Assign UsedComp1 to Comp2 and assign UsedComp2 to Comp3
_- Draw a provided interface and a required interface between the two used
   components
_- Right click on the provided interface
_R The Formalize... menu item is shown
_- Select the menu entry
_R The Formalize wizard is shown
_R A list is shown which contains the interface that the assigned to component's
   interface is formalized against (Interface1)
_- Click Finish
_R The provided interface and required interface are formalized

-- Continueing with the same model  (CompTest1)- Formalize with Multiple Interfaces
_- Create a new Interface in IntrfDiag1 named Interface2
_- In CompDiag2 create 2 new Components.  Name them Comp4 and Comp5
_- Create a new provided interface off of Comp4
_- Formalize this interface to IntrfDiag1, Interface1
_- Create a new required interface off of Comp5
_- Formalize this required interface to IntrfDiag1, Interface2
_- In CompDiag3 create 2 new used components
_- Assign one to CompDiag2:Comp4 and the other to CompDiag2:Comp5
_- Draw a provided interface and a required interface between the two used
   components.  The provided interface should come from the Used Component Assigned to Comp4
   and the required interface should come from the Used Component Assigned to Comp5
_- Right click on the provided interface
_R The Formalize... menu item is NOT shown
_- Right click on the required interface
_R The Formalize... menu item is NOT shown
_- Delete the required interface
_R The provided interface is not deleted
_- Right click on the provided interface
_R The Formalize... menu item is shown
_- Formalize the provided interface 
_- Attempt to redraw the required interface, connecting it to the provided interface
_R The required interface was not drawn
_- Draw the required interface to whitespace
_R The required interface was drawn
_- Right click on the required interface
_R The Formalize... menu item is shown
_- Select the menu entry
_R The Formalize wizard is shown
_R A list is shown with the interface that the assigned to component's required
   interface is formalized against (Interface2)
_- Cancel the wizard

-- Multiple components and interfaces
_- Create a new InterfaceDiagram named IntrfDiag2
_- Create three interfaces in IntrfDiag2 named (A, B, C)
_- Create a new component diagram named CompDiag4
_- Create three components (A, B, C)
_- Create a provided interface on component A
_- Formalize the provided interface with interface A
_- Create a required interface on components B and C
_- Formalize the requirement from component B with interface C
_- Formalize the requirement from component C with interface A
_- Create a new Component Diagram (CompDiag5)
_- Create three used components in CompDiag5
_- Assign the used components to each of the components created above 
_- Draw a provided interface from the used component which represents component A
_- Right click on the provided interface
_R The Formalize... menu item is shown
_- Select the menu entry 
_R The Formalize wizard is shown
_R A list is shown with the interface that the assigned to component's required
   interface is formalized against (interface A)
_- Click Finish
_R The provided interface is formalized
_- Draw a required interface from the used component representing component C
   to the provided interface connected to the used component representing
   component A
_R The required interface is drawn correctly
_- Right click on the required interface
_R The Unformalize menu entry is available

_- Attempt to draw a required interface from the used component representing component B
   to the provided interface.
_R The required interface is not drawn
_- Right click on the provided interface and select Unformalize
_R The provided and required interfaces are unformalized
_- Draw a required interface from the used component representing component B
   to the provided interface.
_R The required interface is drawn
_- Right click on the required interface
_R The Formalize menu entry is not available
_- Right click on the provided interface
_R The Formalize menu entry is not available
_- Delete the required interface coming from the used component which represents
   component B
_- Create a new component (D) in CompDiag5
_- Draw a required interface from component D to the provided interface
_R The required interface is drawn correctly
_- Right click on the new required interface
_R The Formalize... menu entry is available
_- Select the menu entry
_R The Formalize wizard is shown
_- Select the interface package (IntrfDiag2), and click Next
_R The possible interface is shown in the list ( interface A)
_- Click Cancel
_- Draw a required interface from the used component representing component B to
   the provided interface
_- Right click the required interface from component D
_R The Formalize... menu entry is not available
_- Draw a provided interface from the new component (D)
_- Formalize the provided interface with interface B
_- Draw a requirement from the used component representing component C to
   the new provided interface
_R The required interface is not drawn
_- Unformalize the provided interface
_- Redraw the required interface
_R The required interface is drawn


_- In CompDiag5 rename the provided interface from Component D to "test"
_- In CompDiag5 rename the required interface from the used component representing C to "test"
_R The name "test" is displayed on the provied interface, and no name is on the required interface.
_- In CompDiag5 rename the required interface from the used component representing C to "test1"
_R Both names are displayed
_- Right click on "test" and select formalize.  Compete the wizard to formalize this interface to 
   IntrfDiag2:A
_R The name of the provided interface now reads "A" and there is no name on the required interface side.


_- Create a UDT at the system level (make it a SDT named systemSDT, with 1 member (an int named myint)).
_- Select "myint"
_- Expand the list in properties for the core type
_R All system level dts are listed
_- Select Interface1:foo:param1 from ME.  In properties select the "Type" list box
_R The new "systemSDT" type is listed

_- Create a UDT named domainSDT under the CompTest1 domain.  The domainSDT should be an SDT with one 
   attribute, an integer named "myint".
_- Select a UDT under a domain
_- Expand the list in properties for the core type
_R All dts defined in the domain are listed
_R No system level dts are listed

-- Check operation values and parameter values
_- Create an interface operation in Interface1 named foo.
_- Create a parameter named param1 for operation foo.
_- Select the operation in model explorer
_- Expand the list in properties for the return type
_R All system level defined data types are listed
_- Select the parameter
_- Expand the list in properties for the return type
_R All system level defined data types are listed

-- Check persistence (continueing with the same model)
_- Exit from the tool and  Restart
_R No errors in the error log from restart
_- Open each of the diagrams
_R No Orphanded graphics
_- Open CompDiag5 and draw a required and provided interface from the component assigned to a
_R Each of the interfaces is drawn successfully


8. Code Changes
---------------
com.mentor.nucleus.bp.core/icons/metadata/ProvidedSignal.gif
com.mentor.nucleus.bp.core/icons/metadata/RequiredSignal.gif
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Body.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Body/Body.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Provided Operation Body/Provided Operation Body.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Provided Signal Body/Provided Signal Body.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Required Operation Body/Required Operation Body.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Required Signal Body/Required Signal Body.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component/Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Component Diagram.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Component Diagram/Component Diagram.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Component Diagram Element/
    Component Diagram Element.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Component Diagram in Component Diagram/
    Component Diagram in Component Diagram.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Component In Diagram/Component In Diagram.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Interface In Diagram/Interface In Diagram.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Diagram/Used Component/Used Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Nesting/Component Nesting.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Nesting/Component in Component/
    Component in Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Nesting/Domain As Component/Domain As Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Nesting/Imported Component/Imported Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Packaging/Component Packaging.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Packaging/Component Package/Component Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Packaging/Component Package in Package/
    Component Package in Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Delegation/Delegation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Domain as Component/Domain as Component.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Executable Property/Executable Property.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Interface/Interface.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Interface Reference/Interface Reference.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Port/Port.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Provision/Provision.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Requirement/Requirement.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Satisfaction/Satisfaction.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/
    Signal Provisions and Requirements.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Provided Executable Property/
    Provided Executable Property.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Provided Operation/
    Provided Operation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Provided Signal/
    Provided Signal.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Required Executable Property/
    Required Executable Property.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Required Operation/
    Required Operation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Required Signal/
    Required Signal.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Datatypes/Datatypes.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Data Type/Data Type.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Data Type Package/Data Type Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    Domain/Domain.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Domain/
    System Model/System Model.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/Context Menu Entry Functions/Context Menu Entry Functions.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/OAL Validation Functions/OAL Validation Functions.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Functions/OAL Validation Utility Functions/
    OAL Validation Utility Functions.xtuml
com.mentor.nucleus.bp.core/sql/context_menu.pei.sql
com.mentor.nucleus.bp.core/sql/ooaofooa_hierarchy.pei.sql
com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/OoaofooaBase.java
com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/ui/.cvsignore
com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/util/EditorUtil.java

com.mentor.nucleus.bp.core.test/arc/create_action_test.arc
com.mentor.nucleus.bp.core.test/arc/create_context_menu_tests.arc
com.mentor.nucleus.bp.core.test/arc/create_dispose_test.arc

com.mentor.nucleus.bp.io.mdl/sql/file_io.pei.sql
com.mentor.nucleus.bp.io.mdl/sql/stream.pei.sql

com.mentor.nucleus.bp.io.mdl.test/expected_results/models/canvastest.xtuml

com.mentor.nucleus.bp.ui.canvas/models/com.mentor.nucleus.bp.ui.canvas/
    ooaofgraphics/Datatypes/Datatypes.xtuml
com.mentor.nucleus.bp.ui.canvas/src/com/mentor/nucleus/bp/ui/canvas/
    CanvasEditor.java
com.mentor.nucleus.bp.ui.canvas/src/com/mentor/nucleus/bp/ui/canvas/Cl_c.java
com.mentor.nucleus.bp.ui.canvas/plugin.xml

com.mentor.nucleus.bp.ui.explorer/sql/UITree.pei.sql

com.mentor.nucleus.bp.ui.text/arc/create_util.inc
com.mentor.nucleus.bp.ui.text/src/com/mentor/nucleus/bp/ui/text/activity/
    TextParser.java

MC-Java/java.arc
MC-Java/model_consistency_functions.inc


End
---

$Log$
Revision 1.3  2009/01/01 23:12:57  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.4.1  2008/12/31 16:10:00  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2007/08/31 21:26:35  rmulvey
Job:2673
Moved the notes associated with closed issue into Documentation/technical/archive/20070830/notes

Revision 1.2  2007/05/31 22:42:00  rmulvey
Job:2938
Populated the code changes section.

Revision 1.1  2007/05/31 19:57:40  rmulvey
Job:2938
Inttroduced
