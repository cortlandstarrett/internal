========================================================================

File:      $RCSfile$
Version:   $Revision$
Modified:  $Date$

(c) Copyright 2007-2009 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Allow deletion of orphaned graphics


1. Abstract
-----------
We have worked hard to ensure that graphics do not get orphaned. However, there
are still failure modes where this can occur. Also, Team operations can cause
this to happen in normal use.

Currently orphaned graphics are read only. The user can do nothing with them, so
they are doomed to be left on the diagram indefinitely. This is understandably
unpopular with our users.  This note describes how we will support deleting
orphaned graphics.

2. History
----------

3. Document References
----------------------
[1] Bugzilla item 2585
    http://tucson.wv.mentorg.com//bugzilla/show_bug.cgi?id=2585
[2] i2585 Design Note.  Doc/internal/technical/notes/i2585.dnt

4. Background
-------------
Orphaned graphics are a nuisance to the user.  They are just annoying to have
laying around on a model.  Users hate them.

5. Design
---------
The implementation was carried out as specified in the design.

6. Implementation Comments
--------------------------
6.1     The implementation of CL::addToSelection() was changed slightly from
        the design in [2] due to an error found during unit testing.  It was
        changed from:

        public static void Addtoselection(final Object Element) {
            GraphicalElement_c ge = (GraphicalElement_c) Element;
            if(ge.getRepresents() == null) {
                Selection.getInstance().addToSelection(Element);
            } else {
                Selection.getInstance().addToSelection(ge.getRepresents());
            }
        }

        to

        public static void Addtoselection(final Object Element) {
     +      if ( Element instanceof GraphicalElement_c ) {
                GraphicalElement_c ge = (GraphicalElement_c) Element;
                if(ge.getRepresents() == null) {
                    Selection.getInstance().addToSelection(Element);
                } else {
                    Selection.getInstance().addToSelection(ge.getRepresents());
                }
     +      } else {
     +          Selection.getInstance().addToSelection(Element);
     +      }
        } // End addToSelection

6.2     The corresponding CL::removeFromSelection() was changed in the same way.

6.3     I modified the expected results for the "ModifyNonFullyLoadedModel_1"
        test model in bp.core.test.  The change was required due to the
        addition of the "convertToInstance()" function to the Graphical Element
        class.

7. Unit Test
------------
7.1     All JUnit test suites must pass

7.2     Retrieve the Ericcson sample model from [1]
7.2.1   Create a new project using the model
7.2.2   Verify the empty boxes on the Domain Package Diagram can be deleted
7.2.3   Use Undo to restore the boxes
7.2.4   Use Redo to delete the boxes again
7.2.5   Export the model
7.2.6   Create a new project using the newly exported model
7.2.7   Verify the new model is clean of unwanted graphics

7.3     Retrieve the mc3020-meta sample model from [1]
7.3.1   Create a new project using the model
7.3.2   Verify the unconnected relationships lines on the Translation Extensions
        Subsystem Diagram can be deleted
7.3.3   Use Undo to restore the lines
7.3.4   Use Redo to delete the lines again
7.3.5   Export the model
7.3.6   Create a new project using the newly exported model
7.3.7   Verify the new model is clean of unwanted graphics


8. Code Changes
---------------
The work for this issue is in branch Review-i2585:
---------------------------------------------------
com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/common/
Transaction.java
com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/util/
TransactionUtil.java

com.mentor.nucleus.bp.ui.canvas/models/com.mentor.nucleus.bp.ui.canvas/
ooaofgraphics/Graphical Data/Graphical Element/Graphical Element.xtuml
com.mentor.nucleus.bp.ui.canvas/src/com/mentor/nucleus/bp/ui/canvas/
CanvasCopyAction.java
com.mentor.nucleus.bp.ui.canvas/src/com/mentor/nucleus/bp/ui/canvas/
CanvasEditor.java
com.mentor.nucleus.bp.ui.canvas/src/com/mentor/nucleus/bp/ui/canvas/Cl_c.java


The following change was already checked into HEAD inadvertantly:
-----------------------------------------------------------------
com.mentor.nucleus.bp.core.test/expected_results/ModifyNonFullyLoadedModel_1/
ModifyNonFullyLoadedModel_1-5

End
---

$Log$
Revision 1.3  2009/01/01 23:12:57  rmulvey
Job:4060
Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.

Revision 1.2.4.1  2008/12/31 16:10:01  rmulvey
Job:4060
This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.

Revision 1.2  2007/08/31 21:26:35  rmulvey
Job:2673
Moved the notes associated with closed issue into Documentation/technical/archive/20070830/notes

Revision 1.1  2007/05/30 13:54:48  kbrown
Job:2585
Completed implementation note.
