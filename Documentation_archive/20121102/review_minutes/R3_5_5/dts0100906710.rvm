Review Meeting Minutes

#  $RCSfile: dts0100906710.rvm,v $
#  $Revision: 1992 $

#  Reviewed: dts0100906710.ant, v1.4
#  Start:    12:00 EDT
#  End:      13:24
#  Elapsed:  84 min

#  Present:  CS, KB, CM, TL, BM, NM, JRW

-- Number Type  Who Section    Comment
x- 01     min   KB  3          [3] - Note that this is not created yet
x- 02     min   BM  3          [2] - Move to CVS/Documentation/external, some-
    where not Cort-specific
x- 03     min   BM  5.1        
    o There are usage testing benefits to having stuff in multiple repositories 
        (CVS, SVN, git)
    o Update the note with alternatives
    o Some feel that having code easily migrateable from private to public git
        repos is a key beneficial. 
o- 04 striken
x- 05     min   CS  5.2         Note that this is a blocker for allowing non-
    Mentor users access to the repository
x- 06     min   CS  6           Allowing the users to build the source will 
    require the public to have access to generator+MC-Java somehow.  Explore.
We will likely make a binary gen_erate.exe with mcjava imbedded.
x- 07     min   KB  6.1         Do we want to use a pay-per-use private github repository, or should IT host our
  private git repository?
    Answer: public github
x- 08     min   KB  6.3.1       Need to expand and fix this analysis
x- 09     min   CS  7.3         We need to assign a person to learn git and set
    up training for the rest of the team.  And not have everyone learn on their
    own.         
Cort and Keith are doing this.  Cort will give training.
x- 10     min   KB  5.3         How do we manage bugs for our product versus the
    OSS pieces?  Seems the OSS piece will use the github tracker while our 
    product/private bugs may need to still use CQ to tie into CSD SR mechanisms...
All of our work will be on github.  We can have private issue lists.
x- 11     min   CS  general     Send the doc to Robert Rice for comments
x- 12     min   BM  6.4         We need to think about how we carry-on 
    development as we build this split code base.  I think we should strive to 
    define a process to split the code base rather then split it and work on 
    them independently.  By doing this we can work independently as needed, but 
    then when the time comes simply flip the switch and move over to the new 
    way.
Development will not appear to be split.  We will be working on some public
parts and some private parts.  We will use the same approach for both.
x- 13     min   BM  6.6.1       Remove "Some of"
x- 14     min   KB  general     Address build and install
    o Nightly build support / infrastructure changes.  Is this available 
      internally only, or external as well?  There's work to do either way.
    o Installer - what are we installing, delivery via eclipse update mechanism?
x- 15     min   CM  5.4         Address pre-requirements such as GP migration,
    MC-Java upgrade, etc.
x- 16     min   KB  7.4.1       numbering issue
x- 17     min   KB  7.4.2       Mention the MC plugins and mention that any 
    split that happens for verifier needs to also happen for MCs.  
x- 18     min   BM  7.5.1       Change "Remove the license hooks" to "Refactor
    the license hooks"
x- 19     min   BM  7.6.2       Strike "Starting with new_start.chk"
x- 20     min   BM  7.2.3       Along with the given change, there is a process
    document for using the tool that will need to be updated.
   
   
No major observations, a re-review is not required.

---
End

$Log: dts0100906710.rvm,v $
Revision 1.3  2012/10/05 20:26:16  cstarret
job:dts0100906710
updated ant in response to review

Revision 1.2  2012/08/07 17:24:41  kbrown
job:dts0100906710
Update ending time.

Revision 1.1  2012/08/07 17:23:55  kbrown
job:dts0100906710
Analysis note review minutes.

