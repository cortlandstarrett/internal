========================================================================

File:      $RCSfile: dts0100885935.int,v $
Version:   $Revision: 1991 $
Modified:  $Date: 2012-11-02 14:29:43 -0700 (Fri, 02 Nov 2012) $

(c) Copyright 2007-2012 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Component Reference paste broken

1. Abstract
-----------
This note describes the changes required to address a problem where component
resolution is not working on paste of a component reference.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100885935
[2] ClearQuest DEI dts0100774507 Manual copy/paste testing from dts0100770305

4. Background
-------------
[2] discovered a defect where pasting a component reference (assigned) resulted
in a component reference that was unassigned with not imported interface
references.

5. Requirements
---------------
Component references shall properly resolve components on paste.

6. Work Required
----------------
6.1 Use Packagable Element associated with potential component

The problem was caused by the tool not resolving an interface associated with
the candidate Component.  The resolution code was making use of a Packageable
Element that was associated with the proxy instance for the referred to
Interface Reference.  The proxy elements in this case are not completely hooked
up, meaning they have no parent Package or Component.  The resolution methods
required this data to capture located elements.  Rather than use the proxy
Interface Reference the OAL is modified to pass in the Packageable Element id
for the potential Component that we are looking to match against.  During
component resolution we pass this ID unless we are dealing with specialized
packages in which case the Packagable Element is not present.  In this case we
simply pass an empty ID.

6.2 Ignore PMC comparison during RGO location

In ModelStreamProcessor we currently locate RGOs using the generated functions
in PersistenceHierarchyMetaData.  In the case of a component reference pasted
into a component the PMCs are considered the same and therefore excluded as
RGOs.  For resolution during paste we should never worry about the PMCs when
locating RGOs as we know that if there is a proxy and a resolution method
present we need to call that method.

To address this the call to getExternalRGOs is modified to pass a parameter
which tells the infrastructure not to consider the PMCs at all.

7. Implementation Comments
--------------------------

8. Unit Test
------------
_- Run all io.mdl tests
_R All tests pass
_- Run Canvas CCP tests
_R All tests pass
_- Run test in [2]
_R Test passes

9. Code Changes
---------------
Branch name: Review-dts0100885935

com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Component Library/Component Reference/Component Reference.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Interface Reference/Interface Reference.xtuml
com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/
    common/ModelStreamProcessor.java
s
End
---

$Log: dts0100885935.int,v $
Revision 1.3  2012/04/30 23:52:45  tlondon
Job: dts0100885935

Update int

Revision 1.2  2012/04/30 23:44:07  tlondon
Job: dts0100885935

Update int

Revision 1.1  2012/04/30 20:00:03  tlondon
Job: dts0100885935

Add int
