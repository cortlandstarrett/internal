========================================================================

File:      $RCSfile: dts0100921939.ant,v $
Version:   $Revision: 1991 $
Modified:  $Date: 2012-11-02 14:29:43 -0700 (Fri, 02 Nov 2012) $

(c) Copyright 2007-2012 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Analysis Note
Enable component reassignment

1. Abstract
-----------
This note discusses the choices that we have regarding component reassignment.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100921939
[2] ClearQuest DEI dts0100921938 - Disable component reassignment

4. Background
-------------
Testing for release 3.6.0 has uncovered bugs in the component reassignment
logic.  These bugs were bad enough to warrant temporarily disabling of the
feature.  The feature was disabled in [2].

5. Requirements
---------------
5.1 Make decision on whether or not to enable the feature again.

6. Analysis
-----------
6.1 Enable the feature

This feature was originally designed to allow a modeler to "replace" an existing
component reference with one that was compatible.  It was thought that such a
feature would be useful in testing multiple components in the same wiring
situation.

The benefits of this approach are:

1. A few mouse button clicks to replace a referenced component with another,
   i.e, no need to unassign, assign, and wire

The problems with this approach are:

1. Complex OAL to determine compatible components must be maintained
2. Complex OAL to perform replacement must be fixed and maintained
3. Replacement involves a deletion which could require CM interaction
4. New unit tests required

6.2 Disable the feature and remove the logic

If the problems stated in 6.1 above are compelling enough we shall remove the
feature permanently.  With this approach the changes made in [2] shall be left
in place.  In addition to leaving those changes all logic associated with the
feature shall be removed.  Without this feature similar functionality still
exists.  The same outcome can effectively be achieved by doing one of the
following:

- Copy/Paste an existing wiring
  - Unassign component reference (copy of original) of interest
  - Assign component reference to new component
  - Rewire
- Create a new component reference
  - Assign component reference to new component
  - Delete old component reference
  - Rewire with new component reference

The benefits of this approach are:

1. The complex OAL supporting this feature no longer needs to be maintained
2. No unit tests required

The problems with this approach are:

1. More steps required to "replace" an existing component reference wiring.
2. The tool supports "replace" in other cases therefore we introduce an
   inconsistency.

6.3 Leave the feature disabled and leave the logic in place

This approach is already in the production code.  The only difference between
this approach and the one in 6.2 above is that the logic is left in place.

The benefits of this approach are:

1. We can at a later time re-evaluate the feature and add it back if desired
2. No unit tests required

The problems with this approach are:

1. The problem still exists, just prevented.
2. The tool supports "replace" in other cases therefore we introduce an
   inconsistency.
   
7. Work Required
----------------
None.

8. Acceptance Test
------------------
None.

End
---

$Log: dts0100921939.ant,v $
Revision 1.2  2012/10/17 15:15:15  tlondon
Job: dts0100921939

Add inconsistency problem

Revision 1.1  2012/10/17 13:37:38  tlondon
Job: dts0100921939

Add analysis

