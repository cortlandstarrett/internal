========================================================================

File:      $RCSfile: dts0100617373.dnt,v $
Version:   $Revision: 1991 $
Modified:  $Date: 2012-11-02 14:29:43 -0700 (Fri, 02 Nov 2012) $

(c) Copyright 2007-2010 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
ARXML Software Component Template Generation


1. Abstract
-----------
This note describes the design for a BridgePoint tool plug-in to support the
generation of ARXML software component templates from their corresponding
component models.

2. History
----------
N/A

3. Document References
----------------------
[1] ClearQuest DEI dts0100617373
[2] ClearQuest DEI dts0100580443 (BP AUTOSAR)
[3] ClearQuest DEI dts0100594036 (AUTOSAR changes for SeatHeater demo)

[4] xtUML to AUTOSAR transformations document
http://beta.wv.mentorg.com/tenmile_svn/tenmile/trunk/documentation/notes/dts0100581974/xtUML_AUTOSAR_transformations.doc
[5] AUTOSAR software component template
eRoom > Tenmile Range > Library > Autosar > AUTOSAR_SoftwareComponentTemplate.pdf 

4. Background
-------------
4.1  The VSI product provides the ability to debug AUTOSAR applications. Instead
     of manually composing a C application, VSI is integrated with BridgePoint.
     The AUTOSAR software component is modeled using BridgePoint and the C code
     is automatically generated [2],[3]. The mapping from xtUML model to
     AUTOSAR is specified in a transformation document [4].
4.2  VSI still needs the ARXML software component templates [5] for the
	 generation of the RTE to debug the application. Rather than manually
	 developing these templates, we will generate them from the software
	 component models developed on BridgePoint.
4.3  As a future extension, the reverse path is to be supported as well. The
	 user creates the ARXML software component template and we generate the
	 xtUML model of the component with all the necessary interfaces.

5. Analysis
-----------
5.1  General Requirements
5.1.1  Generation of an ARXML template for the Component Package of the
       BridgePoint project.
5.1.2  The ARXML template will reference mtx.arxml which is a fixed template
       containing the BridgePoint datatypes

5.2  AUTOSAR Requirements
5.2.1  A default composition for the components is to be created
5.2.2  Modes:
5.2.2.1  Basically, two modes are to be created initialization and execution
	 	 modes
5.2.2.2  The mode switch events that are generated by the RTE are used to
		 initialize our software components. These events have no dedicated
		 interfaces to carry them to the components and accordingly we simply
		 attach them to any "Required" sender/receiver ports of the components.
		 For components with no sender receiver interfaces to carry the mode
		 switch event, a dummy interface will be created. The utilization of
		 BSW service ports is to be investigated.
5.2.3  VSA only supports the AUTOSAR 3.0.1 and 3.0.2 schemas.
5.2.4  A timing event will be generated per component to continuously
	   interrogate the event queues. The timer periodicity can be derived from
	   the periodicity of the recurring timers used in the model or can as well
	   be supplied by the user.
5.2.5  Measurement should be supported by default for all interfaces data
	   elements

5.3  The ARXML generation pop-up menu item will only appear for the Component
     Package of the BridgePoint project.

5.4  Output:
5.4.1  Upon clicking the generation item, a progress window will show the
	   progress of the ARXML generation process.
5.4.2  The software component template is generated and appears in the project
	   files.

6. Design
---------
6.1  Overview
6.1.1  The ARXML generator's traverses a populated version of BridgePoint's
	   meta-model to collect all the necessary information of the software
	   component model.
6.1.2  Then it populates a model of the software component template with this
       information.
6.1.3  The populated software component template model is then used to generate
	   the required template.
6.1.4  This generator is NOT part of BridgePoint's meta-model but only a plug-in
       external to the actual BridgePoint internal engine.

6.2  Approach
6.2.1  The plug-in is to be created using the Eclipse Modeling Framework (EMF)
6.2.2  The AUTOSAR 3.0.2 schema will be used to automatically generate a
	   corresponding model (AUTOSAR model) Java code. This code actually
	   contains inherently the overall structure of the software component
	   template i.e. it contains a model of the software component template
	   referred to in (6.1)
6.2.3  The selected Component Package for which the ARXML template will be
	   generated, will be used to get a reference for the main System Model
	   representing the populated BridgePoint model. Using this reference, all
	   the populated BridgePoint meta-model Java instances can be traversed to
	   extract the required information.
6.2.4  A transformation layer will be developed with the sole purpose of mapping
       the extracted data to the AUTOSAR model i.e. filling the ARXML template
       model with the extracted data.
6.2.5  Rendering the populated software component template model is then made
	   through a simple call to an AUTOSAR resource creation function.

6.3  User Interface
6.3.1  Upon right-click of the Component Package in the modeling perspective of
       BridgePoint, a new pop-up menu item appears for the generation of the
       corresponding ARXML template.
6.3.2  A progress window will track the progress of the generation process.
6.3.3  The ARXML template will be generated at the root of the project folder.

6.5  Limitations and Future Extensions
6.5.1  The code generation of AUTOSAR software components is currently limited
       to the generation of interfaces having signals with a single parameter or
       none at all. According to the transformation document [4], for multiple
       parameters, an AUTOSAR record is created for the parameters. The ARXML
       template generation should support this transformation in synchronization
       with its support in AUTOSAR code generation [4].
6.5.2  In AUTOSAR, a port is associated with a specific interface for
	   communication. xtUML, on the other hand, supports the referencing of
	   several interfaces through a single port. The xtUML-AUTOSAR
	   transformation in the case of a port referencing multiple interfaces is
	   to be supported [4].

7. Design Comments
------------------
N/A

8. Work Required
----------------
Specified in the design section.

9. Unit Test
------------
9.1  SeatHeater Test
       _- Create the SeatHeater joint VSI/BP project
       _- Right-click on the SeatHeater project in Model Explorer or any package
       	  other than the Component Package
       _R The item "ARXML Document" is not available
       _- Right-click on the Component Package of the SeatHeater project
       _R The "ARXML Document" pop-up menu item is available
       _- Choose "ARXML Document -> Generate"
       _R A progress window will track the generation process
       _R The SeatHeater ARXML software component file is generated to the root
          of the project folder.
       _R The generated ARXML opens in the VSA AUTOSAR editor (no errors)
       _- Verify that the generated ARXML is correct through its comparison to
          the manually created version

End
---

$Log: dts0100617373.dnt,v $
Revision 1.4  2010/01/05 04:29:32  kbrown
job:dts0100644853
Batch commit of copyright change from 2009 to 2010 for BP CVS projects.

Revision 1.3  2009/09/15 12:09:16  hkashif
job:dts0100617373
addressed review issues

Revision 1.2  2009/09/09 14:12:38  hkashif
job:dts0100617373
updated design note

Revision 1.1  2009/09/08 12:09:56  hkashif
job:dts0100617373
Almost complete design note

