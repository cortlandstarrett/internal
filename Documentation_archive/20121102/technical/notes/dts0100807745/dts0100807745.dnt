========================================================================

File:      $RCSfile: dts0100807745.dnt,v $
Version:   $Revision: 1991 $
Modified:  $Date: 2012-11-02 14:29:43 -0700 (Fri, 02 Nov 2012) $

(c) Copyright 2007-2012 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Design Note
Support loading resources from jar files when executing realized code

1. Abstract
-----------
This note covers the addition to Verifier of the ability to bind non-class
resources. It also covers the ability to bind to more than one user specified
jar file.

2. History
----------
  final - dts0100807745.rvm

3. Document References
----------------------
[1] ClearQuest DEI dts0100807745 - Override ClassLoader.getResourceAsStream()
[2] ClearQuest DEI dts0100887931 - Enable users to co-simulate xtUML models
    together with external code packaged in pre-compiled libraries

4. Background
-------------
Customers are making increased use of realized classes in Verifier. They have
run up against an inability for code called from Verifier to bind non-class
resources such as images and fonts. This has been traced by the customer to a
missing implementation of the ClassLoader method, getResourceAsStream(). The
customer provided an example project that illustrates the problem. When this
project was analysed, it became apparent that the user needs to bind to multiple
jar files, so this ability is added to the requirements list.

5. Requirements
---------------
5.1 Allow binding to resource files defined in a jar file.
5.2 Allow user specified binding to multiple jar files.

6. Analysis
-----------
Fully described in 4. and 5. above.

7. Design
---------
7.1 getResourceAsStream()
This method was previously unimplemented. We add this method to BPClassLoader,
designing it to traverse the BPClassLoader class path entries looking for a
bundle entry that matches the path passed. If it is found, we return the result
of calling getInputStream() on the bundle entry.

7.2 Bind to multiple jar files
7.2.1 The realized external entity VM (Vm_c) is reworked to allow multiple class
path entries to be added to the BPClassLoader cache. In addition, we add a
method to perform eclipse variable substitution on each path. This allows user
models to specify class path entries in a platform independent manner.

7.2.2 BPDebugTarget is reworked to split the realized_class_path attribute
value added to the Component class using the ";" separator. The semi colon was
chosen because it is used by many operating systems as a path separator. How-
ever there is no dependency on the host operating system, because this string
is processed using the platform independent java.lang.String.split() method.
Each resulting individual path entry is added using the Vm_c.addUserClassPath()
method. The call to do this is moved from setUpForRealizedExecution() to the
init() method so that the feature is available to existing models that do not
use the fully realized components introduced with the work for [2].

8. Design Comments
------------------
None.

9. Work Required
----------------
Fully described in the Design section.

10. Unit Test
------------
10.1 All changes are specific to Verifier, so only the Verifier JUnit tests must
be rerun.

10.2 VerifierMessageTestGlobals
This test will be modified to add tests for jar binding and eclipse variable
substitution.

End
---

$Log: dts0100807745.dnt,v $
Revision 1.4  2012/07/18 14:15:30  campbell
Job: dts0100807745
Address review obs.

Revision 1.3  2012/07/06 14:43:28  campbell
Job: dts0100807745
Backing out additions made to the wrong design note.

Revision 1.1  2012/07/05 10:10:17  campbell
Job:dts0100807745
Introduced.

