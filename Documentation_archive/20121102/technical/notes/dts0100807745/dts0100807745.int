========================================================================

File:      $RCSfile$
Version:   $Revision: 1991 $
Modified:  $Date: 2012-11-02 14:29:43 -0700 (Fri, 02 Nov 2012) $

(c) Copyright 2007-2012 by Mentor Graphics Corp. All rights reserved.

========================================================================
This document contains information proprietary and confidential to
Mentor Graphics Corp., and is not for external distribution.
========================================================================

BridgePoint Project Implementation Note
Support loading resources from jar files when executing realized code

1. Abstract
-----------
This note covers the implementation details for the addition to Verifier of the
ability to bind non-class resources and the ability to bind to more than one
user specified jar file.

2. History
----------

3. Document References
----------------------
[1] ClearQuest DEI dts0100807745 - Override ClassLoader.getResourceAsStream()
[2] cvs://Documentation/internal/technical/notes/dts0100807745/dts0100807745.dnt

4. Background
-------------
See [2].

5. Requirements
---------------
See [2].

6. Work Required
----------------
See [2].

7. Implementation Comments
--------------------------
During test creation, it became apparent that there were some problems with
executing fully realized components. That is, components that have no OAL
whatsoever and rely entirely on the contents of the jarred realized code for
execution.

7.1 Reliance on Statement instances
There were several places within the Verifier message execution code that
assumed that at least one statement was present. These places were removed and
replaced with code which takes the appropriate action when a fully realized
message is being executed.

7.2 Reliance on an outer block instance
In addition, messages that return a value are flagged by the parser as having
errors. The normal user action to address this would be to turn off parsing for
these messages. Unfortunately, this causes such bodies to have no outer block
instances. The VIEC execution mechanism relies on the existence of a 'Block In
Stackframe' instance to track what modeled element is being executed. This must
be related to an outer block in order to satisfy the requirements of the meta-
model cardinality and to allow proper execution. This problem was addressed by
creating an empty outer block when encountering a message marked as Do not
Parse.

8. Unit Test
------------
8.1 Test binding to jarred executables

A new test component is added to the existing VIEC test model. This component,
'Jarred Test Provider', is fully realized as defined above[see section 7]. In
addition, realized data type and interface support classes are added to ensure
that all realized types can be retrieved from a jar file.

These new realized classes are compiled into a jar file which is placed into a
new folder in the test project, 'javalib'.  The path to this jar file is added
to the realized path attribute for the new test component. Finally, the JDT
classpath is modified to explicitly exclude the Jar classes in the event of a
rebuild by adding:

excluding="**/*Jar*.java"

to the relevant classpath entry. The project is then cleaned and rebuilt. This
ensures that no .class resources could be found by Verifier for the new test
model elements. Thus, the only place the executable code could come from is
from within the checked in jar, javalib/MessageTest.jar. This solution allows
us to check in the source files used for this test jar in the event it requires
to be rebuilt.

8.2 Test non executable resource binding and multiple jar file specification
An additional jar file is added to the javalib folder created above[See 8.1].
This jar file, resources.jar contains a single class BPJarResourceTest, together
with a test icon image. The name of this jar file is added to the class path
attribute value in the modeled representation of the test component.

8.3 A text file is added to the javalib folder that describes the steps needed
to rebuild the jar files in the event any maintenance is needed.

9. Code Changes
---------------
Branch name: Review-dts0100807745-02

VerifierMessageTestGlobals/javasrc/
    messagetest.testdeployment.referencedtoreferenced.declaredtodeclared/
    JarredTestProvider.java
VerifierMessageTestGlobals/javasrc/
    messagetest.testdeployment.referencedtoreferenced.declaredtodeclared/
    TestProvider.java
VerifierMessageTestGlobals/javasrc/
    messagetest.testdeployment.referencedtoreferenced.declaredtodeclared/
    JarredTestProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestInterfaceFromProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestInterfaceToProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestReplyFromProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestReplyToProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestInterfaceFromProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestInterfaceToProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestReplyFromProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testinterface/
    IJarredTestReplyToProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testlibrary/
    JarredTestProvider.java
VerifierMessageTestGlobals/javasrc/messagetest.testlibrary/
    JarredTestProvider.java
VerifierMessageTestGlobals/javasrc/resourcetester/BPJarResourceTester.java
VerifierMessageTestGlobals/javasrc/resourcetester/BPJarResourceTester.java
VerifierMessageTestGlobals/javasrc/resourcetester.icons/test-bp.gif
VerifierMessageTestGlobals/javasrc/testdatatypes/Jarred_Sdt_t.java
VerifierMessageTestGlobals/javasrc/testdatatypes/Jarred_Simple_sdt_t.java
VerifierMessageTestGlobals/javasrc/testdatatypes/Jarred_Sdt_t.java
VerifierMessageTestGlobals/javasrc/testdatatypes/Jarred_Simple_sdt_t.java
VerifierMessageTestGlobals/javalib/building_read_me.txt
VerifierMessageTestGlobals/javalib/MessageTest.jar
VerifierMessageTestGlobals/javalib/resources.jar
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Deployment/Referenced to Referenced/Jarred Root to Root/
    Jarred Root to Root.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Deployment/Referenced to Referenced/Referenced to Referenced.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Interface/Jarred Test Interface/Jarred Test Interface.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Interface/Jarred Test Reply/Jarred Test Reply.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Interface/Test Interface.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Component Execution Test Requirer/External Entities/
    External Entities.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Component Execution Test Requirer/Test Class/
    Test Class/ClassStateMachine/ClassStateMachine.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Component Execution Test Requirer/Test Class/
    Test Class/Test Class.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Component Execution Test Requirer/Test Class/
    Test Class.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Component Execution Test Requirer/Test Drivers/
    Test Drivers.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Component Execution Test Requirer/
    Jarred Component Execution Test Requirer.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Jarred Test Provider/Jarred Test Provider.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/MessageTest/
    Test Library/Test Library.xtuml
VerifierMessageTestGlobals/models/VerifierMessageTestGlobals/Test Datatypes/
    Test Datatypes.xtuml
VerifierMessageTestGlobals/.classpath

com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core/Vm_c.java
com.mentor.nucleus.bp.core/src/com.mentor.nucleus.bp.core.util/
    BPClassLoader.java
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Body/
    Block/Block.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Provided Operation/
    Provided Operation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Provided Signal/
    Provided Signal.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Required Operation/
    Required Operation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Component/Signal Provisions and Requirements/Required Signal/
    Required Signal.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Element Packaging/Package/Package.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    External Entities/External Entities.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Instance/Stack/Stack.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Invocation/Bridge Invocation/Bridge Invocation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/
    Invocation/Interface Operation Invocation/
    Interface Operation Invocation.xtuml
com.mentor.nucleus.bp.core/models/com.mentor.nucleus.bp.core/ooaofooa/Value/
    Bridge Value/Bridge Value.xtuml

com.mentor.nucleus.bp.debug.ui/src/com.mentor.nucleus.bp.debug.java.access/
    VerifierInvocationHandler.java
com.mentor.nucleus.bp.debug.ui/src/com.mentor.nucleus.bp.debug.ui.model/
    BPDebugTarget.java

com.mentor.nucleus.bp.debug.ui.test/src/com.mentor.nucleus.bp.debug.engine/
    VerifierMessageTestGlobals.java
com.mentor.nucleus.bp.debug.ui.test/src/
    com.mentor.nucleus.bp.debug.ui.test.execute/
    VerifierExecuteActionTestsGlobals.java

com.mentor.nucleus.bp.ui.text/src/com.mentor.nucleus.bp.ui.text.activity/
    AllActivityModifier.java

End
---

$Log$