---

Copyright 2013 Mentor Graphics Corp.  All Rights Reserved.

---

# Missing return values in realized elements cause parse errors
### xtUML Project Implementation Note

1. Abstract
-----------
This note describes the changes required to allow a preference for creating
parse errors when encountering an empty OAL body that requires a return
statement.

2. Document References
----------------------  
[1] Issues 158, https://github.com/xtuml/doc/issues/158  
[2] CQ Issue: dts0101025153  
[3] CQ Issue: dts0101036202

3. Background
-------------
When realized elements were introduced we did not consider what the parser does
with elements that require a return value.  Currently when doing a parse all,
all elements that require a return value and do not have one will have an error
created.  Users would like to suppress these errors as they do not intend to
write OAL in the action body.  Additionally, execution and code generation for
these elements is valid even without the return statement in OAL.

4. Requirements
---------------
4.1 An option should be available to prevent parse errors when an element
requires a return value and is realized.

5. Work Required
----------------
5.1 Add preference to disable parse errors for missing return values in empty
    bodies

A preference shall be added, which when enabled allows parse errors for missing
return values when an OAL body is empty.  This preference shall include a child
preference that when enabled will allow for errors when dealing with realized
elements.  The parser shall ignore this preference when dealing with elements
that have action language and shall create errors in the same way as it does
today.

The defaults for these two preferences shall be:

non-realized elements : enabled
realized elements : disabled

5.2 External entities

Currently external entities can be realized without the need to set a flag.  The
realization can occur automatically by placing realized code at the appropriate
location.  Recently a new attribute was added to the External Entity class, this
attribute allows specifying a location to realized code.  As 5.1 suggests there
is a preference to disable parsing for realized elements.  Since we cannot
always know if an EE is intended to be realized, this work shall only assume
them realized when a path is specified.  [3] is raised to add a flag in the same
way the Component class has one.  At that point the check for the realized path
can be removed and can be switched to check the flag value.

Until the flag is added, users can either specify the path to the realized code
or disable parsing using the Successful Parse Indicator value of 'Do not parse'.
 
6. Implementation Comments
--------------------------

7. Unit Test
------------

8. Code Changes
---------------

End
---

