/*
* generated by Xtext
*/
grammar InternalOAL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.argouml.xtuml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.argouml.xtuml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.argouml.xtuml.services.OALGrammarAccess;

}

@parser::members {
 
 	private OALGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OALGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCode
entryRuleCode 
:
{ before(grammarAccess.getCodeRule()); }
	 ruleCode
{ after(grammarAccess.getCodeRule()); } 
	 EOF 
;

// Rule Code
ruleCode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCodeAccess().getStatementsAssignment()); }
(rule__Code__StatementsAssignment)*
{ after(grammarAccess.getCodeAccess().getStatementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleobject_statement
entryRuleobject_statement 
:
{ before(grammarAccess.getObject_statementRule()); }
	 ruleobject_statement
{ after(grammarAccess.getObject_statementRule()); } 
	 EOF 
;

// Rule object_statement
ruleobject_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObject_statementAccess().getAlternatives()); }
(rule__Object_statement__Alternatives)
{ after(grammarAccess.getObject_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecreate_statement
entryRulecreate_statement 
:
{ before(grammarAccess.getCreate_statementRule()); }
	 rulecreate_statement
{ after(grammarAccess.getCreate_statementRule()); } 
	 EOF 
;

// Rule create_statement
rulecreate_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreate_statementAccess().getGroup()); }
(rule__Create_statement__Group__0)
{ after(grammarAccess.getCreate_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleselect_statement
entryRuleselect_statement 
:
{ before(grammarAccess.getSelect_statementRule()); }
	 ruleselect_statement
{ after(grammarAccess.getSelect_statementRule()); } 
	 EOF 
;

// Rule select_statement
ruleselect_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelect_statementAccess().getGroup()); }
(rule__Select_statement__Group__0)
{ after(grammarAccess.getSelect_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelate_statement
entryRulerelate_statement 
:
{ before(grammarAccess.getRelate_statementRule()); }
	 rulerelate_statement
{ after(grammarAccess.getRelate_statementRule()); } 
	 EOF 
;

// Rule relate_statement
rulerelate_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelate_statementAccess().getGroup()); }
(rule__Relate_statement__Group__0)
{ after(grammarAccess.getRelate_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunrelate_statement
entryRuleunrelate_statement 
:
{ before(grammarAccess.getUnrelate_statementRule()); }
	 ruleunrelate_statement
{ after(grammarAccess.getUnrelate_statementRule()); } 
	 EOF 
;

// Rule unrelate_statement
ruleunrelate_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnrelate_statementAccess().getGroup()); }
(rule__Unrelate_statement__Group__0)
{ after(grammarAccess.getUnrelate_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledelete_statement
entryRuledelete_statement 
:
{ before(grammarAccess.getDelete_statementRule()); }
	 ruledelete_statement
{ after(grammarAccess.getDelete_statementRule()); } 
	 EOF 
;

// Rule delete_statement
ruledelete_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelete_statementAccess().getGroup()); }
(rule__Delete_statement__Group__0)
{ after(grammarAccess.getDelete_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleobject_reference
entryRuleobject_reference 
:
{ before(grammarAccess.getObject_referenceRule()); }
	 ruleobject_reference
{ after(grammarAccess.getObject_referenceRule()); } 
	 EOF 
;

// Rule object_reference
ruleobject_reference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObject_referenceAccess().getAlternatives()); }
(rule__Object_reference__Alternatives)
{ after(grammarAccess.getObject_referenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelation
entryRulerelation 
:
{ before(grammarAccess.getRelationRule()); }
	 rulerelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule relation
rulerelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleassignment
entryRuleassignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleassignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule assignment
ruleassignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelvalue
entryRulelvalue 
:
{ before(grammarAccess.getLvalueRule()); }
	 rulelvalue
{ after(grammarAccess.getLvalueRule()); } 
	 EOF 
;

// Rule lvalue
rulelvalue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLvalueAccess().getVariableParserRuleCall()); }
	rulevariable
{ after(grammarAccess.getLvalueAccess().getVariableParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleflow_control_statement
entryRuleflow_control_statement 
:
{ before(grammarAccess.getFlow_control_statementRule()); }
	 ruleflow_control_statement
{ after(grammarAccess.getFlow_control_statementRule()); } 
	 EOF 
;

// Rule flow_control_statement
ruleflow_control_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlow_control_statementAccess().getAlternatives()); }
(rule__Flow_control_statement__Alternatives)
{ after(grammarAccess.getFlow_control_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpr2
entryRuleexpr2 
:
{ before(grammarAccess.getExpr2Rule()); }
	 ruleexpr2
{ after(grammarAccess.getExpr2Rule()); } 
	 EOF 
;

// Rule expr2
ruleexpr2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr2Access().getAlternatives()); }
(rule__Expr2__Alternatives)
{ after(grammarAccess.getExpr2Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesum
entryRulesum 
:
{ before(grammarAccess.getSumRule()); }
	 rulesum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule sum
rulesum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSumAccess().getGroup()); }
(rule__Sum__Group__0)
{ after(grammarAccess.getSumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleproduct
entryRuleproduct 
:
{ before(grammarAccess.getProductRule()); }
	 ruleproduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule product
ruleproduct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductAccess().getGroup()); }
(rule__Product__Group__0)
{ after(grammarAccess.getProductAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevalue
entryRulevalue 
:
{ before(grammarAccess.getValueRule()); }
	 rulevalue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule value
rulevalue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable
entryRulevariable 
:
{ before(grammarAccess.getVariableRule()); }
	 rulevariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule variable
rulevariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_name
entryRuleclass_name 
:
{ before(grammarAccess.getClass_nameRule()); }
	 ruleclass_name
{ after(grammarAccess.getClass_nameRule()); } 
	 EOF 
;

// Rule class_name
ruleclass_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_nameAccess().getNameParserRuleCall()); }
	rulename
{ after(grammarAccess.getClass_nameAccess().getNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulename
entryRulename 
:
{ before(grammarAccess.getNameRule()); }
	 rulename
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule name
rulename
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSt1Assignment_0_0()); }
(rule__Statement__St1Assignment_0_0)
{ after(grammarAccess.getStatementAccess().getSt1Assignment_0_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSt2Assignment_0_1()); }
(rule__Statement__St2Assignment_0_1)
{ after(grammarAccess.getStatementAccess().getSt2Assignment_0_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSt3Assignment_0_2()); }
(rule__Statement__St3Assignment_0_2)
{ after(grammarAccess.getStatementAccess().getSt3Assignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getGroup_0()); }
(rule__Object_statement__Group_0__0)
{ after(grammarAccess.getObject_statementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getObject_statementAccess().getSelect_statementParserRuleCall_1()); }
	ruleselect_statement
{ after(grammarAccess.getObject_statementAccess().getSelect_statementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getObject_statementAccess().getGroup_2()); }
(rule__Object_statement__Group_2__0)
{ after(grammarAccess.getObject_statementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getObject_statementAccess().getGroup_3()); }
(rule__Object_statement__Group_3__0)
{ after(grammarAccess.getObject_statementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getObject_statementAccess().getGroup_4()); }
(rule__Object_statement__Group_4__0)
{ after(grammarAccess.getObject_statementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getAnyKeyword_1_0()); }

	'any' 

{ after(grammarAccess.getSelect_statementAccess().getAnyKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSelect_statementAccess().getManyKeyword_1_1()); }

	'many' 

{ after(grammarAccess.getSelect_statementAccess().getManyKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getSelect_statementAccess().getOneKeyword_1_2()); }

	'one' 

{ after(grammarAccess.getSelect_statementAccess().getOneKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getGroup_3_0()); }
(rule__Select_statement__Group_3_0__0)
{ after(grammarAccess.getSelect_statementAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getSelect_statementAccess().getGroup_3_1()); }
(rule__Select_statement__Group_3_1__0)
{ after(grammarAccess.getSelect_statementAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object_reference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_referenceAccess().getSelfKeyword_0()); }

	'self' 

{ after(grammarAccess.getObject_referenceAccess().getSelfKeyword_0()); }
)

    |(
{ before(grammarAccess.getObject_referenceAccess().getNameParserRuleCall_1()); }
	rulename
{ after(grammarAccess.getObject_referenceAccess().getNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getGroup_0()); }
(rule__Flow_control_statement__Group_0__0)
{ after(grammarAccess.getFlow_control_statementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFlow_control_statementAccess().getGroup_1()); }
(rule__Flow_control_statement__Group_1__0)
{ after(grammarAccess.getFlow_control_statementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFlow_control_statementAccess().getGroup_2()); }
(rule__Flow_control_statement__Group_2__0)
{ after(grammarAccess.getFlow_control_statementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEqualsSignEqualsSignKeyword_1_1_0_0()); }

	'==' 

{ after(grammarAccess.getExpressionAccess().getEqualsSignEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLessThanSignGreaterThanSignKeyword_1_1_0_1()); }

	'<>' 

{ after(grammarAccess.getExpressionAccess().getLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLessThanSignKeyword_1_1_0_2()); }

	'<' 

{ after(grammarAccess.getExpressionAccess().getLessThanSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGreaterThanSignKeyword_1_1_0_3()); }

	'>' 

{ after(grammarAccess.getExpressionAccess().getGreaterThanSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_1_0_4()); }

	'>=' 

{ after(grammarAccess.getExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getLessThanSignEqualsSignKeyword_1_1_0_5()); }

	'<=' 

{ after(grammarAccess.getExpressionAccess().getLessThanSignEqualsSignKeyword_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr2Access().getGroup_0()); }
(rule__Expr2__Group_0__0)
{ after(grammarAccess.getExpr2Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpr2Access().getSAssignment_1()); }
(rule__Expr2__SAssignment_1)
{ after(grammarAccess.getExpr2Access().getSAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr2Access().getEmptyKeyword_0_0_0()); }

	'empty' 

{ after(grammarAccess.getExpr2Access().getEmptyKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpr2Access().getNot_emptyKeyword_0_0_1()); }

	'not_empty' 

{ after(grammarAccess.getExpr2Access().getNot_emptyKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getPlusSignKeyword_1_0_0()); }

	'+' 

{ after(grammarAccess.getSumAccess().getPlusSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getSumAccess().getHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getSumAccess().getHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getProductAccess().getAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getProductAccess().getSolidusKeyword_1_0_1()); }

	'/' 

{ after(grammarAccess.getProductAccess().getSolidusKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getProductAccess().getPercentSignKeyword_1_0_2()); }

	'%' 

{ after(grammarAccess.getProductAccess().getPercentSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getGroup_0()); }
(rule__Value__Group_0__0)
{ after(grammarAccess.getValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getGroup_1()); }
(rule__Value__Group_1__0)
{ after(grammarAccess.getValueAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getGroup_2()); }
(rule__Value__Group_2__0)
{ after(grammarAccess.getValueAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getGroup_3()); }
(rule__Value__Group_3__0)
{ after(grammarAccess.getValueAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getGroup_4()); }
(rule__Value__Group_4__0)
{ after(grammarAccess.getValueAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameParserRuleCall_0()); }
	rulename
{ after(grammarAccess.getVariableAccess().getNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
(rule__Statement__Alternatives_0)
{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object_statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_0__0__Impl
	rule__Object_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getCreate_statementParserRuleCall_0_0()); }
	rulecreate_statement
{ after(grammarAccess.getObject_statementAccess().getCreate_statementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object_statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getTypeCreateAction_0_1()); }
(

)
{ after(grammarAccess.getObject_statementAccess().getTypeCreateAction_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_2__0__Impl
	rule__Object_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getRelate_statementParserRuleCall_2_0()); }
	rulerelate_statement
{ after(grammarAccess.getObject_statementAccess().getRelate_statementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getTypeRelateAction_2_1()); }
(

)
{ after(grammarAccess.getObject_statementAccess().getTypeRelateAction_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_3__0__Impl
	rule__Object_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getUnrelate_statementParserRuleCall_3_0()); }
	ruleunrelate_statement
{ after(grammarAccess.getObject_statementAccess().getUnrelate_statementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getTypeRelateAction_3_1()); }
(

)
{ after(grammarAccess.getObject_statementAccess().getTypeRelateAction_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object_statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_4__0__Impl
	rule__Object_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getDelete_statementParserRuleCall_4_0()); }
	ruledelete_statement
{ after(grammarAccess.getObject_statementAccess().getDelete_statementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object_statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object_statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object_statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObject_statementAccess().getTypeDeleteAction_4_1()); }
(

)
{ after(grammarAccess.getObject_statementAccess().getTypeDeleteAction_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Create_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create_statement__Group__0__Impl
	rule__Create_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Create_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreate_statementAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getCreate_statementAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Create_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create_statement__Group__1__Impl
	rule__Create_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Create_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreate_statementAccess().getObjectKeyword_1()); }

	'object' 

{ after(grammarAccess.getCreate_statementAccess().getObjectKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Create_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create_statement__Group__2__Impl
	rule__Create_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Create_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreate_statementAccess().getNameParserRuleCall_2()); }
(	rulename)?
{ after(grammarAccess.getCreate_statementAccess().getNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Create_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create_statement__Group__3__Impl
	rule__Create_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Create_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreate_statementAccess().getOfKeyword_3()); }

	'of' 

{ after(grammarAccess.getCreate_statementAccess().getOfKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Create_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Create_statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Create_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreate_statementAccess().getClass_nameParserRuleCall_4()); }
	ruleclass_name
{ after(grammarAccess.getCreate_statementAccess().getClass_nameParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Select_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group__0__Impl
	rule__Select_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelect_statementAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group__1__Impl
	rule__Select_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getAlternatives_1()); }
(rule__Select_statement__Alternatives_1)
{ after(grammarAccess.getSelect_statementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group__2__Impl
	rule__Select_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getVarAssignment_2()); }
(rule__Select_statement__VarAssignment_2)
{ after(grammarAccess.getSelect_statementAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getAlternatives_3()); }
(rule__Select_statement__Alternatives_3)
{ after(grammarAccess.getSelect_statementAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Select_statement__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0__0__Impl
	rule__Select_statement__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getFromKeyword_3_0_0()); }

	'from' 

{ after(grammarAccess.getSelect_statementAccess().getFromKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0__1__Impl
	rule__Select_statement__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getInstancesKeyword_3_0_1()); }

	'instances' 

{ after(grammarAccess.getSelect_statementAccess().getInstancesKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0__2__Impl
	rule__Select_statement__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getOfKeyword_3_0_2()); }

	'of' 

{ after(grammarAccess.getSelect_statementAccess().getOfKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0__3__Impl
	rule__Select_statement__Group_3_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getClass_nameParserRuleCall_3_0_3()); }
	ruleclass_name
{ after(grammarAccess.getSelect_statementAccess().getClass_nameParserRuleCall_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getGroup_3_0_4()); }
(rule__Select_statement__Group_3_0_4__0)?
{ after(grammarAccess.getSelect_statementAccess().getGroup_3_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Select_statement__Group_3_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0_4__0__Impl
	rule__Select_statement__Group_3_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getWhereKeyword_3_0_4_0()); }

	'where' 

{ after(grammarAccess.getSelect_statementAccess().getWhereKeyword_3_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getExpressionParserRuleCall_3_0_4_1()); }
	ruleexpression
{ after(grammarAccess.getSelect_statementAccess().getExpressionParserRuleCall_3_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Select_statement__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1__0__Impl
	rule__Select_statement__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getRelatedKeyword_3_1_0()); }

	'related' 

{ after(grammarAccess.getSelect_statementAccess().getRelatedKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1__1__Impl
	rule__Select_statement__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getByKeyword_3_1_1()); }

	'by' 

{ after(grammarAccess.getSelect_statementAccess().getByKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1__2__Impl
	rule__Select_statement__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getObject_referenceParserRuleCall_3_1_2()); }
	ruleobject_reference
{ after(grammarAccess.getSelect_statementAccess().getObject_referenceParserRuleCall_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1__3__Impl
	rule__Select_statement__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSelect_statementAccess().getGroup_3_1_3()); }
(rule__Select_statement__Group_3_1_3__0)
{ after(grammarAccess.getSelect_statementAccess().getGroup_3_1_3()); }
)
(
{ before(grammarAccess.getSelect_statementAccess().getGroup_3_1_3()); }
(rule__Select_statement__Group_3_1_3__0)*
{ after(grammarAccess.getSelect_statementAccess().getGroup_3_1_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getGroup_3_1_4()); }
(rule__Select_statement__Group_3_1_4__0)?
{ after(grammarAccess.getSelect_statementAccess().getGroup_3_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Select_statement__Group_3_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_3__0__Impl
	rule__Select_statement__Group_3_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getHyphenMinusGreaterThanSignKeyword_3_1_3_0()); }

	'->' 

{ after(grammarAccess.getSelect_statementAccess().getHyphenMinusGreaterThanSignKeyword_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_3__1__Impl
	rule__Select_statement__Group_3_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getClass_nameParserRuleCall_3_1_3_1()); }
	ruleclass_name
{ after(grammarAccess.getSelect_statementAccess().getClass_nameParserRuleCall_3_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_3__2__Impl
	rule__Select_statement__Group_3_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getLeftSquareBracketKeyword_3_1_3_2()); }

	'[' 

{ after(grammarAccess.getSelect_statementAccess().getLeftSquareBracketKeyword_3_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_3__3__Impl
	rule__Select_statement__Group_3_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getRelationParserRuleCall_3_1_3_3()); }
	rulerelation
{ after(grammarAccess.getSelect_statementAccess().getRelationParserRuleCall_3_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getRightSquareBracketKeyword_3_1_3_4()); }

	']' 

{ after(grammarAccess.getSelect_statementAccess().getRightSquareBracketKeyword_3_1_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Select_statement__Group_3_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_4__0__Impl
	rule__Select_statement__Group_3_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getWhereKeyword_3_1_4_0()); }

	'where' 

{ after(grammarAccess.getSelect_statementAccess().getWhereKeyword_3_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select_statement__Group_3_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select_statement__Group_3_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__Group_3_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getExpressionParserRuleCall_3_1_4_1()); }
	ruleexpression
{ after(grammarAccess.getSelect_statementAccess().getExpressionParserRuleCall_3_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relate_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relate_statement__Group__0__Impl
	rule__Relate_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relate_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelate_statementAccess().getRelateKeyword_0()); }

	'relate' 

{ after(grammarAccess.getRelate_statementAccess().getRelateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relate_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relate_statement__Group__1__Impl
	rule__Relate_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relate_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelate_statementAccess().getObject_referenceParserRuleCall_1()); }
	ruleobject_reference
{ after(grammarAccess.getRelate_statementAccess().getObject_referenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relate_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relate_statement__Group__2__Impl
	rule__Relate_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relate_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelate_statementAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getRelate_statementAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relate_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relate_statement__Group__3__Impl
	rule__Relate_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relate_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelate_statementAccess().getObject_referenceParserRuleCall_3()); }
	ruleobject_reference
{ after(grammarAccess.getRelate_statementAccess().getObject_referenceParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relate_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relate_statement__Group__4__Impl
	rule__Relate_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relate_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelate_statementAccess().getAcrossKeyword_4()); }

	'across' 

{ after(grammarAccess.getRelate_statementAccess().getAcrossKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relate_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relate_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relate_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelate_statementAccess().getRelationParserRuleCall_5()); }
	rulerelation
{ after(grammarAccess.getRelate_statementAccess().getRelationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Unrelate_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unrelate_statement__Group__0__Impl
	rule__Unrelate_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unrelate_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrelate_statementAccess().getUnrelateKeyword_0()); }

	'unrelate' 

{ after(grammarAccess.getUnrelate_statementAccess().getUnrelateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unrelate_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unrelate_statement__Group__1__Impl
	rule__Unrelate_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unrelate_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrelate_statementAccess().getObject_referenceParserRuleCall_1()); }
	ruleobject_reference
{ after(grammarAccess.getUnrelate_statementAccess().getObject_referenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unrelate_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unrelate_statement__Group__2__Impl
	rule__Unrelate_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Unrelate_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrelate_statementAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getUnrelate_statementAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unrelate_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unrelate_statement__Group__3__Impl
	rule__Unrelate_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Unrelate_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrelate_statementAccess().getObject_referenceParserRuleCall_3()); }
	ruleobject_reference
{ after(grammarAccess.getUnrelate_statementAccess().getObject_referenceParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unrelate_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unrelate_statement__Group__4__Impl
	rule__Unrelate_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Unrelate_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrelate_statementAccess().getAcrossKeyword_4()); }

	'across' 

{ after(grammarAccess.getUnrelate_statementAccess().getAcrossKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unrelate_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unrelate_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unrelate_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrelate_statementAccess().getRelationParserRuleCall_5()); }
	rulerelation
{ after(grammarAccess.getUnrelate_statementAccess().getRelationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Delete_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delete_statement__Group__0__Impl
	rule__Delete_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelete_statementAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getDelete_statementAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delete_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delete_statement__Group__1__Impl
	rule__Delete_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelete_statementAccess().getObjectKeyword_1()); }

	'object' 

{ after(grammarAccess.getDelete_statementAccess().getObjectKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delete_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delete_statement__Group__2__Impl
	rule__Delete_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelete_statementAccess().getInstanceKeyword_2()); }

	'instance' 

{ after(grammarAccess.getDelete_statementAccess().getInstanceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delete_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delete_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelete_statementAccess().getObject_referenceParserRuleCall_3()); }
	ruleobject_reference
{ after(grammarAccess.getDelete_statementAccess().getObject_referenceParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRELATION_NAMETerminalRuleCall_0()); }
	RULE_RELATION_NAME
{ after(grammarAccess.getRelationAccess().getRELATION_NAMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_1()); }
(rule__Relation__Group_1__0)?
{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getRelationAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
{ after(grammarAccess.getRelationAccess().getSTRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignKeyword_0()); }
(
	'assign' 
)?
{ after(grammarAccess.getAssignmentAccess().getAssignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLvalueParserRuleCall_1()); }
	rulelvalue
{ after(grammarAccess.getAssignmentAccess().getLvalueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEAssignment_3()); }
(rule__Assignment__EAssignment_3)
{ after(grammarAccess.getAssignmentAccess().getEAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Flow_control_statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__0__Impl
	rule__Flow_control_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getTypeStatementIfAction_0_0()); }
(

)
{ after(grammarAccess.getFlow_control_statementAccess().getTypeStatementIfAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__1__Impl
	rule__Flow_control_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getIfKeyword_0_1()); }

	'if' 

{ after(grammarAccess.getFlow_control_statementAccess().getIfKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__2__Impl
	rule__Flow_control_statement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getExprAssignment_0_2()); }
(rule__Flow_control_statement__ExprAssignment_0_2)
{ after(grammarAccess.getFlow_control_statementAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__3__Impl
	rule__Flow_control_statement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getThenKeyword_0_3()); }

	'then' 

{ after(grammarAccess.getFlow_control_statementAccess().getThenKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__4__Impl
	rule__Flow_control_statement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_0_4()); }
(rule__Flow_control_statement__SubstatementsAssignment_0_4)*
{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__5__Impl
	rule__Flow_control_statement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getGroup_0_5()); }
(rule__Flow_control_statement__Group_0_5__0)*
{ after(grammarAccess.getFlow_control_statementAccess().getGroup_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__6__Impl
	rule__Flow_control_statement__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getGroup_0_6()); }
(rule__Flow_control_statement__Group_0_6__0)?
{ after(grammarAccess.getFlow_control_statementAccess().getGroup_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__7__Impl
	rule__Flow_control_statement__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getEndKeyword_0_7()); }

	'end' 

{ after(grammarAccess.getFlow_control_statementAccess().getEndKeyword_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getIfKeyword_0_8()); }

	'if' 

{ after(grammarAccess.getFlow_control_statementAccess().getIfKeyword_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Flow_control_statement__Group_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0_5__0__Impl
	rule__Flow_control_statement__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getElifKeyword_0_5_0()); }

	'elif' 

{ after(grammarAccess.getFlow_control_statementAccess().getElifKeyword_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0_5__1__Impl
	rule__Flow_control_statement__Group_0_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getElifexprAssignment_0_5_1()); }
(rule__Flow_control_statement__ElifexprAssignment_0_5_1)
{ after(grammarAccess.getFlow_control_statementAccess().getElifexprAssignment_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0_5__2__Impl
	rule__Flow_control_statement__Group_0_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getThenKeyword_0_5_2()); }

	'then' 

{ after(grammarAccess.getFlow_control_statementAccess().getThenKeyword_0_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_0_5_3()); }
(rule__Flow_control_statement__SubstatementsAssignment_0_5_3)*
{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_0_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Flow_control_statement__Group_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0_6__0__Impl
	rule__Flow_control_statement__Group_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getElseKeyword_0_6_0()); }

	'else' 

{ after(grammarAccess.getFlow_control_statementAccess().getElseKeyword_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_0_6_1()); }
(rule__Flow_control_statement__SubstatementsAssignment_0_6_1)*
{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow_control_statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__0__Impl
	rule__Flow_control_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getTypeStatementForAction_1_0()); }
(

)
{ after(grammarAccess.getFlow_control_statementAccess().getTypeStatementForAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__1__Impl
	rule__Flow_control_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getForKeyword_1_1()); }

	'for' 

{ after(grammarAccess.getFlow_control_statementAccess().getForKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__2__Impl
	rule__Flow_control_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getLvalueParserRuleCall_1_2()); }
	rulelvalue
{ after(grammarAccess.getFlow_control_statementAccess().getLvalueParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__3__Impl
	rule__Flow_control_statement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getOfKeyword_1_3()); }

	'of' 

{ after(grammarAccess.getFlow_control_statementAccess().getOfKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__4__Impl
	rule__Flow_control_statement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getListAssignment_1_4()); }
(rule__Flow_control_statement__ListAssignment_1_4)
{ after(grammarAccess.getFlow_control_statementAccess().getListAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__5__Impl
	rule__Flow_control_statement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getDoKeyword_1_5()); }

	'do' 

{ after(grammarAccess.getFlow_control_statementAccess().getDoKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__6__Impl
	rule__Flow_control_statement__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_1_6()); }
(rule__Flow_control_statement__SubstatementsAssignment_1_6)*
{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__7__Impl
	rule__Flow_control_statement__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getEndKeyword_1_7()); }

	'end' 

{ after(grammarAccess.getFlow_control_statementAccess().getEndKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getForKeyword_1_8()); }

	'for' 

{ after(grammarAccess.getFlow_control_statementAccess().getForKeyword_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Flow_control_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__0__Impl
	rule__Flow_control_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getTypeStatementWhileAction_2_0()); }
(

)
{ after(grammarAccess.getFlow_control_statementAccess().getTypeStatementWhileAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__1__Impl
	rule__Flow_control_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getWhileKeyword_2_1()); }

	'while' 

{ after(grammarAccess.getFlow_control_statementAccess().getWhileKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__2__Impl
	rule__Flow_control_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getExprAssignment_2_2()); }
(rule__Flow_control_statement__ExprAssignment_2_2)
{ after(grammarAccess.getFlow_control_statementAccess().getExprAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__3__Impl
	rule__Flow_control_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getDoKeyword_2_3()); }

	'do' 

{ after(grammarAccess.getFlow_control_statementAccess().getDoKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__4__Impl
	rule__Flow_control_statement__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_2_4()); }
(rule__Flow_control_statement__SubstatementsAssignment_2_4)*
{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__5__Impl
	rule__Flow_control_statement__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getEndKeyword_2_5()); }

	'end' 

{ after(grammarAccess.getFlow_control_statementAccess().getEndKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow_control_statement__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow_control_statement__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getWhileKeyword_2_6()); }

	'while' 

{ after(grammarAccess.getFlow_control_statementAccess().getWhileKeyword_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getExpressionAccess().getNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNeAssignment_0_1()); }
(rule__Expression__NeAssignment_0_1)
{ after(grammarAccess.getExpressionAccess().getNeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLsAssignment_1_0()); }
(rule__Expression__LsAssignment_1_0)
{ after(grammarAccess.getExpressionAccess().getLsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_1()); }
(rule__Expression__Group_1_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__0__Impl
	rule__Expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_1_1_0()); }
(rule__Expression__Alternatives_1_1_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRsAssignment_1_1_1()); }
(rule__Expression__RsAssignment_1_1_1)
{ after(grammarAccess.getExpressionAccess().getRsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr2__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr2__Group_0__0__Impl
	rule__Expr2__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr2Access().getAlternatives_0_0()); }
(rule__Expr2__Alternatives_0_0)
{ after(grammarAccess.getExpr2Access().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr2__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr2__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr2Access().getNAssignment_0_1()); }
(rule__Expr2__NAssignment_0_1)
{ after(grammarAccess.getExpr2Access().getNAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getLtAssignment_0()); }
(rule__Sum__LtAssignment_0)
{ after(grammarAccess.getSumAccess().getLtAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getGroup_1()); }
(rule__Sum__Group_1__0)*
{ after(grammarAccess.getSumAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sum__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sum__Group_1__0__Impl
	rule__Sum__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getAlternatives_1_0()); }
(rule__Sum__Alternatives_1_0)
{ after(grammarAccess.getSumAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sum__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getRtAssignment_1_1()); }
(rule__Sum__RtAssignment_1_1)
{ after(grammarAccess.getSumAccess().getRtAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Product__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getLfAssignment_0()); }
(rule__Product__LfAssignment_0)
{ after(grammarAccess.getProductAccess().getLfAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getGroup_1()); }
(rule__Product__Group_1__0)*
{ after(grammarAccess.getProductAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Product__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group_1__0__Impl
	rule__Product__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getAlternatives_1_0()); }
(rule__Product__Alternatives_1_0)
{ after(grammarAccess.getProductAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getRfAssignment_1_1()); }
(rule__Product__RfAssignment_1_1)
{ after(grammarAccess.getProductAccess().getRfAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getValueAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_0__1__Impl
	rule__Value__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getExpressionParserRuleCall_0_1()); }
	ruleexpression
{ after(grammarAccess.getValueAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getValueAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Value__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__0__Impl
	rule__Value__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getVariableParserRuleCall_1_0()); }
	rulevariable
{ after(grammarAccess.getValueAccess().getVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTypeValueVariableAction_1_1()); }
(

)
{ after(grammarAccess.getValueAccess().getTypeValueVariableAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_2__0__Impl
	rule__Value__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTrueKeyword_2_0()); }

	'true' 

{ after(grammarAccess.getValueAccess().getTrueKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTypeConstantAction_2_1()); }
(

)
{ after(grammarAccess.getValueAccess().getTypeConstantAction_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_3__0__Impl
	rule__Value__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getFalseKeyword_3_0()); }

	'false' 

{ after(grammarAccess.getValueAccess().getFalseKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTypeConstantAction_3_1()); }
(

)
{ after(grammarAccess.getValueAccess().getTypeConstantAction_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__0__Impl
	rule__Value__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getINTTerminalRuleCall_4_0()); }
	RULE_INT
{ after(grammarAccess.getValueAccess().getINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTypeConstantAction_4_1()); }
(

)
{ after(grammarAccess.getValueAccess().getTypeConstantAction_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getObject_referenceParserRuleCall_1_0()); }
	ruleobject_reference
{ after(grammarAccess.getVariableAccess().getObject_referenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
	rule__Variable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getVariableAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
{ after(grammarAccess.getVariableAccess().getIDTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Code__StatementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getStatementsStatementParserRuleCall_0()); }
	rulestatement{ after(grammarAccess.getCodeAccess().getStatementsStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__St1Assignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSt1AssignmentParserRuleCall_0_0_0()); }
	ruleassignment{ after(grammarAccess.getStatementAccess().getSt1AssignmentParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__St2Assignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSt2Object_statementParserRuleCall_0_1_0()); }
	ruleobject_statement{ after(grammarAccess.getStatementAccess().getSt2Object_statementParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__St3Assignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSt3Flow_control_statementParserRuleCall_0_2_0()); }
	ruleflow_control_statement{ after(grammarAccess.getStatementAccess().getSt3Flow_control_statementParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select_statement__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelect_statementAccess().getVarNameParserRuleCall_2_0()); }
	rulename{ after(grammarAccess.getSelect_statementAccess().getVarNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__EAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEExpressionParserRuleCall_3_0()); }
	ruleexpression{ after(grammarAccess.getAssignmentAccess().getEExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getExprExpressionParserRuleCall_0_2_0()); }
	ruleexpression{ after(grammarAccess.getFlow_control_statementAccess().getExprExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__SubstatementsAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_0_4_0()); }
	rulestatement{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__ElifexprAssignment_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getElifexprExpressionParserRuleCall_0_5_1_0()); }
	ruleexpression{ after(grammarAccess.getFlow_control_statementAccess().getElifexprExpressionParserRuleCall_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__SubstatementsAssignment_0_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_0_5_3_0()); }
	rulestatement{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_0_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__SubstatementsAssignment_0_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_0_6_1_0()); }
	rulestatement{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_0_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__ListAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getListNameParserRuleCall_1_4_0()); }
	rulename{ after(grammarAccess.getFlow_control_statementAccess().getListNameParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__SubstatementsAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_1_6_0()); }
	rulestatement{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__ExprAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getExprExpressionParserRuleCall_2_2_0()); }
	ruleexpression{ after(grammarAccess.getFlow_control_statementAccess().getExprExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow_control_statement__SubstatementsAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_2_4_0()); }
	rulestatement{ after(grammarAccess.getFlow_control_statementAccess().getSubstatementsStatementParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNeExpressionParserRuleCall_0_1_0()); }
	ruleexpression{ after(grammarAccess.getExpressionAccess().getNeExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLsExpr2ParserRuleCall_1_0_0()); }
	ruleexpr2{ after(grammarAccess.getExpressionAccess().getLsExpr2ParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRsExpr2ParserRuleCall_1_1_1_0()); }
	ruleexpr2{ after(grammarAccess.getExpressionAccess().getRsExpr2ParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__NAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr2Access().getNNameParserRuleCall_0_1_0()); }
	rulename{ after(grammarAccess.getExpr2Access().getNNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr2__SAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr2Access().getSSumParserRuleCall_1_0()); }
	rulesum{ after(grammarAccess.getExpr2Access().getSSumParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__LtAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getLtProductParserRuleCall_0_0()); }
	ruleproduct{ after(grammarAccess.getSumAccess().getLtProductParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__RtAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSumAccess().getRtProductParserRuleCall_1_1_0()); }
	ruleproduct{ after(grammarAccess.getSumAccess().getRtProductParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__LfAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getLfValueParserRuleCall_0_0()); }
	rulevalue{ after(grammarAccess.getProductAccess().getLfValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__RfAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getRfValueParserRuleCall_1_1_0()); }
	rulevalue{ after(grammarAccess.getProductAccess().getRfValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_RELATION_NAME : 'R' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


